{
  "api_ai/ReactiveAI.Intelligence.Actors.AiCollection.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actors.AiCollection.html",
    "title": "Class AiCollection | Reactive",
    "keywords": "Class AiCollection Inheritance System.Object AiCollection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actors Assembly :ReactiveAI.dll Syntax public class AiCollection : IAICollection Constructors | Improve this Doc View Source AiCollection(IBehaviourCollection) Declaration public AiCollection(IBehaviourCollection behaviourCollection) Parameters Type Name Description IBehaviourCollection behaviourCollection Properties | Improve this Doc View Source Actions Declaration public IActionCollection Actions { get; } Property Value Type Description IActionCollection Implements IAICollection.Actions | Improve this Doc View Source Behaviours Declaration public IBehaviourCollection Behaviours { get; } Property Value Type Description IBehaviourCollection Implements IAICollection.Behaviours | Improve this Doc View Source Considerations Declaration public IConsiderationCollection Considerations { get; } Property Value Type Description IConsiderationCollection Implements IAICollection.Considerations | Improve this Doc View Source Options Declaration public IOptionCollection Options { get; } Property Value Type Description IOptionCollection Implements IAICollection.Options Methods | Improve this Doc View Source Add(IUtilityAI) Declaration public bool Add(IUtilityAI ai) Parameters Type Name Description IUtilityAI ai Returns Type Description System.Boolean Implements IAICollection.Add(IUtilityAI) | Improve this Doc View Source Clear() Declaration public void Clear() Implements IAICollection.Clear() | Improve this Doc View Source ClearAll() Declaration public void ClearAll() Implements IAICollection.ClearAll() | Improve this Doc View Source Contains(String) Declaration public bool Contains(string nameId) Parameters Type Name Description System.String nameId Returns Type Description System.Boolean Implements IAICollection.Contains(String) | Improve this Doc View Source Create(String) Declaration public IUtilityAI Create(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IUtilityAI Implements IAICollection.Create(String) | Improve this Doc View Source GetAi(String) Declaration public IUtilityAI GetAi(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IUtilityAI Implements IAICollection.GetAi(String)"
  },
  "api_ai/ReactiveAI.Intelligence.Actors.AiCollectionConstructor.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actors.AiCollectionConstructor.html",
    "title": "Class AiCollectionConstructor | Reactive",
    "keywords": "Class AiCollectionConstructor Inheritance System.Object AiCollectionConstructor Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actors Assembly :ReactiveAI.dll Syntax public static class AiCollectionConstructor Methods | Improve this Doc View Source Create() Declaration public static IAICollection Create() Returns Type Description IAICollection"
  },
  "api_ai/ReactiveAI.Intelligence.Actors.DecisionMaker.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actors.DecisionMaker.html",
    "title": "Class DecisionMaker | Reactive",
    "keywords": "Class DecisionMaker Inheritance System.Object DecisionMakerBase DecisionMaker Inherited Members DecisionMakerBase.State DecisionMakerBase.Start() DecisionMakerBase.Stop() DecisionMakerBase.Pause() DecisionMakerBase.Resume() DecisionMakerBase.Think() DecisionMakerBase.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actors Assembly :ReactiveAI.dll Syntax public sealed class DecisionMaker : DecisionMakerBase, IDecisionMaker Constructors | Improve this Doc View Source DecisionMaker(IUtilityAI, IContextProvider, IScheduler) Declaration public DecisionMaker(IUtilityAI uai, IContextProvider contextProvider, IScheduler aiSched) Parameters Type Name Description IUtilityAI uai IContextProvider contextProvider IScheduler aiSched Properties | Improve this Doc View Source InitThinkDelayMax Declaration public float InitThinkDelayMax { get; set; } Property Value Type Description System.Single | Improve this Doc View Source InitThinkDelayMin Declaration public float InitThinkDelayMin { get; set; } Property Value Type Description System.Single | Improve this Doc View Source InitUpdateDelayMax Declaration public float InitUpdateDelayMax { get; set; } Property Value Type Description System.Single | Improve this Doc View Source InitUpdateDelayMin Declaration public float InitUpdateDelayMin { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ThinkDelayMax Declaration public float ThinkDelayMax { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ThinkDelayMin Declaration public float ThinkDelayMin { get; set; } Property Value Type Description System.Single | Improve this Doc View Source UpdateDelayMax Declaration public float UpdateDelayMax { get; set; } Property Value Type Description System.Single | Improve this Doc View Source UpdateDelayMin Declaration public float UpdateDelayMin { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source OnPause() Declaration protected override void OnPause() Overrides DecisionMakerBase.OnPause() | Improve this Doc View Source OnResume() Declaration protected override void OnResume() Overrides DecisionMakerBase.OnResume() | Improve this Doc View Source OnStart() Declaration protected override void OnStart() Overrides DecisionMakerBase.OnStart() | Improve this Doc View Source OnStop() Declaration protected override void OnStop() Overrides DecisionMakerBase.OnStop()"
  },
  "api_ai/ReactiveAI.Intelligence.Actors.DecisionMakerBase.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actors.DecisionMakerBase.html",
    "title": "Class DecisionMakerBase | Reactive",
    "keywords": "Class DecisionMakerBase Inheritance System.Object DecisionMakerBase Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actors Assembly :ReactiveAI.dll Syntax public abstract class DecisionMakerBase : IDecisionMaker Constructors | Improve this Doc View Source DecisionMakerBase(IUtilityAI, IContextProvider) Declaration protected DecisionMakerBase(IUtilityAI ai, IContextProvider contextProvider) Parameters Type Name Description IUtilityAI ai IContextProvider contextProvider Properties | Improve this Doc View Source State Declaration public DecisionMakerState State { get; protected set; } Property Value Type Description DecisionMakerState Methods | Improve this Doc View Source OnPause() Declaration protected abstract void OnPause() | Improve this Doc View Source OnResume() Declaration protected abstract void OnResume() | Improve this Doc View Source OnStart() Declaration protected abstract void OnStart() | Improve this Doc View Source OnStop() Declaration protected abstract void OnStop() | Improve this Doc View Source Pause() Declaration public void Pause() Implements IDecisionMaker.Pause() | Improve this Doc View Source Resume() Declaration public void Resume() Implements IDecisionMaker.Resume() | Improve this Doc View Source Start() Start the decison maker Ai. Declaration public void Start() Implements IDecisionMaker.Start() | Improve this Doc View Source Stop() Declaration public void Stop() Implements IDecisionMaker.Stop() | Improve this Doc View Source Think() Makes a decision on what should be the next action to be executed. Declaration public void Think() Implements IDecisionMaker.Think() | Improve this Doc View Source Update() Updates the action selected by Think() - that is if it needs updating, otherwise this will simply return. Declaration public void Update() Implements IDecisionMaker.Update()"
  },
  "api_ai/ReactiveAI.Intelligence.Actors.DecisionMakerState.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actors.DecisionMakerState.html",
    "title": "Enum DecisionMakerState | Reactive",
    "keywords": "Enum DecisionMakerState Namespace :ReactiveAI.Intelligence.Actors Assembly :ReactiveAI.dll Syntax public enum DecisionMakerState Fields Name Description Paused AI Client Paused state. Running AI Client Running state. Stopped AI Client Stopped state."
  },
  "api_ai/ReactiveAI.Intelligence.Actors.UtilityAi.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actors.UtilityAi.html",
    "title": "Class UtilityAi | Reactive",
    "keywords": "Class UtilityAi Inheritance System.Object UtilityAi Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actors Assembly :ReactiveAI.dll Syntax public sealed class UtilityAi : IUtilityAI, IAIPrototype<IUtilityAI> Constructors | Improve this Doc View Source UtilityAi() Declaration public UtilityAi() | Improve this Doc View Source UtilityAi(String, IAICollection) Declaration public UtilityAi(string nameId, IAICollection collection) Parameters Type Name Description System.String nameId IAICollection collection Properties | Improve this Doc View Source NameId Declaration public string NameId { get; set; } Property Value Type Description System.String Implements IUtilityAI.NameId | Improve this Doc View Source Selector Declaration public ISelector Selector { get; set; } Property Value Type Description ISelector Implements IUtilityAI.Selector Methods | Improve this Doc View Source Add(Behaviour) Declaration public bool Add(Behaviour behaviour) Parameters Type Name Description Behaviour behaviour Returns Type Description System.Boolean | Improve this Doc View Source AddBehaviour(String) Declaration public bool AddBehaviour(string behaviourId) Parameters Type Name Description System.String behaviourId Returns Type Description System.Boolean Implements IUtilityAI.AddBehaviour(String) | Improve this Doc View Source Clone() Declaration public IUtilityAI Clone() Returns Type Description IUtilityAI Implements IAIPrototype<IUtilityAI>.Clone() | Improve this Doc View Source InternalRemove(String) Declaration public bool InternalRemove(string behaviourId) Parameters Type Name Description System.String behaviourId Returns Type Description System.Boolean | Improve this Doc View Source Remove(Behaviour) Declaration public bool Remove(Behaviour behaviour) Parameters Type Name Description Behaviour behaviour Returns Type Description System.Boolean | Improve this Doc View Source RemoveBehaviour(String) Declaration public bool RemoveBehaviour(string behaviourId) Parameters Type Name Description System.String behaviourId Returns Type Description System.Boolean Implements IUtilityAI.RemoveBehaviour(String) | Improve this Doc View Source Select(IContext) Declaration public IAction Select(IContext context) Parameters Type Name Description IContext context Returns Type Description IAction Implements IUtilityAI.Select(IContext)"
  },
  "api_ai/ReactiveAI.Intelligence.Actors.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actors.html",
    "title": "Namespace ReactiveAI.Intelligence.Actors | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Actors Classes AiCollection AiCollectionConstructor DecisionMaker DecisionMakerBase UtilityAi Enums DecisionMakerState"
  },
  "api_ai/ReactiveAI.Intelligence.Behaviours.Behaviour.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Behaviours.Behaviour.html",
    "title": "Class Behaviour | Reactive",
    "keywords": "Class Behaviour Inheritance System.Object CompositeConsideration Behaviour Inherited Members CompositeConsideration.NameID CompositeConsideration.Measure CompositeConsideration.DefaultUtil CompositeConsideration.Utility CompositeConsideration.Weight CompositeConsideration.IsInverted CompositeConsideration.AddConsideration(IConsideration) CompositeConsideration.AddConsideration(String) CompositeConsideration.Consider(IContext) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Behaviours Assembly :ReactiveAI.dll Syntax public sealed class Behaviour : CompositeConsideration, IBehaviour, ICompositeConsideration, IConsideration, IAIPrototype<IConsideration> Constructors | Improve this Doc View Source Behaviour() Declaration public Behaviour() | Improve this Doc View Source Behaviour(String, IBehaviourCollection) Declaration public Behaviour(string nameId, IBehaviourCollection collection) Parameters Type Name Description System.String nameId IBehaviourCollection collection Properties | Improve this Doc View Source Selector Declaration public ISelector Selector { get; set; } Property Value Type Description ISelector Implements IBehaviour.Selector Methods | Improve this Doc View Source AddOption(IOption) Declaration public bool AddOption(IOption option) Parameters Type Name Description IOption option Returns Type Description System.Boolean Implements IBehaviour.AddOption(IOption) | Improve this Doc View Source AddOption(String) Declaration public bool AddOption(string optionId) Parameters Type Name Description System.String optionId Returns Type Description System.Boolean Implements IBehaviour.AddOption(String) | Improve this Doc View Source Clone() Declaration public override IConsideration Clone() Returns Type Description IConsideration Overrides CompositeConsideration.Clone() Implements IAIPrototype<IConsideration>.Clone() | Improve this Doc View Source Select(IContext) Selects the action for execution, given the specified context. Declaration public IAction Select(IContext context) Parameters Type Name Description IContext context The context. Returns Type Description IAction The action to execute. Implements IBehaviour.Select(IContext)"
  },
  "api_ai/ReactiveAI.Intelligence.Behaviours.BehaviourCollection.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Behaviours.BehaviourCollection.html",
    "title": "Class BehaviourCollection | Reactive",
    "keywords": "Class BehaviourCollection Inheritance System.Object BehaviourCollection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Behaviours Assembly :ReactiveAI.dll Syntax public class BehaviourCollection : IBehaviourCollection Constructors | Improve this Doc View Source BehaviourCollection(IOptionCollection) Declaration public BehaviourCollection(IOptionCollection optionCollection) Parameters Type Name Description IOptionCollection optionCollection Properties | Improve this Doc View Source Options Declaration public IOptionCollection Options { get; } Property Value Type Description IOptionCollection Implements IBehaviourCollection.Options Methods | Improve this Doc View Source Add(IBehaviour) Declaration public bool Add(IBehaviour behaviour) Parameters Type Name Description IBehaviour behaviour Returns Type Description System.Boolean Implements IBehaviourCollection.Add(IBehaviour) | Improve this Doc View Source Clear() Declaration public void Clear() Implements IBehaviourCollection.Clear() | Improve this Doc View Source ClearAll() Declaration public void ClearAll() Implements IBehaviourCollection.ClearAll() | Improve this Doc View Source Contains(String) Declaration public bool Contains(string nameId) Parameters Type Name Description System.String nameId Returns Type Description System.Boolean Implements IBehaviourCollection.Contains(String) | Improve this Doc View Source Create(String) Declaration public IBehaviour Create(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IBehaviour Implements IBehaviourCollection.Create(String)"
  },
  "api_ai/ReactiveAI.Intelligence.Behaviours.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Behaviours.html",
    "title": "Namespace ReactiveAI.Intelligence.Behaviours | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Behaviours Classes Behaviour BehaviourCollection"
  },
  "api_ai/ReactiveAI.Intelligence.Collections.CircularBuffer-1.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Collections.CircularBuffer-1.html",
    "title": "Class CircularBuffer<T> | Reactive",
    "keywords": "Class CircularBuffer<T> Inheritance System.Object CircularBuffer<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Collections Assembly :ReactiveAI.dll Syntax public class CircularBuffer<T> : ICircularBuffer<T>, IEnumerable<T>, IEnumerable Type Parameters Name Description T Constructors | Improve this Doc View Source CircularBuffer() Initializes a new instance of the class. Declaration public CircularBuffer() | Improve this Doc View Source CircularBuffer(Int32) Initializes a new instance of the class. Declaration public CircularBuffer(int size) Parameters Type Name Description System.Int32 size Size. Properties | Improve this Doc View Source Capacity The maximum capacity of the buffer. Declaration public int Capacity { get; set; } Property Value Type Description System.Int32 The capacity. Implements ICircularBuffer<T>.Capacity | Improve this Doc View Source Count Number of elements in the buffer. Declaration public int Count { get; } Property Value Type Description System.Int32 The count. Implements ICircularBuffer<T>.Count | Improve this Doc View Source Head Returns the value at the head of the buffer. Declaration public T Head { get; } Property Value Type Description T The head. Implements ICircularBuffer<T>.Head | Improve this Doc View Source Item[Int32] Gets or sets the at the specified index. Declaration public T this[int index] { get; set; } Parameters Type Name Description System.Int32 index Index. Property Value Type Description T Implements ICircularBuffer<T>.Item[Int32] | Improve this Doc View Source Tail Returns the value at the tail of the buffer. Declaration public T Tail { get; } Property Value Type Description T The tail. Implements ICircularBuffer<T>.Tail Methods | Improve this Doc View Source Clear() Clears the buffer. Declaration public void Clear() Implements ICircularBuffer<T>.Clear() | Improve this Doc View Source Dequeue() Dequeue this instance. Declaration public T Dequeue() Returns Type Description T Implements ICircularBuffer<T>.Dequeue() | Improve this Doc View Source Enqueue(T) Enqueue the specified item. Declaration public T Enqueue(T item) Parameters Type Name Description T item Item. Returns Type Description T Implements ICircularBuffer<T>.Enqueue(T) | Improve this Doc View Source GetEnumerator() Gets the enumerator. Declaration public IEnumerator<T> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator<T> <T> The enumerator. Implements System.Collections.Generic.IEnumerable<T>.GetEnumerator() | Improve this Doc View Source IndexOf(T) Indexs the of. Declaration public int IndexOf(T item) Parameters Type Name Description T item Item. Returns Type Description System.Int32 The of. Implements ICircularBuffer<T>.IndexOf(T) | Improve this Doc View Source RemoveAt(Int32) Removes the element at the given index. Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index Index. Implements ICircularBuffer<T>.RemoveAt(Int32) Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator()"
  },
  "api_ai/ReactiveAI.Intelligence.Collections.ICircularBuffer-1.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Collections.ICircularBuffer-1.html",
    "title": "Interface ICircularBuffer<T> | Reactive",
    "keywords": "Interface ICircularBuffer<T> Namespace :ReactiveAI.Intelligence.Collections Assembly :ReactiveAI.dll Syntax public interface ICircularBuffer<T> Type Parameters Name Description T Properties | Improve this Doc View Source Capacity The maximum capacity of the buffer. Declaration int Capacity { get; set; } Property Value Type Description System.Int32 The capacity. | Improve this Doc View Source Count Number of elements in the buffer. Declaration int Count { get; } Property Value Type Description System.Int32 The count. | Improve this Doc View Source Head Returns the value at the head of the buffer. Declaration T Head { get; } Property Value Type Description T The head. | Improve this Doc View Source Item[Int32] Gets or sets the at the specified index. Declaration T this[int index] { get; set; } Parameters Type Name Description System.Int32 index Index. Property Value Type Description T | Improve this Doc View Source Tail Returns the value at the tail of the buffer. Declaration T Tail { get; } Property Value Type Description T The tail. Methods | Improve this Doc View Source Clear() Clears the buffer. Declaration void Clear() | Improve this Doc View Source Dequeue() Dequeue this instance. Declaration T Dequeue() Returns Type Description T | Improve this Doc View Source Enqueue(T) Enqueue the specified item. Declaration T Enqueue(T item) Parameters Type Name Description T item Returns Type Description T | Improve this Doc View Source IndexOf(T) Indexs the of. Declaration int IndexOf(T item) Parameters Type Name Description T item Item. Returns Type Description System.Int32 The of. | Improve this Doc View Source RemoveAt(Int32) Removes the element at the given index. Declaration void RemoveAt(int index) Parameters Type Name Description System.Int32 index Index."
  },
  "api_ai/ReactiveAI.Intelligence.Collections.IPriorityQueue-2.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Collections.IPriorityQueue-2.html",
    "title": "Interface IPriorityQueue<TItem, TPriority> | Reactive",
    "keywords": "Interface IPriorityQueue<TItem, TPriority> Namespace :ReactiveAI.Intelligence.Collections Assembly :ReactiveAI.dll Syntax public interface IPriorityQueue<TItem, in TPriority> where TPriority : IComparable<TPriority> Type Parameters Name Description TItem TPriority Properties | Improve this Doc View Source Count Returns the number of items in the queue. Declaration int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source HasNext Returns true if there is an element at the head of the queue, i.e. if the queue is not empty. Declaration bool HasNext { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Clear() Removes every node from the queue. Declaration void Clear() | Improve this Doc View Source Contains(TItem) Returns true if the queue has 1 or more of the secified items. Declaration bool Contains(TItem item) Parameters Type Name Description TItem item Returns Type Description System.Boolean | Improve this Doc View Source Dequeue() Removes and returns the item at the head of the queue. In the event of a priority tie the item inserted first in the queue is returned. Declaration TItem Dequeue() Returns Type Description TItem | Improve this Doc View Source Enqueue(TItem, TPriority) Enqueues an item to the list. Items with lower priority values are placed ahead of the queue. Declaration void Enqueue(TItem item, TPriority priority) Parameters Type Name Description TItem item TPriority priority | Improve this Doc View Source Peek() Returns the item at the head of the queue without removing it. Declaration TItem Peek() Returns Type Description TItem | Improve this Doc View Source Remove(TItem) RemoveBehaviour the specified item. Note that the queue may contain multiples of the same item, in which case this removes the one that is closest to the head. Declaration TItem Remove(TItem item) Parameters Type Name Description TItem item Item. Returns Type Description TItem | Improve this Doc View Source Remove(Func<TItem, Boolean>) Removes the first item that matches the specified predicate. Note that the queue may contain multiples of the same item, in which case this removes the one that is closest to the head. Declaration TItem Remove(Func<TItem, bool> predicate) Parameters Type Name Description System.Func<T, TResult> <TItem, System.Boolean > predicate The predicate. Returns Type Description TItem The item that was removed or null if no item was not found. | Improve this Doc View Source UpdatePriority(TItem, TPriority) Updates the priority of the specified item. If the item does not exist in the queue, it simply returns. Declaration void UpdatePriority(TItem item, TPriority priority) Parameters Type Name Description TItem item TPriority priority"
  },
  "api_ai/ReactiveAI.Intelligence.Collections.MovingAverage.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Collections.MovingAverage.html",
    "title": "Class MovingAverage | Reactive",
    "keywords": "Class MovingAverage Inheritance System.Object MovingAverage Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Collections Assembly :ReactiveAI.dll Syntax public class MovingAverage Constructors | Improve this Doc View Source MovingAverage() Initializes a new instance of the class. Declaration public MovingAverage() | Improve this Doc View Source MovingAverage(Int32) Initializes a new instance of the class. Declaration public MovingAverage(int length) Parameters Type Name Description System.Int32 length Length. Properties | Improve this Doc View Source Mean Declaration public float Mean { get; } Property Value Type Description System.Single | Improve this Doc View Source MovingAverageDepth The Declaration public int MovingAverageDepth { get; } Property Value Type Description System.Int32 The moving average rank. Methods | Improve this Doc View Source Enqueue(Single) Enqueue the specified value and updates the mean. Declaration public void Enqueue(float val) Parameters Type Name Description System.Single val"
  },
  "api_ai/ReactiveAI.Intelligence.Collections.PriorityQueue-2.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Collections.PriorityQueue-2.html",
    "title": "Class PriorityQueue<TItem, TPriority> | Reactive",
    "keywords": "Class PriorityQueue<TItem, TPriority> Inheritance System.Object PriorityQueue<TItem, TPriority> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Collections Assembly :ReactiveAI.dll Syntax public class PriorityQueue<TItem, TPriority> : IPriorityQueue<TItem, TPriority> where TPriority : IComparable<TPriority> Type Parameters Name Description TItem TPriority Constructors | Improve this Doc View Source PriorityQueue() Declaration public PriorityQueue() | Improve this Doc View Source PriorityQueue(Int32) Initializes a new instance of the class. Declaration public PriorityQueue(int maxNodes) Parameters Type Name Description System.Int32 maxNodes Max nodes. Properties | Improve this Doc View Source Count Returns the number of nodes in the queue. O(1) Declaration public int Count { get; } Property Value Type Description System.Int32 Implements IPriorityQueue<TItem, TPriority>.Count | Improve this Doc View Source HasNext Returns true if there is an element at the head of the queue, i.e. if the queue is not empty. Declaration public bool HasNext { get; } Property Value Type Description System.Boolean true Implements IPriorityQueue<TItem, TPriority>.HasNext Methods | Improve this Doc View Source Clear() Removes every node from the queue. Declaration public void Clear() Implements IPriorityQueue<TItem, TPriority>.Clear() | Improve this Doc View Source Contains(TItem) Returns true if the queue has 1 or more of the secified items. Declaration public bool Contains(TItem item) Parameters Type Name Description TItem item Item. Returns Type Description System.Boolean Implements IPriorityQueue<TItem, TPriority>.Contains(TItem) | Improve this Doc View Source Dequeue() Removes the head of the queue (node with minimum priority; ties are broken by order of insertion), and returns it. If queue is empty, result is undefined O(log n) Declaration public TItem Dequeue() Returns Type Description TItem Implements IPriorityQueue<TItem, TPriority>.Dequeue() | Improve this Doc View Source Enqueue(TItem, TPriority) Enqueue a node to the priority queue. Lower values are placed in front. Ties are broken by first-in-first-out. If the queue is full, the result is undefined. If the node is already enqueued, the result is undefined. O(log n) Declaration public void Enqueue(TItem item, TPriority priority) Parameters Type Name Description TItem item TPriority priority Implements IPriorityQueue<TItem, TPriority>.Enqueue(TItem, TPriority) | Improve this Doc View Source IsBinaryHeapValid() Verifies if the heap is in a valid state. Use only for debuging. Declaration public bool IsBinaryHeapValid() Returns Type Description System.Boolean true if this instance is binary heap valid; otherwise, false . | Improve this Doc View Source Peek() Returns the item at the head of the queue without removing it. Declaration public TItem Peek() Returns Type Description TItem Implements IPriorityQueue<TItem, TPriority>.Peek() | Improve this Doc View Source Remove(TItem) RemoveBehaviour the specified item. Note that the queue may contain multiples of the same item, in which case this removes the one that is closest to the head. Declaration public TItem Remove(TItem item) Parameters Type Name Description TItem item Item. Returns Type Description TItem Implements IPriorityQueue<TItem, TPriority>.Remove(TItem) | Improve this Doc View Source Remove(Func<TItem, Boolean>) RemoveBehaviour the specified item. Note that the queue may contain multiples of the same item, in which case this removes the one that is closest to the head. Declaration public TItem Remove(Func<TItem, bool> predicate) Parameters Type Name Description System.Func<T, TResult> <TItem, System.Boolean > predicate Returns Type Description TItem Implements IPriorityQueue<TItem, TPriority>.Remove(Func<TItem, Boolean>) | Improve this Doc View Source UpdatePriority(TItem, TPriority) Updates the priority of the specified item. If the item does not exist in the queue, it simply returns. Declaration public void UpdatePriority(TItem item, TPriority priority) Parameters Type Name Description TItem item Item. TPriority priority Priority. Implements IPriorityQueue<TItem, TPriority>.UpdatePriority(TItem, TPriority)"
  },
  "api_ai/ReactiveAI.Intelligence.Collections.PriorityQueueNode-1.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Collections.PriorityQueueNode-1.html",
    "title": "Class PriorityQueueNode<TPriority> | Reactive",
    "keywords": "Class PriorityQueueNode<TPriority> Inheritance System.Object PriorityQueueNode<TPriority> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Collections Assembly :ReactiveAI.dll Syntax public class PriorityQueueNode<TPriority> Type Parameters Name Description TPriority Properties | Improve this Doc View Source InsertionIndex Represents the order the node was inserted in Declaration public long InsertionIndex { get; } Property Value Type Description System.Int64 | Improve this Doc View Source Priority The Priority to insert this node at. Must be set BEFORE adding a node to the queue (ideally just once, in the node's constructor). Should not be manually edited once the node has been enqueued - use queue.UpdatePriority() instead Declaration public TPriority Priority { get; protected set; } Property Value Type Description TPriority | Improve this Doc View Source QueueIndex Represents the current position in the queue Declaration public int QueueIndex { get; } Property Value Type Description System.Int32"
  },
  "api_ai/ReactiveAI.Intelligence.Collections.ThreadSafePriorityQueue-2.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Collections.ThreadSafePriorityQueue-2.html",
    "title": "Class ThreadSafePriorityQueue<TItem, TPriority> | Reactive",
    "keywords": "Class ThreadSafePriorityQueue<TItem, TPriority> Inheritance System.Object ThreadSafePriorityQueue<TItem, TPriority> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Collections Assembly :ReactiveAI.dll Syntax public class ThreadSafePriorityQueue<TItem, TPriority> : IPriorityQueue<TItem, TPriority> where TPriority : IComparable<TPriority> Type Parameters Name Description TItem TPriority Constructors | Improve this Doc View Source ThreadSafePriorityQueue() Initializes a new instance of the class. Declaration public ThreadSafePriorityQueue() | Improve this Doc View Source ThreadSafePriorityQueue(Int32) Initializes a new instance of the class. Declaration public ThreadSafePriorityQueue(int size) Parameters Type Name Description System.Int32 size Size. Properties | Improve this Doc View Source Count Returns the number of items in the queue. Declaration public int Count { get; } Property Value Type Description System.Int32 The count. Implements IPriorityQueue<TItem, TPriority>.Count | Improve this Doc View Source HasNext Returns true if there is an element at the head of the queue, i.e. if the queue is not empty. Declaration public bool HasNext { get; } Property Value Type Description System.Boolean Implements IPriorityQueue<TItem, TPriority>.HasNext Methods | Improve this Doc View Source Clear() Removes every node from the queue. O(n) Declaration public void Clear() Implements IPriorityQueue<TItem, TPriority>.Clear() | Improve this Doc View Source Contains(TItem) Returns true if the queue has 1 or more of the secified items. Declaration public bool Contains(TItem item) Parameters Type Name Description TItem item Item. Returns Type Description System.Boolean Implements IPriorityQueue<TItem, TPriority>.Contains(TItem) | Improve this Doc View Source Dequeue() Removes and returns the item at the head of the queue. In the event of a priority tie the item inserted first in the queue is returned. Declaration public TItem Dequeue() Returns Type Description TItem Implements IPriorityQueue<TItem, TPriority>.Dequeue() | Improve this Doc View Source Enqueue(TItem, TPriority) Enqueues an item to the list. Items with lower priority values are placed ahead of the queue. Declaration public void Enqueue(TItem item, TPriority priority) Parameters Type Name Description TItem item Item. TPriority priority Priority. Implements IPriorityQueue<TItem, TPriority>.Enqueue(TItem, TPriority) | Improve this Doc View Source IsBinaryHeapValid() Determines whether the binary heap of the internal binary heap queue is valid. Declaration public bool IsBinaryHeapValid() Returns Type Description System.Boolean true if this instance is binary heap valid; otherwise, false . | Improve this Doc View Source Peek() Returns the item at the head of the queue without removing it. Declaration public TItem Peek() Returns Type Description TItem Implements IPriorityQueue<TItem, TPriority>.Peek() | Improve this Doc View Source Remove(TItem) RemoveBehaviour the specified item. Note that the queue may contain multiples of the same item, in which case this removes the one that is closest to the head. Declaration public TItem Remove(TItem item) Parameters Type Name Description TItem item Returns Type Description TItem Implements IPriorityQueue<TItem, TPriority>.Remove(TItem) | Improve this Doc View Source Remove(Func<TItem, Boolean>) RemoveBehaviour the specified item. Note that the queue may contain multiples of the same item, in which case this removes the one that is closest to the head. Declaration public TItem Remove(Func<TItem, bool> predicate) Parameters Type Name Description System.Func<T, TResult> <TItem, System.Boolean > predicate Returns Type Description TItem Implements IPriorityQueue<TItem, TPriority>.Remove(Func<TItem, Boolean>) | Improve this Doc View Source UpdatePriority(TItem, TPriority) Updates the priority of the specified item. If the item does not exist in the queue, it simply returns. Declaration public void UpdatePriority(TItem item, TPriority priority) Parameters Type Name Description TItem item Item. TPriority priority Priority. Implements IPriorityQueue<TItem, TPriority>.UpdatePriority(TItem, TPriority)"
  },
  "api_ai/ReactiveAI.Intelligence.Collections.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Collections.html",
    "title": "Namespace ReactiveAI.Intelligence.Collections | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Collections Classes CircularBuffer<T> MovingAverage PriorityQueue<TItem, TPriority> PriorityQueueNode<TPriority> ThreadSafePriorityQueue<TItem, TPriority> Interfaces ICircularBuffer<T> IPriorityQueue<TItem, TPriority>"
  },
  "api_ai/ReactiveAI.Intelligence.Considerations.CompositeConsideration.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Considerations.CompositeConsideration.html",
    "title": "Class CompositeConsideration | Reactive",
    "keywords": "Class CompositeConsideration Inheritance System.Object CompositeConsideration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Considerations Assembly :ReactiveAI.dll Syntax public class CompositeConsideration : ICompositeConsideration, IConsideration, IAIPrototype<IConsideration> Constructors | Improve this Doc View Source CompositeConsideration() Initializes a new instance of the class. Declaration public CompositeConsideration() | Improve this Doc View Source CompositeConsideration(IConsiderationCollection) Declaration protected CompositeConsideration(IConsiderationCollection collection) Parameters Type Name Description IConsiderationCollection collection | Improve this Doc View Source CompositeConsideration(CompositeConsideration) Declaration protected CompositeConsideration(CompositeConsideration other) Parameters Type Name Description CompositeConsideration other | Improve this Doc View Source CompositeConsideration(String, IConsiderationCollection) Declaration public CompositeConsideration(string nameId, IConsiderationCollection collection) Parameters Type Name Description System.String nameId IConsiderationCollection collection Properties | Improve this Doc View Source DefaultUtil Gets or sets the default utility. Declaration public Utility DefaultUtil { get; set; } Property Value Type Description Utility The default utility. Implements IConsideration.DefaultUtil | Improve this Doc View Source IsInverted If true, then the output of the associated evaluator is inverted, in effect, inverting the consideration. Declaration public bool IsInverted { get; set; } Property Value Type Description System.Boolean Implements IConsideration.IsInverted | Improve this Doc View Source Measure The measure to be used to evaluate the utility of this consideration. Declaration public IMeasure Measure { get; set; } Property Value Type Description IMeasure Implements ICompositeConsideration.Measure | Improve this Doc View Source NameID A string alias for ID. Declaration public string NameID { get; set; } Property Value Type Description System.String Implements IConsideration.NameID | Improve this Doc View Source Utility Returns the combined utility for this consideration. Declaration public Utility Utility { get; protected set; } Property Value Type Description Utility The utility. Implements IConsideration.Utility | Improve this Doc View Source Weight Gets the weight of this consideration. Declaration public float Weight { get; set; } Property Value Type Description System.Single Implements IConsideration.Weight Methods | Improve this Doc View Source AddConsideration(IConsideration) Declaration public bool AddConsideration(IConsideration consideration) Parameters Type Name Description IConsideration consideration Returns Type Description System.Boolean Implements ICompositeConsideration.AddConsideration(IConsideration) | Improve this Doc View Source AddConsideration(String) Declaration public bool AddConsideration(string considerationId) Parameters Type Name Description System.String considerationId Returns Type Description System.Boolean Implements ICompositeConsideration.AddConsideration(String) | Improve this Doc View Source Clone() Declaration public virtual IConsideration Clone() Returns Type Description IConsideration Implements IAIPrototype<IConsideration>.Clone() | Improve this Doc View Source Consider(IContext) Calculates the utility for this option given the provided context. Declaration public virtual void Consider(IContext context) Parameters Type Name Description IContext context The context. Implements IConsideration.Consider(IContext)"
  },
  "api_ai/ReactiveAI.Intelligence.Considerations.ConsiderationBase-1.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Considerations.ConsiderationBase-1.html",
    "title": "Class ConsiderationBase<TContext> | Reactive",
    "keywords": "Class ConsiderationBase<TContext> Inheritance System.Object ConsiderationBase<TContext> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Considerations Assembly :ReactiveAI.dll Syntax public abstract class ConsiderationBase<TContext> : IConsideration, IAIPrototype<IConsideration> where TContext : class, IContext Type Parameters Name Description TContext Constructors | Improve this Doc View Source ConsiderationBase() Declaration protected ConsiderationBase() | Improve this Doc View Source ConsiderationBase(ConsiderationBase<TContext>) Declaration protected ConsiderationBase(ConsiderationBase<TContext> other) Parameters Type Name Description ConsiderationBase<TContext> <TContext> other | Improve this Doc View Source ConsiderationBase(String, IConsiderationCollection) Declaration protected ConsiderationBase(string nameId, IConsiderationCollection collection) Parameters Type Name Description System.String nameId IConsiderationCollection collection Fields | Improve this Doc View Source Evaluator Declaration protected IEvaluator Evaluator Field Value Type Description IEvaluator Properties | Improve this Doc View Source DefaultUtil Gets or sets the default utility. Declaration public Utility DefaultUtil { get; set; } Property Value Type Description Utility Implements IConsideration.DefaultUtil | Improve this Doc View Source IsInverted If true, then the output of the associated evaluator is inverted, in effect, inverting the consideration. Declaration public bool IsInverted { get; set; } Property Value Type Description System.Boolean Implements IConsideration.IsInverted | Improve this Doc View Source NameID A string alias for ID. Declaration public string NameID { get; set; } Property Value Type Description System.String Implements IConsideration.NameID | Improve this Doc View Source Utility Returns the utility for this consideration. Declaration public Utility Utility { get; protected set; } Property Value Type Description Utility The utility. Implements IConsideration.Utility | Improve this Doc View Source Weight The weight of this consideration. Declaration public float Weight { get; set; } Property Value Type Description System.Single Implements IConsideration.Weight Methods | Improve this Doc View Source Clone() Declaration public abstract IConsideration Clone() Returns Type Description IConsideration Implements IAIPrototype<IConsideration>.Clone() | Improve this Doc View Source Consider(TContext) Calculates the utility given the specified context. Declaration public abstract void Consider(TContext context) Parameters Type Name Description TContext context The context. Explicit Interface Implementations | Improve this Doc View Source IConsideration.Consider(IContext) Declaration void IConsideration.Consider(IContext context) Parameters Type Name Description IContext context Implements IConsideration.Consider(IContext)"
  },
  "api_ai/ReactiveAI.Intelligence.Considerations.ConsiderationCollection.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Considerations.ConsiderationCollection.html",
    "title": "Class ConsiderationCollection | Reactive",
    "keywords": "Class ConsiderationCollection Inheritance System.Object ConsiderationCollection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Considerations Assembly :ReactiveAI.dll Syntax public class ConsiderationCollection : IConsiderationCollection Constructors | Improve this Doc View Source ConsiderationCollection() Declaration public ConsiderationCollection() Methods | Improve this Doc View Source Add(IConsideration) Declaration public bool Add(IConsideration consideration) Parameters Type Name Description IConsideration consideration Returns Type Description System.Boolean Implements IConsiderationCollection.Add(IConsideration) | Improve this Doc View Source Clear() Declaration public void Clear() Implements IConsiderationCollection.Clear() | Improve this Doc View Source Contains(String) Declaration public bool Contains(string nameId) Parameters Type Name Description System.String nameId Returns Type Description System.Boolean Implements IConsiderationCollection.Contains(String) | Improve this Doc View Source Create(String) Declaration public IConsideration Create(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IConsideration Implements IConsiderationCollection.Create(String)"
  },
  "api_ai/ReactiveAI.Intelligence.Considerations.ConsiderationConstructor.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Considerations.ConsiderationConstructor.html",
    "title": "Class ConsiderationConstructor | Reactive",
    "keywords": "Class ConsiderationConstructor Inheritance System.Object ConsiderationConstructor Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Considerations Assembly :ReactiveAI.dll Syntax public static class ConsiderationConstructor Methods | Improve this Doc View Source Chebyshev() Declaration public static ICompositeConsideration Chebyshev() Returns Type Description ICompositeConsideration | Improve this Doc View Source Chebyshev(String, IConsiderationCollection) Declaration public static ICompositeConsideration Chebyshev(string nameId, IConsiderationCollection collection) Parameters Type Name Description System.String nameId IConsiderationCollection collection Returns Type Description ICompositeConsideration | Improve this Doc View Source ConstrainedChebyshev(Single) Declaration public static ICompositeConsideration ConstrainedChebyshev(float lowerBound = 0F) Parameters Type Name Description System.Single lowerBound Returns Type Description ICompositeConsideration | Improve this Doc View Source ConstrainedChebyshev(String, IConsiderationCollection, Single) Declaration public static ICompositeConsideration ConstrainedChebyshev(string nameId, IConsiderationCollection collection, float lowerBound = 0F) Parameters Type Name Description System.String nameId IConsiderationCollection collection System.Single lowerBound Returns Type Description ICompositeConsideration | Improve this Doc View Source ConstrainedWeightedMetrics(Single, Single) Declaration public static ICompositeConsideration ConstrainedWeightedMetrics(float pNorm = 2F, float lowerBound = 0F) Parameters Type Name Description System.Single pNorm System.Single lowerBound Returns Type Description ICompositeConsideration | Improve this Doc View Source ConstrainedWeightedMetrics(String, IConsiderationCollection, Single, Single) Declaration public static ICompositeConsideration ConstrainedWeightedMetrics(string nameId, IConsiderationCollection collection, float pNorm = 2F, float lowerBound = 0F) Parameters Type Name Description System.String nameId IConsiderationCollection collection System.Single pNorm System.Single lowerBound Returns Type Description ICompositeConsideration | Improve this Doc View Source Create(IMeasure) Declaration public static ICompositeConsideration Create(IMeasure measure) Parameters Type Name Description IMeasure measure Returns Type Description ICompositeConsideration | Improve this Doc View Source Create(String, IConsiderationCollection, IMeasure) Declaration public static ICompositeConsideration Create(string nameId, IConsiderationCollection collection, IMeasure measure) Parameters Type Name Description System.String nameId IConsiderationCollection collection IMeasure measure Returns Type Description ICompositeConsideration | Improve this Doc View Source Multiplicative() Declaration public static ICompositeConsideration Multiplicative() Returns Type Description ICompositeConsideration | Improve this Doc View Source Multiplicative(String, IConsiderationCollection) Declaration public static ICompositeConsideration Multiplicative(string nameId, IConsiderationCollection collection) Parameters Type Name Description System.String nameId IConsiderationCollection collection Returns Type Description ICompositeConsideration | Improve this Doc View Source WeightedMetrics(Single) Declaration public static ICompositeConsideration WeightedMetrics(float pNorm = 2F) Parameters Type Name Description System.Single pNorm Returns Type Description ICompositeConsideration | Improve this Doc View Source WeightedMetrics(String, IConsiderationCollection, Single) Declaration public static ICompositeConsideration WeightedMetrics(string nameId, IConsiderationCollection collection, float pNorm = 2F) Parameters Type Name Description System.String nameId IConsiderationCollection collection System.Single pNorm Returns Type Description ICompositeConsideration"
  },
  "api_ai/ReactiveAI.Intelligence.Considerations.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Considerations.html",
    "title": "Namespace ReactiveAI.Intelligence.Considerations | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Considerations Classes CompositeConsideration ConsiderationBase<TContext> ConsiderationCollection ConsiderationConstructor"
  },
  "api_ai/ReactiveAI.Intelligence.Evaluators.CompositeEvalutor.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Evaluators.CompositeEvalutor.html",
    "title": "Class CompositeEvalutor | Reactive",
    "keywords": "Class CompositeEvalutor Inheritance System.Object EvaluatorBase CompositeEvalutor Inherited Members EvaluatorBase.Xa EvaluatorBase.Xb EvaluatorBase.Ya EvaluatorBase.Yb EvaluatorBase.isInverted EvaluatorBase.MaxX EvaluatorBase.MaxY EvaluatorBase.MinX EvaluatorBase.MinY EvaluatorBase.PtA EvaluatorBase.PtB EvaluatorBase.XInterval EvaluatorBase.YInterval EvaluatorBase.CompareTo(IEvaluator) ReactiveAI.Intelligence.Evaluators.EvaluatorBase.ReactiveAI.Intelligence.Evaluators.Interfaces.IEvaluator.Evaluate(System.Single) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Evaluators Assembly :ReactiveAI.dll Syntax public class CompositeEvalutor : EvaluatorBase, IEvaluator, IComparable<IEvaluator> Constructors | Improve this Doc View Source CompositeEvalutor() Declaration public CompositeEvalutor() Methods | Improve this Doc View Source Add(IEvaluator) Declaration public void Add(IEvaluator ev) Parameters Type Name Description IEvaluator ev | Improve this Doc View Source Evaluate(Single) Declaration public override float Evaluate(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single Overrides EvaluatorBase.Evaluate(Single) Extension Methods ValueType.Clamp<CompositeEvalutor>(CompositeEvalutor, CompositeEvalutor)"
  },
  "api_ai/ReactiveAI.Intelligence.Evaluators.EvaluatorBase.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Evaluators.EvaluatorBase.html",
    "title": "Class EvaluatorBase | Reactive",
    "keywords": "Class EvaluatorBase Inheritance System.Object EvaluatorBase Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Evaluators Assembly :ReactiveAI.dll Syntax public class EvaluatorBase : IEvaluator, IComparable<IEvaluator> Constructors | Improve this Doc View Source EvaluatorBase() Declaration protected EvaluatorBase() | Improve this Doc View Source EvaluatorBase(Pointf, Pointf) Declaration protected EvaluatorBase(Pointf ptA, Pointf ptB) Parameters Type Name Description Pointf ptA Pointf ptB Fields | Improve this Doc View Source Xa Declaration protected float Xa Field Value Type Description System.Single | Improve this Doc View Source Xb Declaration protected float Xb Field Value Type Description System.Single | Improve this Doc View Source Ya Declaration protected float Ya Field Value Type Description System.Single | Improve this Doc View Source Yb Declaration protected float Yb Field Value Type Description System.Single Properties | Improve this Doc View Source isInverted Declaration public bool isInverted { get; set; } Property Value Type Description System.Boolean Implements IEvaluator.isInverted | Improve this Doc View Source MaxX Declaration public float MaxX { get; } Property Value Type Description System.Single Implements IEvaluator.MaxX | Improve this Doc View Source MaxY Declaration public float MaxY { get; } Property Value Type Description System.Single Implements IEvaluator.MaxY | Improve this Doc View Source MinX Declaration public float MinX { get; } Property Value Type Description System.Single Implements IEvaluator.MinX | Improve this Doc View Source MinY Declaration public float MinY { get; } Property Value Type Description System.Single Implements IEvaluator.MinY | Improve this Doc View Source PtA Declaration public Pointf PtA { get; } Property Value Type Description Pointf Implements IEvaluator.PtA | Improve this Doc View Source PtB Declaration public Pointf PtB { get; } Property Value Type Description Pointf Implements IEvaluator.PtB | Improve this Doc View Source XInterval Declaration public Interval<float> XInterval { get; } Property Value Type Description Interval<T> < System.Single > Implements IEvaluator.XInterval | Improve this Doc View Source YInterval Declaration public Interval<float> YInterval { get; } Property Value Type Description Interval<T> < System.Single > Implements IEvaluator.YInterval Methods | Improve this Doc View Source CompareTo(IEvaluator) Declaration public int CompareTo(IEvaluator other) Parameters Type Name Description IEvaluator other Returns Type Description System.Int32 Implements System.IComparable<ReactiveAI.Intelligence.Evaluators.Interfaces.IEvaluator>.CompareTo(ReactiveAI.Intelligence.Evaluators.Interfaces.IEvaluator) | Improve this Doc View Source Evaluate(Single) Declaration public virtual float Evaluate(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single Explicit Interface Implementations | Improve this Doc View Source IEvaluator.Evaluate(Single) Declaration float IEvaluator.Evaluate(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single Implements IEvaluator.Evaluate(Single) Extension Methods ValueType.Clamp<EvaluatorBase>(EvaluatorBase, EvaluatorBase)"
  },
  "api_ai/ReactiveAI.Intelligence.Evaluators.Interfaces.IEvaluator.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Evaluators.Interfaces.IEvaluator.html",
    "title": "Interface IEvaluator | Reactive",
    "keywords": "Interface IEvaluator Namespace :ReactiveAI.Intelligence.Evaluators.Interfaces Assembly :ReactiveAI.dll Syntax public interface IEvaluator Properties | Improve this Doc View Source isInverted Declaration bool isInverted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxX Declaration float MaxX { get; } Property Value Type Description System.Single | Improve this Doc View Source MaxY Declaration float MaxY { get; } Property Value Type Description System.Single | Improve this Doc View Source MinX Declaration float MinX { get; } Property Value Type Description System.Single | Improve this Doc View Source MinY Declaration float MinY { get; } Property Value Type Description System.Single | Improve this Doc View Source PtA Declaration Pointf PtA { get; } Property Value Type Description Pointf | Improve this Doc View Source PtB Declaration Pointf PtB { get; } Property Value Type Description Pointf | Improve this Doc View Source XInterval Declaration Interval<float> XInterval { get; } Property Value Type Description Interval<T> < System.Single > | Improve this Doc View Source YInterval Declaration Interval<float> YInterval { get; } Property Value Type Description Interval<T> < System.Single > Methods | Improve this Doc View Source Evaluate(Single) Declaration float Evaluate(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single"
  },
  "api_ai/ReactiveAI.Intelligence.Evaluators.Interfaces.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Evaluators.Interfaces.html",
    "title": "Namespace ReactiveAI.Intelligence.Evaluators.Interfaces | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Evaluators.Interfaces Interfaces IEvaluator"
  },
  "api_ai/ReactiveAI.Intelligence.Evaluators.LinearEvaluator.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Evaluators.LinearEvaluator.html",
    "title": "Class LinearEvaluator | Reactive",
    "keywords": "Class LinearEvaluator Inheritance System.Object EvaluatorBase LinearEvaluator Inherited Members EvaluatorBase.Xa EvaluatorBase.Xb EvaluatorBase.Ya EvaluatorBase.Yb EvaluatorBase.isInverted EvaluatorBase.MaxX EvaluatorBase.MaxY EvaluatorBase.MinX EvaluatorBase.MinY EvaluatorBase.PtA EvaluatorBase.PtB EvaluatorBase.XInterval EvaluatorBase.YInterval EvaluatorBase.CompareTo(IEvaluator) ReactiveAI.Intelligence.Evaluators.EvaluatorBase.ReactiveAI.Intelligence.Evaluators.Interfaces.IEvaluator.Evaluate(System.Single) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Evaluators Assembly :ReactiveAI.dll Syntax public class LinearEvaluator : EvaluatorBase, IEvaluator, IComparable<IEvaluator> Constructors | Improve this Doc View Source LinearEvaluator() Declaration public LinearEvaluator() | Improve this Doc View Source LinearEvaluator(Pointf, Pointf) Declaration public LinearEvaluator(Pointf ptA, Pointf ptB) Parameters Type Name Description Pointf ptA Pointf ptB Methods | Improve this Doc View Source Evaluate(Single) Declaration public override float Evaluate(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single Overrides EvaluatorBase.Evaluate(Single) Extension Methods ValueType.Clamp<LinearEvaluator>(LinearEvaluator, LinearEvaluator)"
  },
  "api_ai/ReactiveAI.Intelligence.Evaluators.PowerEvaluator.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Evaluators.PowerEvaluator.html",
    "title": "Class PowerEvaluator | Reactive",
    "keywords": "Class PowerEvaluator Inheritance System.Object EvaluatorBase PowerEvaluator Inherited Members EvaluatorBase.Xa EvaluatorBase.Xb EvaluatorBase.Ya EvaluatorBase.Yb EvaluatorBase.isInverted EvaluatorBase.MaxX EvaluatorBase.MaxY EvaluatorBase.MinX EvaluatorBase.MinY EvaluatorBase.PtA EvaluatorBase.PtB EvaluatorBase.XInterval EvaluatorBase.YInterval EvaluatorBase.CompareTo(IEvaluator) ReactiveAI.Intelligence.Evaluators.EvaluatorBase.ReactiveAI.Intelligence.Evaluators.Interfaces.IEvaluator.Evaluate(System.Single) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Evaluators Assembly :ReactiveAI.dll Syntax public class PowerEvaluator : EvaluatorBase, IEvaluator, IComparable<IEvaluator> Constructors | Improve this Doc View Source PowerEvaluator() Declaration public PowerEvaluator() | Improve this Doc View Source PowerEvaluator(Pointf, Pointf) Declaration public PowerEvaluator(Pointf ptA, Pointf ptB) Parameters Type Name Description Pointf ptA Pointf ptB | Improve this Doc View Source PowerEvaluator(Pointf, Pointf, Single) Declaration public PowerEvaluator(Pointf ptA, Pointf ptB, float power) Parameters Type Name Description Pointf ptA Pointf ptB System.Single power Methods | Improve this Doc View Source Evaluate(Single) Declaration public override float Evaluate(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single Overrides EvaluatorBase.Evaluate(Single) Extension Methods ValueType.Clamp<PowerEvaluator>(PowerEvaluator, PowerEvaluator)"
  },
  "api_ai/ReactiveAI.Intelligence.Evaluators.Sigmoid.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Evaluators.Sigmoid.html",
    "title": "Class Sigmoid | Reactive",
    "keywords": "Class Sigmoid Inheritance System.Object EvaluatorBase Sigmoid Inherited Members EvaluatorBase.Xa EvaluatorBase.Xb EvaluatorBase.Ya EvaluatorBase.Yb EvaluatorBase.isInverted EvaluatorBase.MaxX EvaluatorBase.MaxY EvaluatorBase.MinX EvaluatorBase.MinY EvaluatorBase.PtA EvaluatorBase.PtB EvaluatorBase.XInterval EvaluatorBase.YInterval EvaluatorBase.CompareTo(IEvaluator) ReactiveAI.Intelligence.Evaluators.EvaluatorBase.ReactiveAI.Intelligence.Evaluators.Interfaces.IEvaluator.Evaluate(System.Single) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Evaluators Assembly :ReactiveAI.dll Syntax public class Sigmoid : EvaluatorBase, IEvaluator, IComparable<IEvaluator> Constructors | Improve this Doc View Source Sigmoid(Pointf, Pointf) Declaration public Sigmoid(Pointf ptA, Pointf ptB) Parameters Type Name Description Pointf ptA Pointf ptB | Improve this Doc View Source Sigmoid(Pointf, Pointf, Single) Declaration public Sigmoid(Pointf ptA, Pointf ptB, float k) Parameters Type Name Description Pointf ptA Pointf ptB System.Single k Methods | Improve this Doc View Source Evaluate(Single) Declaration public override float Evaluate(float x) Parameters Type Name Description System.Single x Returns Type Description System.Single Overrides EvaluatorBase.Evaluate(Single) Extension Methods ValueType.Clamp<Sigmoid>(Sigmoid, Sigmoid)"
  },
  "api_ai/ReactiveAI.Intelligence.Evaluators.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Evaluators.html",
    "title": "Namespace ReactiveAI.Intelligence.Evaluators | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Evaluators Classes CompositeEvalutor EvaluatorBase LinearEvaluator PowerEvaluator Sigmoid"
  },
  "api_ai/ReactiveAI.Intelligence.Scheduling.DeferredCommand.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Scheduling.DeferredCommand.html",
    "title": "Class DeferredCommand | Reactive",
    "keywords": "Class DeferredCommand Inheritance System.Object DeferredCommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Scheduling Assembly :ReactiveAI.dll Syntax public class DeferredCommand Constructors | Improve this Doc View Source DeferredCommand(CommandAction) Initializes a new instance of the DeferredCommand class. Declaration public DeferredCommand(CommandAction process) Parameters Type Name Description CommandAction process Process. Properties | Improve this Doc View Source ExecutionDelay The Time to wait in seconds to execute again the scheduled item. Declaration public float ExecutionDelay { get; } Property Value Type Description System.Single The next execution delay. | Improve this Doc View Source ExecutionDelayMax The maximum Time to wait (in seconds) before executing this command again. Declaration public float ExecutionDelayMax { get; set; } Property Value Type Description System.Single The next execution delay max. | Improve this Doc View Source ExecutionDelayMin The minimum Time to wait (in seconds) before executing this command again. Declaration public float ExecutionDelayMin { get; set; } Property Value Type Description System.Single The next execution delay minimum. | Improve this Doc View Source InitExecutionDelay This determines how much Time to wait (in seconds), before executing the scheduled item for the first Time. This is ignored after the first execution Declaration public float InitExecutionDelay { get; } Property Value Type Description System.Single The first execution delay. | Improve this Doc View Source InitExecutionDelayMax Controls the maximum Time delay before this command is executed for the first Time. Declaration public float InitExecutionDelayMax { get; set; } Property Value Type Description System.Single The first execution delay max. | Improve this Doc View Source InitExecutionDelayMin Controls the minimum Time delay before this command is executed for the first Time. Declaration public float InitExecutionDelayMin { get; set; } Property Value Type Description System.Single The first execution delay minimum. | Improve this Doc View Source IsRepeating Gets or sets a value indicating whether this instance is repeating. Declaration public bool IsRepeating { get; set; } Property Value Type Description System.Boolean true if this instance is repeating; otherwise, false . | Improve this Doc View Source LastExecution The time of the last execution in seconds since the start of the application. Declaration public float LastExecution { get; } Property Value Type Description System.Single | Improve this Doc View Source LastUpdateDeltaTime This returns the time difference between the last update time and the second to last update time. Declaration public float LastUpdateDeltaTime { get; } Property Value Type Description System.Single | Improve this Doc View Source TimesExecuted The number of times the Execute() command was called. Declaration public long TimesExecuted { get; } Property Value Type Description System.Int64 | Improve this Doc View Source TimeSinceLastUpdate The time since the last update in seconds. Declaration public float TimeSinceLastUpdate { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source Execute() Declaration public void Execute()"
  },
  "api_plugin/toc.html": {
    "href": "api_plugin/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "api_ui/toc.html": {
    "href": "api_ui/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "toc.html": {
    "href": "toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "articles/toc.html": {
    "href": "articles/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "api/Reactive.Serialization.Serializer.B.html": {
    "href": "api/Reactive.Serialization.Serializer.B.html",
    "title": "Class Serializer.B | Reactive",
    "keywords": "Class Serializer.B Inheritance System.Object Serializer.A Serializer.B Inherited Members Serializer.A.DoubleValue Serializer.A.Date Serializer.A.GUID Serializer.A.Equals(Serializer.A) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax [SerializationVersion(1U)] protected class B : Serializer.A, IEquatable<Serializer.A>, ISerializable, IEquatable<Serializer.B> Fields | Improve this Doc ByteValue Declaration public byte ByteValue Field Value Type Description System.Byte | Improve this Doc SByteValue Declaration public sbyte SByteValue Field Value Type Description System.SByte Methods | Improve this Doc Equals(Serializer.B) Declaration public bool Equals(Serializer.B other) Parameters Type Name Description Serializer.B other Returns Type Description System.Boolean Implements System.IEquatable<Reactive.Serialization.Serializer.B>.Equals(Reactive.Serialization.Serializer.B) | Improve this Doc SerializeAttributes(IAttributesSerializer, IVersionProvider) Declaration public void SerializeAttributes(IAttributesSerializer serializer, IVersionProvider versionProvider) Parameters Type Name Description IAttributesSerializer serializer IVersionProvider versionProvider Implements ISerializable.SerializeAttributes(IAttributesSerializer, IVersionProvider) | Improve this Doc SerializeElements(IElementsSerializer, IVersionProvider) Declaration public void SerializeElements(IElementsSerializer serializer, IVersionProvider versionProvider) Parameters Type Name Description IElementsSerializer serializer IVersionProvider versionProvider Implements ISerializable.SerializeElements(IElementsSerializer, IVersionProvider)"
  },
  "api/Reactive.Serialization.Serializer.MyStruct.html": {
    "href": "api/Reactive.Serialization.Serializer.MyStruct.html",
    "title": "Struct Serializer.MyStruct | Reactive",
    "keywords": "Struct Serializer.MyStruct Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax protected struct MyStruct : ISerializable, IEquatable<Serializer.MyStruct> Fields | Improve this Doc LongValue Declaration public long LongValue Field Value Type Description System.Int64 Methods | Improve this Doc Equals(Serializer.MyStruct) Declaration public bool Equals(Serializer.MyStruct other) Parameters Type Name Description Serializer.MyStruct other Returns Type Description System.Boolean Implements System.IEquatable<Reactive.Serialization.Serializer.MyStruct>.Equals(Reactive.Serialization.Serializer.MyStruct) | Improve this Doc SerializeAttributes(IAttributesSerializer, IVersionProvider) Declaration public void SerializeAttributes(IAttributesSerializer serializer, IVersionProvider versionProvider) Parameters Type Name Description IAttributesSerializer serializer IVersionProvider versionProvider Implements ISerializable.SerializeAttributes(IAttributesSerializer, IVersionProvider) | Improve this Doc SerializeElements(IElementsSerializer, IVersionProvider) Declaration public void SerializeElements(IElementsSerializer serializer, IVersionProvider versionProvider) Parameters Type Name Description IElementsSerializer serializer IVersionProvider versionProvider Implements ISerializable.SerializeElements(IElementsSerializer, IVersionProvider) | Improve this Doc ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/Reactive.Serialization.Serializer.SerializationMode.html": {
    "href": "api/Reactive.Serialization.Serializer.SerializationMode.html",
    "title": "Enum Serializer.SerializationMode | Reactive",
    "keywords": "Enum Serializer.SerializationMode Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public enum SerializationMode Fields Name Description Read Write"
  },
  "api/Reactive.Serialization.Serializer.TestData.TestEnum.html": {
    "href": "api/Reactive.Serialization.Serializer.TestData.TestEnum.html",
    "title": "Enum Serializer.TestData.TestEnum | Reactive",
    "keywords": "Enum Serializer.TestData.TestEnum Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public enum TestEnum Fields Name Description FirstValue SecondValue"
  },
  "api/Reactive.Serialization.Serializer.TestData.html": {
    "href": "api/Reactive.Serialization.Serializer.TestData.html",
    "title": "Class Serializer.TestData | Reactive",
    "keywords": "Class Serializer.TestData Inheritance System.Object Serializer.TestData Inherited Members System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax [SerializationVersion(1U)] protected class TestData : ISerializable, IEquatable<Serializer.TestData> Fields | Improve this Doc BoolValue Declaration public bool BoolValue Field Value Type Description System.Boolean | Improve this Doc DictionaryValue Declaration public Dictionary<string, int> DictionaryValue Field Value Type Description System.Collections.Generic.Dictionary<TKey, TValue> < System.String , System.Int32 > | Improve this Doc EnumValue Declaration public Serializer.TestData.TestEnum EnumValue Field Value Type Description Serializer.TestData.TestEnum | Improve this Doc FloatValue Declaration public float FloatValue Field Value Type Description System.Single | Improve this Doc InternalData Declaration public Serializer.TestData InternalData Field Value Type Description Serializer.TestData | Improve this Doc ListValue Declaration public List<Serializer.A[]> ListValue Field Value Type Description System.Collections.Generic.List<T> < Serializer.A []> | Improve this Doc StringValue Declaration public string StringValue Field Value Type Description System.String | Improve this Doc Struct Declaration public Serializer.MyStruct Struct Field Value Type Description Serializer.MyStruct | Improve this Doc UglyData Declaration public List<Dictionary<Serializer.TestData.TestEnum, Serializer.A>>[] UglyData Field Value Type Description System.Collections.Generic.List<T> < System.Collections.Generic.Dictionary<TKey, TValue> < Serializer.TestData.TestEnum , Serializer.A >>[] | Improve this Doc UintValue Declaration public uint UintValue Field Value Type Description System.UInt32 Methods | Improve this Doc Equals(Serializer.TestData) Declaration public bool Equals(Serializer.TestData other) Parameters Type Name Description Serializer.TestData other Returns Type Description System.Boolean Implements System.IEquatable<Reactive.Serialization.Serializer.TestData>.Equals(Reactive.Serialization.Serializer.TestData) | Improve this Doc Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() Explicit Interface Implementations | Improve this Doc ISerializable.SerializeAttributes(IAttributesSerializer, IVersionProvider) Declaration void ISerializable.SerializeAttributes(IAttributesSerializer serializer, IVersionProvider versionProvider) Parameters Type Name Description IAttributesSerializer serializer IVersionProvider versionProvider Implements ISerializable.SerializeAttributes(IAttributesSerializer, IVersionProvider) | Improve this Doc ISerializable.SerializeElements(IElementsSerializer, IVersionProvider) Declaration void ISerializable.SerializeElements(IElementsSerializer serializer, IVersionProvider versionProvider) Parameters Type Name Description IElementsSerializer serializer IVersionProvider versionProvider Implements ISerializable.SerializeElements(IElementsSerializer, IVersionProvider)"
  },
  "api/Reactive.Serialization.Serializer.html": {
    "href": "api/Reactive.Serialization.Serializer.html",
    "title": "Class Serializer | Reactive",
    "keywords": "Class Serializer Inheritance System.Object Serializer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public abstract class Serializer : IDisposable, IAttributesSerializer, IElementsSerializer Constructors | Improve this Doc Serializer(Stream, Serializer.SerializationMode) Declaration protected Serializer(Stream stream, Serializer.SerializationMode mode) Parameters Type Name Description System.IO.Stream stream Serializer.SerializationMode mode Fields | Improve this Doc versionProvidersByType Declaration protected Dictionary<Type, VersionProvider> versionProvidersByType Field Value Type Description System.Collections.Generic.Dictionary<TKey, TValue> < System.Type , VersionProvider > Properties | Improve this Doc Mode Declaration public Serializer.SerializationMode Mode { get; } Property Value Type Description Serializer.SerializationMode Implements IAttributesSerializer.Mode IElementsSerializer.Mode Methods | Improve this Doc CanSerializeTypeAsAttribute(Type) Declaration protected bool CanSerializeTypeAsAttribute(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean | Improve this Doc Dispose() Declaration public void Dispose() Implements System.IDisposable.Dispose() | Improve this Doc Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing | Improve this Doc Finalize() Declaration protected void Finalize() | Improve this Doc FromString<T>(String) Declaration protected T FromString<T>(string stringValue) Parameters Type Name Description System.String stringValue Returns Type Description T Type Parameters Name Description T | Improve this Doc GetTestDataInstance() Declaration protected static Serializer.TestData GetTestDataInstance() Returns Type Description Serializer.TestData | Improve this Doc GetVersionAttributeNameFromVersionID(String) Declaration protected virtual string GetVersionAttributeNameFromVersionID(string versionID) Parameters Type Name Description System.String versionID Returns Type Description System.String | Improve this Doc GetVersionProvider<T>(T) Declaration protected VersionProvider GetVersionProvider<T>(T value)where T : ISerializable Parameters Type Name Description T value Returns Type Description VersionProvider Type Parameters Name Description T | Improve this Doc ReleaseVersionProvider(VersionProvider) Declaration protected void ReleaseVersionProvider(VersionProvider versionProvider) Parameters Type Name Description VersionProvider versionProvider | Improve this Doc SerializeAttribute<T>(String, T) Declaration public abstract T SerializeAttribute<T>(string attributeName, T value) Parameters Type Name Description System.String attributeName T value Returns Type Description T Type Parameters Name Description T Implements IAttributesSerializer.SerializeAttribute<T>(String, T) | Improve this Doc SerializeElement<T>(String, T) Declaration public T SerializeElement<T>(string elementName, T value) Parameters Type Name Description System.String elementName T value Returns Type Description T Type Parameters Name Description T Implements IElementsSerializer.SerializeElement<T>(String, T) | Improve this Doc SerializeElement<T>(String, T, SerializationOption) Declaration public abstract T SerializeElement<T>(string elementName, T value, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName T value SerializationOption serializationOptions Returns Type Description T Type Parameters Name Description T Implements IElementsSerializer.SerializeElement<T>(String, T, SerializationOption) | Improve this Doc SerializeElement<T>(String, T[]) Declaration public T[] SerializeElement<T>(string elementName, T[] array) Parameters Type Name Description System.String elementName T[] array Returns Type Description T[] Type Parameters Name Description T Implements IElementsSerializer.SerializeElement<T>(String, T[]) | Improve this Doc SerializeElement<T>(String, T[], SerializationOption) Declaration public T[] SerializeElement<T>(string elementName, T[] array, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName T[] array SerializationOption serializationOptions Returns Type Description T[] Type Parameters Name Description T Implements IElementsSerializer.SerializeElement<T>(String, T[], SerializationOption) | Improve this Doc SerializeElement<T>(String, T[], String) Declaration public T[] SerializeElement<T>(string elementName, T[] array, string subElementName) Parameters Type Name Description System.String elementName T[] array System.String subElementName Returns Type Description T[] Type Parameters Name Description T Implements IElementsSerializer.SerializeElement<T>(String, T[], String) | Improve this Doc SerializeElement<T>(String, T[], String, SerializationOption) Declaration public abstract T[] SerializeElement<T>(string elementName, T[] array, string subElementName, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName T[] array System.String subElementName SerializationOption serializationOptions Returns Type Description T[] Type Parameters Name Description T Implements IElementsSerializer.SerializeElement<T>(String, T[], String, SerializationOption) | Improve this Doc SerializeElement<T>(String, List<T>) Declaration public List<T> SerializeElement<T>(string elementName, List<T> list) Parameters Type Name Description System.String elementName System.Collections.Generic.List<T> <T> list Returns Type Description System.Collections.Generic.List<T> <T> Type Parameters Name Description T Implements IElementsSerializer.SerializeElement<T>(String, List<T>) | Improve this Doc SerializeElement<T>(String, List<T>, SerializationOption) Declaration public List<T> SerializeElement<T>(string elementName, List<T> list, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName System.Collections.Generic.List<T> <T> list SerializationOption serializationOptions Returns Type Description System.Collections.Generic.List<T> <T> Type Parameters Name Description T Implements IElementsSerializer.SerializeElement<T>(String, List<T>, SerializationOption) | Improve this Doc SerializeElement<T>(String, List<T>, String) Declaration public List<T> SerializeElement<T>(string elementName, List<T> list, string subElementName) Parameters Type Name Description System.String elementName System.Collections.Generic.List<T> <T> list System.String subElementName Returns Type Description System.Collections.Generic.List<T> <T> Type Parameters Name Description T Implements IElementsSerializer.SerializeElement<T>(String, List<T>, String) | Improve this Doc SerializeElement<T>(String, List<T>, String, SerializationOption) Declaration public abstract List<T> SerializeElement<T>(string elementName, List<T> list, string subElementName, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName System.Collections.Generic.List<T> <T> list System.String subElementName SerializationOption serializationOptions Returns Type Description System.Collections.Generic.List<T> <T> Type Parameters Name Description T Implements IElementsSerializer.SerializeElement<T>(String, List<T>, String, SerializationOption) | Improve this Doc SerializeElement<TKey, TValue>(String, Dictionary<TKey, TValue>) Declaration public Dictionary<TKey, TValue> SerializeElement<TKey, TValue>(string elementName, Dictionary<TKey, TValue> dictionary) Parameters Type Name Description System.String elementName System.Collections.Generic.Dictionary<TKey, TValue> <TKey, TValue> dictionary Returns Type Description System.Collections.Generic.Dictionary<TKey, TValue> <TKey, TValue> Type Parameters Name Description TKey TValue Implements IElementsSerializer.SerializeElement<TKey, TValue>(String, Dictionary<TKey, TValue>) | Improve this Doc SerializeElement<TKey, TValue>(String, Dictionary<TKey, TValue>, SerializationOption) Declaration public abstract Dictionary<TKey, TValue> SerializeElement<TKey, TValue>(string elementName, Dictionary<TKey, TValue> dictionary, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName System.Collections.Generic.Dictionary<TKey, TValue> <TKey, TValue> dictionary SerializationOption serializationOptions Returns Type Description System.Collections.Generic.Dictionary<TKey, TValue> <TKey, TValue> Type Parameters Name Description TKey TValue Implements IElementsSerializer.SerializeElement<TKey, TValue>(String, Dictionary<TKey, TValue>, SerializationOption) | Improve this Doc SerializeSubElement<T>(String, T, SerializationOption) Declaration protected T SerializeSubElement<T>(string elementName, T value, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName T value SerializationOption serializationOptions Returns Type Description T Type Parameters Name Description T | Improve this Doc SerializeVersionAttribute(VersionProvider) Declaration protected VersionProvider SerializeVersionAttribute(VersionProvider versionProvider) Parameters Type Name Description VersionProvider versionProvider Returns Type Description VersionProvider | Improve this Doc Skip(String) Declaration public abstract void Skip(string elementName) Parameters Type Name Description System.String elementName Implements IElementsSerializer.Skip(String) | Improve this Doc ToString<T>(T) Declaration protected string ToString<T>(T value) Parameters Type Name Description T value Returns Type Description System.String Type Parameters Name Description T"
  },
  "api/Reactive.Serialization.VersionProvider.html": {
    "href": "api/Reactive.Serialization.VersionProvider.html",
    "title": "Class VersionProvider | Reactive",
    "keywords": "Class VersionProvider Class containing methods for handling app version. Inheritance System.Object VersionProvider Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public class VersionProvider : IEnumerable<SerializationVersion>, IEnumerable, IVersionProvider Methods | Improve this Doc GetVersionNumber() Declaration public uint GetVersionNumber() Returns Type Description System.UInt32 Implements IVersionProvider.GetVersionNumber() Explicit Interface Implementations | Improve this Doc IEnumerable<SerializationVersion>.GetEnumerator() Declaration IEnumerator<SerializationVersion> IEnumerable<SerializationVersion>.GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator<T> < Reactive.Serialization.SerializationVersion > Implements System.Collections.Generic.IEnumerable<Reactive.Serialization.SerializationVersion>.GetEnumerator() | Improve this Doc IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator() Extension Methods Reactive.Utils.Extensions.ListExtension.ToString<Reactive.Serialization.SerializationVersion>(System.Func<Reactive.Serialization.SerializationVersion, System.String>, System.String, System.String) Reactive.Utils.Extensions.ListExtension.ToString<Reactive.Serialization.SerializationVersion>(System.String, System.String) Reactive.Utils.Extensions.ListExtension.FindHighest<Reactive.Serialization.SerializationVersion>(System.Func<Reactive.Serialization.SerializationVersion, System.Single>, System.Func<Reactive.Serialization.SerializationVersion, System.Boolean>)"
  },
  "api/Reactive.Serialization.html": {
    "href": "api/Reactive.Serialization.html",
    "title": "Namespace Reactive.Serialization | Reactive",
    "keywords": "Namespace Reactive.Serialization Classes BinarySerializer SerializationVersionAttribute Serializer Serializer.A Serializer.B Serializer.TestData VersionProvider Class containing methods for handling app version. Structs Serializer.MyStruct Interfaces IAttributesSerializer IElementsSerializer ISerializable ISerializationFilter IStringConvertible<T> IVersionProvider Enums SerializationOption Serializer.SerializationMode Serializer.TestData.TestEnum"
  },
  "api/Reactive.Utils.Extensions.FloatExtensions.html": {
    "href": "api/Reactive.Utils.Extensions.FloatExtensions.html",
    "title": "Class FloatExtensions | Reactive",
    "keywords": "Class FloatExtensions Extensions for class. Inheritance System.Object FloatExtensions Namespace :Reactive.Utils.Extensions Assembly :Reactive.dll Syntax public static class FloatExtensions : object Methods | Improve this Doc View Source CeilAwayFromZero(Single) Declaration public static float CeilAwayFromZero(this float f) Parameters Type Name Description System.Single f Returns Type Description System.Single | Improve this Doc View Source FloorTowardZero(Single) Declaration public static float FloorTowardZero(this float f) Parameters Type Name Description System.Single f Returns Type Description System.Single | Improve this Doc View Source Round(Single) Declaration public static float Round(this float f) Parameters Type Name Description System.Single f Returns Type Description System.Single | Improve this Doc View Source ToInt(Single) Declaration public static int ToInt(this float f) Parameters Type Name Description System.Single f Returns Type Description System.Int32 | Improve this Doc View Source ToString(Single, Int32, Boolean, Boolean) Declaration public static string ToString(this float f, int decimals = 0, bool percentage = false, bool signed = false) Parameters Type Name Description System.Single f System.Int32 decimals System.Boolean percentage System.Boolean signed Returns Type Description System.String"
  },
  "api/Reactive.Utils.Extensions.IntExtensions.html": {
    "href": "api/Reactive.Utils.Extensions.IntExtensions.html",
    "title": "Class IntExtensions | Reactive",
    "keywords": "Class IntExtensions Extensions for class. Inheritance System.Object IntExtensions Namespace :Reactive.Utils.Extensions Assembly :Reactive.dll Syntax public static class IntExtensions : object Methods | Improve this Doc View Source ToString(Int32, Boolean) Declaration public static string ToString(this int i, bool signed = false) Parameters Type Name Description System.Int32 i System.Boolean signed Returns Type Description System.String"
  },
  "api/Reactive.Utils.Extensions.ListExtension.html": {
    "href": "api/Reactive.Utils.Extensions.ListExtension.html",
    "title": "Class ListExtension | Reactive",
    "keywords": "Class ListExtension Extensions for class. Inheritance System.Object ListExtension Namespace :Reactive.Utils.Extensions Assembly :Reactive.dll Syntax public static class ListExtension : object Methods | Improve this Doc View Source AddOnce<T>(IList<T>, T) Declaration public static void AddOnce<T>(this IList<T> list, T item) Parameters Type Name Description IList<> <T> list T item Type Parameters Name Description T | Improve this Doc View Source BinaryFind<T>(IList<T>, Func<T, Int32>) Declaration public static T BinaryFind<T>(this IList<T> list, Func<T, int> comparer) Parameters Type Name Description IList<> <T> list Func<, > <T, System.Int32 > comparer Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source BinarySearch<T>(IList<T>, Func<T, Int32>) Declaration public static int BinarySearch<T>(this IList<T> list, Func<T, int> comparer) Parameters Type Name Description IList<> <T> list Func<, > <T, System.Int32 > comparer Returns Type Description System.Int32 Type Parameters Name Description T | Improve this Doc View Source BinarySearch<T, U>(IList<T>, U, Func<T, U, Int32>) Declaration public static int BinarySearch<T, U>(this IList<T> list, U compared, Func<T, U, int> comparer) Parameters Type Name Description IList<> <T> list U compared Func<, , > <T, U, System.Int32 > comparer Returns Type Description System.Int32 Type Parameters Name Description T U | Improve this Doc View Source FindHighest<T>(IEnumerable<T>, Func<T, Single>, Func<T, Boolean>) Declaration public static T FindHighest<T>(this IEnumerable<T> list, Func<T, float> scorer, Func<T, bool> predicate = null) Parameters Type Name Description IEnumerable<> <T> list Func<, > <T, System.Single > scorer Func<, > <T, System.Boolean > predicate Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source FindLowest<T>(IList<T>, Func<T, Single>, Func<T, Boolean>) Declaration public static T FindLowest<T>(this IList<T> list, Func<T, float> scorer, Func<T, bool> predicate = null) Parameters Type Name Description IList<> <T> list Func<, > <T, System.Single > scorer Func<, > <T, System.Boolean > predicate Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source MoveItemAtIndexToFront<T>(List<T>, Int32) Declaration public static void MoveItemAtIndexToFront<T>(this List<T> list, int index) Parameters Type Name Description List<> <T> list System.Int32 index Type Parameters Name Description T | Improve this Doc View Source Randomize<T>(IList<T>, Random) Declaration public static List<T> Randomize<T>(this IList<T> list, Random random = null) Parameters Type Name Description IList<> <T> list System.Random random Returns Type Description List<> <T> Type Parameters Name Description T | Improve this Doc View Source Shuffle<T>(IList<T>, Random) Declaration public static void Shuffle<T>(this IList<T> list, Random random = null) Parameters Type Name Description IList<> <T> list System.Random random Type Parameters Name Description T | Improve this Doc View Source Shuffle<T>(List<T>, Random) Declaration public static void Shuffle<T>(this List<T> list, Random random) Parameters Type Name Description List<> <T> list Random random Type Parameters Name Description T | Improve this Doc View Source ToString<T>(IEnumerable<T>, Func<T, String>, String, String) Declaration public static string ToString<T>(this IEnumerable<T> list, Func<T, string> stringifier, string separator = \",\", string defaultIfEmpty = \"\") Parameters Type Name Description IEnumerable<> <T> list Func<, > <T, System.String > stringifier System.String separator System.String defaultIfEmpty Returns Type Description System.String Type Parameters Name Description T | Improve this Doc View Source ToString<T>(IEnumerable<T>, String, String) Declaration public static string ToString<T>(this IEnumerable<T> list, string separator = \",\", string defaultIfEmpty = \"\") Parameters Type Name Description IEnumerable<> <T> list System.String separator System.String defaultIfEmpty Returns Type Description System.String Type Parameters Name Description T"
  },
  "api/Reactive.Utils.Extensions.StringExtensions.html": {
    "href": "api/Reactive.Utils.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Reactive",
    "keywords": "Class StringExtensions Extensions for class. Inheritance System.Object StringExtensions Namespace :Reactive.Utils.Extensions Assembly :Reactive.dll Syntax public static class StringExtensions : object Methods | Improve this Doc View Source Contains(String, Char) Indicate if the string contains a character. Declaration public static bool Contains(this string text, char value) Parameters Type Name Description System.String text The text System.Char value The character to look for. Returns Type Description System.Boolean A boolean indicating if at least one instance of value is present in text | Improve this Doc View Source EndsWith(String, Char) Determines whether the end of this string ends by the specified character. Declaration public static bool EndsWith(this string stringToTest, char endChar) Parameters Type Name Description System.String stringToTest The string automatic test. System.Char endChar The end character. Returns Type Description System.Boolean true if the end of this string ends by the specified character, false otherwise. | Improve this Doc View Source EndsWith(String, Char[]) Determines whether the end of this string ends by the specified characters. Declaration public static bool EndsWith(this string stringToTest, params char[] endChars) Parameters Type Name Description System.String stringToTest The string automatic test. System.Char [] endChars The end characters. Returns Type Description System.Boolean true if the end of this string ends by the specified character, false otherwise. | Improve this Doc View Source IndexOf(StringBuilder, Char) Calculates the index of a char inside the following , equivalent of for a StringBuilder. Declaration public static int IndexOf(this StringBuilder builder, char testChar) Parameters Type Name Description StringBuilder builder The builder. System.Char testChar The test character. Returns Type Description System.Int32 A position to the character found, or -1 if not found. | Improve this Doc View Source IndexOfReverse(String, Char, Int32) Reports the index number, or character position, of the first occurrence of the specified Unicode character in the current String object. The search starts at a specified character position starting from the end and examines a specified number of character positions. Declaration public static int IndexOfReverse(this string text, char charToFind, int matchCount = 1) Parameters Type Name Description System.String text The text. System.Char charToFind The character automatic find. System.Int32 matchCount The number of match before stopping. Default is 1 Returns Type Description System.Int32 The character position of the value parameter for the specified character if it is found, or -1 if it is not found. | Improve this Doc View Source IndexOfReverse(String, Char, Int32, Int32, Int32) Reports the index number, or character position, of the first occurrence of the specified Unicode character in the current String object. The search starts at a specified character position starting from the end and examines a specified number of character positions. Declaration public static int IndexOfReverse(this string text, char charToFind, int startIndexFromEnd, int count, int matchCount = 1) Parameters Type Name Description System.String text The text. System.Char charToFind The character automatic find. System.Int32 startIndexFromEnd The starting index number for the search relative to the end of the string. System.Int32 count The number of character positions to be examined. System.Int32 matchCount The number of match before stopping. Default is 1 Returns Type Description System.Int32 The character position of the value parameter for the specified character if it is found, or -1 if it is not found. | Improve this Doc View Source LastIndexOf(StringBuilder, Char, Int32) Calculates the last index of a char inside the following , equivalent of for a StringBuilder. Declaration public static int LastIndexOf(this StringBuilder builder, char testChar, int startIndex = 0) Parameters Type Name Description StringBuilder builder The builder. System.Char testChar The test character. System.Int32 startIndex The start index. Returns Type Description System.Int32 A position to the character found, or -1 if not found. | Improve this Doc View Source SafeTrim(String) Safely trim a string. Declaration public static string SafeTrim(this string value) Parameters Type Name Description System.String value The string value. can be null Returns Type Description System.String The string trimmed.May be null if string was null | Improve this Doc View Source Substring(StringBuilder, Int32) Declaration public static string Substring(this StringBuilder builder, int startIndex) Parameters Type Name Description StringBuilder builder System.Int32 startIndex Returns Type Description System.String | Improve this Doc View Source Substring(StringBuilder, Int32, Int32) Declaration public static string Substring(this StringBuilder builder, int startIndex, int length) Parameters Type Name Description StringBuilder builder System.Int32 startIndex System.Int32 length Returns Type Description System.String | Improve this Doc View Source ToFormat(String, Object[]) Extension to format a string using method by allowing to use it directly on a string. Declaration public static string ToFormat(this string stringToFormat, params object[] argumentsToFormat) Parameters Type Name Description System.String stringToFormat The string automatic format. System.Object [] argumentsToFormat The arguments automatic format. Returns Type Description System.String A formatted string. See"
  },
  "api/Reactive.Utils.Extensions.html": {
    "href": "api/Reactive.Utils.Extensions.html",
    "title": "Namespace Reactive.Utils.Extensions | Reactive",
    "keywords": "Namespace Reactive.Utils.Extensions Classes FloatExtensions Extensions for class. IntExtensions Extensions for class. ListExtension Extensions for class. StringExtensions Extensions for class."
  },
  "api/Reactive.Utils.Randomizer.html": {
    "href": "api/Reactive.Utils.Randomizer.html",
    "title": "Class Randomizer | Reactive",
    "keywords": "Class Randomizer Class for generating random data. Inheritance System.Object Randomizer Namespace :Reactive.Utils Assembly :Reactive.dll Syntax public class Randomizer : object Constructors | Improve this Doc View Source Randomizer(Int32) Declaration public Randomizer(int _seed) Parameters Type Name Description System.Int32 _seed Fields | Improve this Doc View Source AM Declaration protected double AM Field Value Type Description System.Double | Improve this Doc View Source IA Declaration protected readonly int IA Field Value Type Description System.Int32 | Improve this Doc View Source IM Declaration protected readonly int IM Field Value Type Description System.Int32 | Improve this Doc View Source IQ Declaration protected readonly int IQ Field Value Type Description System.Int32 | Improve this Doc View Source IR Declaration protected readonly int IR Field Value Type Description System.Int32 | Improve this Doc View Source MASK Declaration protected readonly int MASK Field Value Type Description System.Int32 | Improve this Doc View Source Seed Declaration public int Seed Field Value Type Description System.Int32 Methods | Improve this Doc View Source Dice(Int32) Returns a random integer within a dice (eg: sides = 8 would return a number within 1-8). Declaration public int Dice(int sides) Parameters Type Name Description System.Int32 sides Returns Type Description System.Int32 | Improve this Doc View Source Next() Declaration public float Next() Returns Type Description System.Single | Improve this Doc View Source Next(Int32) Declaration public int Next(int maxNotReached) Parameters Type Name Description System.Int32 maxNotReached Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32, Int32) Declaration public int Next(int min, int maxNotReached) Parameters Type Name Description System.Int32 min System.Int32 maxNotReached Returns Type Description System.Int32 | Improve this Doc View Source NextDouble() Declaration public double NextDouble() Returns Type Description System.Double | Improve this Doc View Source Range(Single, Single) Returns a random float number between and min [inclusive] and max inclusive . Declaration public float Range(float min, float max) Parameters Type Name Description System.Single min System.Single max Returns Type Description System.Single"
  },
  "api/Reactive.Utils.SingleInstance.html": {
    "href": "api/Reactive.Utils.SingleInstance.html",
    "title": "Class SingleInstance | Reactive",
    "keywords": "Class SingleInstance Inheritance System.Object SingleInstance Namespace :Reactive.Utils Assembly :Reactive.dll Syntax public class SingleInstance : object Constructors | Improve this Doc View Source SingleInstance() Declaration public SingleInstance() | Improve this Doc View Source SingleInstance(String) Declaration public SingleInstance(string identifier) Parameters Type Name Description System.String identifier Properties | Improve this Doc View Source IsSingleInstance Declaration public bool IsSingleInstance { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Close() Declaration public void Close()"
  },
  "api/Reactive.Utils.html": {
    "href": "api/Reactive.Utils.html",
    "title": "Namespace Reactive.Utils | Reactive",
    "keywords": "Namespace Reactive.Utils Classes Randomizer Class for generating random data. SingleInstance"
  },
  "api/Reactive.html": {
    "href": "api/Reactive.html",
    "title": "Namespace Reactive | Reactive",
    "keywords": "Namespace Reactive Classes App Access to application run-time data. MyEnvironment"
  },
  "api/System.Reflection.AssemblyExtensions.html": {
    "href": "api/System.Reflection.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions | Reactive",
    "keywords": "Class AssemblyExtensions Inheritance System.Object AssemblyExtensions Namespace :System.Reflection Assembly :Reactive.dll Syntax public static class AssemblyExtensions : object Methods | Improve this Doc View Source GetArchitecture(Assembly) Declaration public static ProcessorArchitecture GetArchitecture(this Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description ProcessorArchitecture | Improve this Doc View Source GetPeKind(Assembly) Declaration public static PortableExecutableKinds GetPeKind(this Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description PortableExecutableKinds | Improve this Doc View Source ToProcessorArchitecture(PortableExecutableKinds) Declaration public static ProcessorArchitecture ToProcessorArchitecture(this PortableExecutableKinds peKind) Parameters Type Name Description PortableExecutableKinds peKind Returns Type Description ProcessorArchitecture | Improve this Doc View Source TryGetArchitecture(Assembly) Declaration public static ProcessorArchitecture TryGetArchitecture(this Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description ProcessorArchitecture | Improve this Doc View Source TryGetArchitecture(String) Declaration public static ProcessorArchitecture TryGetArchitecture(string assemblyName) Parameters Type Name Description System.String assemblyName Returns Type Description ProcessorArchitecture"
  },
  "api/System.Reflection.html": {
    "href": "api/System.Reflection.html",
    "title": "Namespace System.Reflection | Reactive",
    "keywords": "Namespace System.Reflection Classes AssemblyExtensions"
  },
  "api_ai/ReactiveAI.AIMath.html": {
    "href": "api_ai/ReactiveAI.AIMath.html",
    "title": "Class AIMath | Reactive",
    "keywords": "Class AIMath Inheritance System.Object AIMath Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class AIMath Properties | Improve this Doc View Source Deps Returns a machine specific estimate of the double EPSILON value. Declaration public static double Deps { get; } Property Value Type Description System.Double | Improve this Doc View Source Eps Returns a machine specific estimate of the float EPSILON value. Declaration public static float Eps { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source AeqB(Double, Double) The correct way to test for a == b for double floating point numbers. Declaration public static bool AeqB(double a, double b) Parameters Type Name Description System.Double a The alpha value. System.Double b The blue value. Returns Type Description System.Boolean true , if a == b, false otherwise. | Improve this Doc View Source AeqB(Single, Single) The correct way to test for a == b for floating point numbers. Declaration public static bool AeqB(float a, float b) Parameters Type Name Description System.Single a The alpha value. System.Single b The blue value. Returns Type Description System.Boolean true , if a == b, false otherwise. | Improve this Doc View Source AeqZero(Double) The correct way to test for a == 0 for double floating point numbers. Declaration public static bool AeqZero(double a) Parameters Type Name Description System.Double a The alpha value. Returns Type Description System.Boolean true , if a == 0, false otherwise. | Improve this Doc View Source AeqZero(Single) The correct way to test for a == 0 for floating point numbers. Declaration public static bool AeqZero(float a) Parameters Type Name Description System.Single a The alpha value. Returns Type Description System.Boolean true , if a == 0, false otherwise. | Improve this Doc View Source AneqB(Double, Double) The correct way to test for a != b for double floating point numbers. Declaration public static bool AneqB(double a, double b) Parameters Type Name Description System.Double a The alpha value. System.Double b The blue value. Returns Type Description System.Boolean true , if a != b, false otherwise. | Improve this Doc View Source AneqB(Single, Single) The correct way to test for a != b for floating point numbers. Declaration public static bool AneqB(float a, float b) Parameters Type Name Description System.Single a The alpha value. System.Single b The blue value. Returns Type Description System.Boolean true , if a != b, false otherwise. | Improve this Doc View Source AneqZero(Double) The correct way to test for a != 0 for double floating point numbers. Declaration public static bool AneqZero(double a) Parameters Type Name Description System.Double a The alpha value. Returns Type Description System.Boolean true , if a != 0, false otherwise. | Improve this Doc View Source AneqZero(Single) The correct way to test for a != 0 for floating point numbers. Declaration public static bool AneqZero(float a) Parameters Type Name Description System.Single a The alpha value. Returns Type Description System.Boolean true , if a != 0, false otherwise. | Improve this Doc View Source IsEven(Int32) Find out whether the provided 32 bit integer is an even number. Declaration public static bool IsEven(this int number) Parameters Type Name Description System.Int32 number The number to very whether it's even. Returns Type Description System.Boolean True if and only if it is an even number. | Improve this Doc View Source IsEven(Int64) Find out whether the provided 64 bit integer is an even number. Declaration public static bool IsEven(this long number) Parameters Type Name Description System.Int64 number The number to very whether it's even. Returns Type Description System.Boolean True if and only if it is an even number. | Improve this Doc View Source IsOdd(Int32) Find out whether the provided 32 bit integer is an odd number. Declaration public static bool IsOdd(this int number) Parameters Type Name Description System.Int32 number The number to very whether it's odd. Returns Type Description System.Boolean True if and only if it is an odd number. | Improve this Doc View Source IsOdd(Int64) Find out whether the provided 64 bit integer is an odd number. Declaration public static bool IsOdd(this long number) Parameters Type Name Description System.Int64 number The number to very whether it's odd. Returns Type Description System.Boolean True if and only if it is an odd number. | Improve this Doc View Source LinearSpaced(Int32, Single, Single) Generate a linearly spaced sample vector of the given count between the specified values (inclusive). Equivalent to MATLAB linspace but with the count as first instead of last argument. Declaration public static float[] LinearSpaced(int count, float start, float stop) Parameters Type Name Description System.Int32 count System.Single start System.Single stop Returns Type Description System.Single [] | Improve this Doc View Source UpdateDeps(Double) Declaration public static void UpdateDeps(double centre = 1) Parameters Type Name Description System.Double centre | Improve this Doc View Source UpdateEps(Single) Declaration public static void UpdateEps(float centre = 1F) Parameters Type Name Description System.Single centre"
  },
  "api_ai/ReactiveAI.AITime.html": {
    "href": "api_ai/ReactiveAI.AITime.html",
    "title": "Class AITime | Reactive",
    "keywords": "Class AITime Inheritance System.Object AITime Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class AITime Properties | Improve this Doc View Source Time Declaration public static float Time { get; } Property Value Type Description System.Single"
  },
  "api_ai/ReactiveAI.ArrayExtensions.html": {
    "href": "api_ai/ReactiveAI.ArrayExtensions.html",
    "title": "Class ArrayExtensions | Reactive",
    "keywords": "Class ArrayExtensions Inheritance System.Object ArrayExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class ArrayExtensions Methods | Improve this Doc View Source IndexOf<T>(T[], T) Gets the index of a value in an array. Declaration public static int IndexOf<T>(this T[] array, T value)where T : IEquatable<T> Parameters Type Name Description T[] array The array. T value The value to look for. Returns Type Description System.Int32 The index of the value, or -1 if not found Type Parameters Name Description T The type of items in the array"
  },
  "api_ai/ReactiveAI.Bot.BotMain.html": {
    "href": "api_ai/ReactiveAI.Bot.BotMain.html",
    "title": "Class BotMain | Reactive",
    "keywords": "Class BotMain Inheritance System.Object BotMain Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Bot Assembly :ReactiveAI.dll Syntax public class BotMain Fields | Improve this Doc View Source bot Declaration public static SimlBot bot Field Value Type Description Syn.Bot.Siml.SimlBot Methods | Improve this Doc View Source Chat(String) Declaration public static string Chat(string text) Parameters Type Name Description System.String text Returns Type Description System.String"
  },
  "api_ai/ReactiveAI.Bot.html": {
    "href": "api_ai/ReactiveAI.Bot.html",
    "title": "Namespace ReactiveAI.Bot | Reactive",
    "keywords": "Namespace ReactiveAI.Bot Classes BotMain"
  },
  "api_ai/ReactiveAI.DictionaryExtensions.html": {
    "href": "api_ai/ReactiveAI.DictionaryExtensions.html",
    "title": "Class DictionaryExtensions | Reactive",
    "keywords": "Class DictionaryExtensions Inheritance System.Object DictionaryExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class DictionaryExtensions Methods | Improve this Doc View Source RemoveAll<TKey, TValue>(IDictionary<TKey, TValue>, Predicate<TKey>) Works like List.RemoveAll. Declaration public static int RemoveAll<TKey, TValue>(this IDictionary<TKey, TValue> this, Predicate<TKey> match) Parameters Type Name Description System.Collections.Generic.IDictionary<TKey, TValue> <TKey, TValue> this Dictionary to remove entries from System.Predicate<T> <TKey> match Delegate to match keys Returns Type Description System.Int32 Number of entries removed Type Parameters Name Description TKey Key type TValue Value type | Improve this Doc View Source Value<TKey, T>(Dictionary<TKey, T>, TKey) Gets a value from a @this or null if the key was not found. Declaration public static T Value<TKey, T>(this Dictionary<TKey, T> this, TKey key) Parameters Type Name Description System.Collections.Generic.Dictionary<TKey, TValue> <TKey, T> this The @this. TKey key The key. Returns Type Description T The value if found; otherwise null Type Parameters Name Description TKey The type of the key. T The type of the value"
  },
  "api_ai/ReactiveAI.EnumerableExtensions.html": {
    "href": "api_ai/ReactiveAI.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | Reactive",
    "keywords": "Class EnumerableExtensions Inheritance System.Object EnumerableExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class EnumerableExtensions Methods | Improve this Doc View Source Mean(IEnumerable<Single>) Declaration public static float Mean(this IEnumerable<float> this) Parameters Type Name Description System.Collections.Generic.IEnumerable<T> < System.Single > this Returns Type Description System.Single"
  },
  "api_ai/ReactiveAI.IAction.html": {
    "href": "api_ai/ReactiveAI.IAction.html",
    "title": "Interface IAction | Reactive",
    "keywords": "Interface IAction Inherited Members IAIPrototype<IAction>.Clone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IAction : IAIPrototype<IAction> Properties | Improve this Doc View Source ActionStatus Declaration ActionStatus ActionStatus { get; } Property Value Type Description ActionStatus | Improve this Doc View Source Cooldown Declaration float Cooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ElapsedTime Declaration float ElapsedTime { get; } Property Value Type Description System.Single | Improve this Doc View Source InCooldown Declaration bool InCooldown { get; } Property Value Type Description System.Boolean | Improve this Doc View Source NameId Declaration string NameId { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(IContext) Declaration void Execute(IContext context) Parameters Type Name Description IContext context"
  },
  "api_ai/ReactiveAI.IActionCollection.html": {
    "href": "api_ai/ReactiveAI.IActionCollection.html",
    "title": "Interface IActionCollection | Reactive",
    "keywords": "Interface IActionCollection Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IActionCollection Methods | Improve this Doc View Source Add(IAction) Declaration bool Add(IAction action) Parameters Type Name Description IAction action Returns Type Description System.Boolean | Improve this Doc View Source Clear() Declaration void Clear() | Improve this Doc View Source Contains(String) Declaration bool Contains(string nameId) Parameters Type Name Description System.String nameId Returns Type Description System.Boolean | Improve this Doc View Source Create(String) Declaration IAction Create(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IAction"
  },
  "api_ai/ReactiveAI.IAICollection.html": {
    "href": "api_ai/ReactiveAI.IAICollection.html",
    "title": "Interface IAICollection | Reactive",
    "keywords": "Interface IAICollection Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IAICollection Properties | Improve this Doc View Source Actions Declaration IActionCollection Actions { get; } Property Value Type Description IActionCollection | Improve this Doc View Source Behaviours Declaration IBehaviourCollection Behaviours { get; } Property Value Type Description IBehaviourCollection | Improve this Doc View Source Considerations Declaration IConsiderationCollection Considerations { get; } Property Value Type Description IConsiderationCollection | Improve this Doc View Source Options Declaration IOptionCollection Options { get; } Property Value Type Description IOptionCollection Methods | Improve this Doc View Source Add(IUtilityAI) Declaration bool Add(IUtilityAI ai) Parameters Type Name Description IUtilityAI ai Returns Type Description System.Boolean | Improve this Doc View Source Clear() Declaration void Clear() | Improve this Doc View Source ClearAll() Declaration void ClearAll() | Improve this Doc View Source Contains(String) Declaration bool Contains(string nameId) Parameters Type Name Description System.String nameId Returns Type Description System.Boolean | Improve this Doc View Source Create(String) Declaration IUtilityAI Create(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IUtilityAI | Improve this Doc View Source GetAi(String) Declaration IUtilityAI GetAi(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IUtilityAI"
  },
  "api_ai/ReactiveAI.IAIPrototype-1.html": {
    "href": "api_ai/ReactiveAI.IAIPrototype-1.html",
    "title": "Interface IAIPrototype<T> | Reactive",
    "keywords": "Interface IAIPrototype<T> Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IAIPrototype<T> Type Parameters Name Description T Methods | Improve this Doc View Source Clone() Declaration T Clone() Returns Type Description T"
  },
  "api_ai/ReactiveAI.IBehaviour.html": {
    "href": "api_ai/ReactiveAI.IBehaviour.html",
    "title": "Interface IBehaviour | Reactive",
    "keywords": "Interface IBehaviour Inherited Members ICompositeConsideration.Measure ICompositeConsideration.AddConsideration(IConsideration) ICompositeConsideration.AddConsideration(String) IConsideration.NameID IConsideration.DefaultUtil IConsideration.Utility IConsideration.Weight IConsideration.IsInverted IConsideration.Consider(IContext) IAIPrototype<IConsideration>.Clone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IBehaviour : ICompositeConsideration, IConsideration, IAIPrototype<IConsideration> Properties | Improve this Doc View Source Selector Declaration ISelector Selector { get; set; } Property Value Type Description ISelector Methods | Improve this Doc View Source AddOption(IOption) Declaration bool AddOption(IOption option) Parameters Type Name Description IOption option Returns Type Description System.Boolean | Improve this Doc View Source AddOption(String) Declaration bool AddOption(string optionId) Parameters Type Name Description System.String optionId Returns Type Description System.Boolean | Improve this Doc View Source Select(IContext) Declaration IAction Select(IContext context) Parameters Type Name Description IContext context Returns Type Description IAction"
  },
  "api_ai/ReactiveAI.IBehaviourCollection.html": {
    "href": "api_ai/ReactiveAI.IBehaviourCollection.html",
    "title": "Interface IBehaviourCollection | Reactive",
    "keywords": "Interface IBehaviourCollection Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IBehaviourCollection Properties | Improve this Doc View Source Options Declaration IOptionCollection Options { get; } Property Value Type Description IOptionCollection Methods | Improve this Doc View Source Add(IBehaviour) Declaration bool Add(IBehaviour behaviour) Parameters Type Name Description IBehaviour behaviour Returns Type Description System.Boolean | Improve this Doc View Source Clear() Declaration void Clear() | Improve this Doc View Source ClearAll() Declaration void ClearAll() | Improve this Doc View Source Contains(String) Declaration bool Contains(string nameId) Parameters Type Name Description System.String nameId Returns Type Description System.Boolean | Improve this Doc View Source Create(String) Declaration IBehaviour Create(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IBehaviour"
  },
  "api_ai/ReactiveAI.ICompositeConsideration.html": {
    "href": "api_ai/ReactiveAI.ICompositeConsideration.html",
    "title": "Interface ICompositeConsideration | Reactive",
    "keywords": "Interface ICompositeConsideration Inherited Members IConsideration.NameID IConsideration.DefaultUtil IConsideration.Utility IConsideration.Weight IConsideration.IsInverted IConsideration.Consider(IContext) IAIPrototype<IConsideration>.Clone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface ICompositeConsideration : IConsideration, IAIPrototype<IConsideration> Properties | Improve this Doc View Source Measure Declaration IMeasure Measure { get; set; } Property Value Type Description IMeasure Methods | Improve this Doc View Source AddConsideration(IConsideration) Declaration bool AddConsideration(IConsideration consideration) Parameters Type Name Description IConsideration consideration Returns Type Description System.Boolean | Improve this Doc View Source AddConsideration(String) Declaration bool AddConsideration(string considerationId) Parameters Type Name Description System.String considerationId Returns Type Description System.Boolean"
  },
  "api_ai/ReactiveAI.IConsideration.html": {
    "href": "api_ai/ReactiveAI.IConsideration.html",
    "title": "Interface IConsideration | Reactive",
    "keywords": "Interface IConsideration Inherited Members IAIPrototype<IConsideration>.Clone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IConsideration : IAIPrototype<IConsideration> Properties | Improve this Doc View Source DefaultUtil Gets or sets the default utility. Declaration Utility DefaultUtil { get; set; } Property Value Type Description Utility | Improve this Doc View Source IsInverted If true, then the output of the associated evaluator is inverted, in effect, inverting the consideration. Declaration bool IsInverted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NameID A unique named identifier for this consideration. Declaration string NameID { get; } Property Value Type Description System.String | Improve this Doc View Source Utility Returns the utility for this consideration. Declaration Utility Utility { get; } Property Value Type Description Utility | Improve this Doc View Source Weight The weight of this consideration. Declaration float Weight { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Consider(IContext) Calculates the utility given the specified context. Declaration void Consider(IContext context) Parameters Type Name Description IContext context The context."
  },
  "api_ai/ReactiveAI.IConsiderationCollection.html": {
    "href": "api_ai/ReactiveAI.IConsiderationCollection.html",
    "title": "Interface IConsiderationCollection | Reactive",
    "keywords": "Interface IConsiderationCollection Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IConsiderationCollection Methods | Improve this Doc View Source Add(IConsideration) Declaration bool Add(IConsideration consideration) Parameters Type Name Description IConsideration consideration Returns Type Description System.Boolean | Improve this Doc View Source Clear() Declaration void Clear() | Improve this Doc View Source Contains(String) Declaration bool Contains(string nameId) Parameters Type Name Description System.String nameId Returns Type Description System.Boolean | Improve this Doc View Source Create(String) Declaration IConsideration Create(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IConsideration"
  },
  "api_ai/ReactiveAI.IContext.html": {
    "href": "api_ai/ReactiveAI.IContext.html",
    "title": "Interface IContext | Reactive",
    "keywords": "Interface IContext Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IContext"
  },
  "api_ai/ReactiveAI.IContextProvider.html": {
    "href": "api_ai/ReactiveAI.IContextProvider.html",
    "title": "Interface IContextProvider | Reactive",
    "keywords": "Interface IContextProvider Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IContextProvider Methods | Improve this Doc View Source Context() Declaration IContext Context() Returns Type Description IContext"
  },
  "api_ai/ReactiveAI.IDecisionMaker.html": {
    "href": "api_ai/ReactiveAI.IDecisionMaker.html",
    "title": "Interface IDecisionMaker | Reactive",
    "keywords": "Interface IDecisionMaker Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IDecisionMaker Methods | Improve this Doc View Source Pause() Declaration void Pause() | Improve this Doc View Source Resume() Declaration void Resume() | Improve this Doc View Source Start() Declaration void Start() | Improve this Doc View Source Stop() Declaration void Stop() | Improve this Doc View Source Think() Declaration void Think() | Improve this Doc View Source Update() Declaration void Update()"
  },
  "api_ai/ReactiveAI.IDeferredCommandHandle.html": {
    "href": "api_ai/ReactiveAI.IDeferredCommandHandle.html",
    "title": "Interface IDeferredCommandHandle | Reactive",
    "keywords": "Interface IDeferredCommandHandle Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IDeferredCommandHandle Properties | Improve this Doc View Source Command The scheduled command this handle refers to. Declaration DeferredCommand Command { get; } Property Value Type Description DeferredCommand | Improve this Doc View Source IsActive If true the associated command is still being executed. Declaration bool IsActive { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Pause() Pause execution of command. Declaration void Pause() | Improve this Doc View Source Resume() Resume execution of this command. Declaration void Resume()"
  },
  "api_ai/ReactiveAI.IMeasure.html": {
    "href": "api_ai/ReactiveAI.IMeasure.html",
    "title": "Interface IMeasure | Reactive",
    "keywords": "Interface IMeasure Inherited Members IAIPrototype<IMeasure>.Clone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IMeasure : IAIPrototype<IMeasure> Methods | Improve this Doc View Source Calculate(ICollection<Utility>) Declaration float Calculate(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Single"
  },
  "api_ai/ReactiveAI.Intelligence.Actions.ActionBase-1.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actions.ActionBase-1.html",
    "title": "Class ActionBase<TContext> | Reactive",
    "keywords": "Class ActionBase<TContext> Inheritance System.Object ActionBase<TContext> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actions Assembly :ReactiveAI.dll Syntax public class ActionBase<TContext> : IAction, IAIPrototype<IAction> where TContext : class, IContext Type Parameters Name Description TContext Constructors | Improve this Doc View Source ActionBase() Declaration public ActionBase() | Improve this Doc View Source ActionBase(ActionBase<TContext>) Declaration protected ActionBase(ActionBase<TContext> other) Parameters Type Name Description ActionBase<TContext> <TContext> other | Improve this Doc View Source ActionBase(String, IActionCollection) Declaration public ActionBase(string nameId, IActionCollection collection) Parameters Type Name Description System.String nameId IActionCollection collection Properties | Improve this Doc View Source ActionStatus Declaration public ActionStatus ActionStatus { get; protected set; } Property Value Type Description ActionStatus Implements IAction.ActionStatus | Improve this Doc View Source Cooldown Declaration public float Cooldown { get; set; } Property Value Type Description System.Single Implements IAction.Cooldown | Improve this Doc View Source ElapsedTime Declaration public float ElapsedTime { get; } Property Value Type Description System.Single Implements IAction.ElapsedTime | Improve this Doc View Source InCooldown Declaration public bool InCooldown { get; } Property Value Type Description System.Boolean Implements IAction.InCooldown | Improve this Doc View Source NameId Declaration public string NameId { get; } Property Value Type Description System.String Implements IAction.NameId Methods | Improve this Doc View Source Clone() Declaration public virtual IAction Clone() Returns Type Description IAction Implements IAIPrototype<IAction>.Clone() | Improve this Doc View Source EndInFailure(TContext) Declaration protected void EndInFailure(TContext context) Parameters Type Name Description TContext context | Improve this Doc View Source EndInFailure(IContext) Declaration protected void EndInFailure(IContext context) Parameters Type Name Description IContext context | Improve this Doc View Source EndInSuccess(TContext) Declaration protected void EndInSuccess(TContext context) Parameters Type Name Description TContext context | Improve this Doc View Source EndInSuccess(IContext) Declaration protected void EndInSuccess(IContext context) Parameters Type Name Description IContext context | Improve this Doc View Source Execute(TContext) Declaration public void Execute(TContext context) Parameters Type Name Description TContext context | Improve this Doc View Source OnExecute(TContext) Declaration protected virtual void OnExecute(TContext context) Parameters Type Name Description TContext context | Improve this Doc View Source OnStop(TContext) Declaration protected virtual void OnStop(TContext context) Parameters Type Name Description TContext context | Improve this Doc View Source OnUpdate(TContext) Declaration protected virtual void OnUpdate(TContext context) Parameters Type Name Description TContext context Explicit Interface Implementations | Improve this Doc View Source IAction.Execute(IContext) Declaration void IAction.Execute(IContext context) Parameters Type Name Description IContext context Implements IAction.Execute(IContext)"
  },
  "api_ai/ReactiveAI.Intelligence.Actions.ActionBase.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actions.ActionBase.html",
    "title": "Class ActionBase | Reactive",
    "keywords": "Class ActionBase Inheritance System.Object ActionBase Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actions Assembly :ReactiveAI.dll Syntax public class ActionBase : IAction, IAIPrototype<IAction> Constructors | Improve this Doc View Source ActionBase() Declaration public ActionBase() | Improve this Doc View Source ActionBase(ActionBase) Declaration protected ActionBase(ActionBase other) Parameters Type Name Description ActionBase other | Improve this Doc View Source ActionBase(String, IActionCollection) Declaration public ActionBase(string nameId, IActionCollection collection) Parameters Type Name Description System.String nameId IActionCollection collection Properties | Improve this Doc View Source ActionStatus Declaration public ActionStatus ActionStatus { get; protected set; } Property Value Type Description ActionStatus Implements IAction.ActionStatus | Improve this Doc View Source Cooldown Declaration public float Cooldown { get; set; } Property Value Type Description System.Single Implements IAction.Cooldown | Improve this Doc View Source ElapsedTime Declaration public float ElapsedTime { get; } Property Value Type Description System.Single Implements IAction.ElapsedTime | Improve this Doc View Source InCooldown Declaration public bool InCooldown { get; } Property Value Type Description System.Boolean Implements IAction.InCooldown | Improve this Doc View Source NameId Declaration public string NameId { get; set; } Property Value Type Description System.String Implements IAction.NameId Methods | Improve this Doc View Source Clone() Declaration public virtual IAction Clone() Returns Type Description IAction Implements IAIPrototype<IAction>.Clone() | Improve this Doc View Source EndInFailure(IContext) Declaration protected void EndInFailure(IContext context) Parameters Type Name Description IContext context | Improve this Doc View Source EndInSuccess(IContext) Declaration protected void EndInSuccess(IContext context) Parameters Type Name Description IContext context | Improve this Doc View Source Execute(IContext) Declaration public void Execute(IContext context) Parameters Type Name Description IContext context Implements IAction.Execute(IContext) | Improve this Doc View Source OnExecute(IContext) Declaration protected virtual void OnExecute(IContext context) Parameters Type Name Description IContext context | Improve this Doc View Source OnStop(IContext) Declaration protected virtual void OnStop(IContext context) Parameters Type Name Description IContext context | Improve this Doc View Source OnUpdate(IContext) Declaration protected virtual void OnUpdate(IContext context) Parameters Type Name Description IContext context"
  },
  "api_ai/ReactiveAI.Intelligence.Actions.ActionCollection.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actions.ActionCollection.html",
    "title": "Class ActionCollection | Reactive",
    "keywords": "Class ActionCollection Inheritance System.Object ActionCollection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actions Assembly :ReactiveAI.dll Syntax public class ActionCollection : IActionCollection Constructors | Improve this Doc View Source ActionCollection() Declaration public ActionCollection() Methods | Improve this Doc View Source Add(IAction) Declaration public bool Add(IAction action) Parameters Type Name Description IAction action Returns Type Description System.Boolean Implements IActionCollection.Add(IAction) | Improve this Doc View Source Clear() Declaration public void Clear() Implements IActionCollection.Clear() | Improve this Doc View Source Contains(String) Declaration public bool Contains(string nameId) Parameters Type Name Description System.String nameId Returns Type Description System.Boolean Implements IActionCollection.Contains(String) | Improve this Doc View Source Create(String) Declaration public IAction Create(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IAction Implements IActionCollection.Create(String)"
  },
  "api_ai/ReactiveAI.Intelligence.Actions.ActionSequence.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actions.ActionSequence.html",
    "title": "Class ActionSequence | Reactive",
    "keywords": "Class ActionSequence Inheritance System.Object ActionBase ActionSequence Inherited Members ActionBase.NameId ActionBase.ElapsedTime ActionBase.Cooldown ActionBase.InCooldown ActionBase.ActionStatus ActionBase.Execute(IContext) ActionBase.EndInSuccess(IContext) ActionBase.EndInFailure(IContext) ActionBase.OnStop(IContext) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actions Assembly :ReactiveAI.dll Syntax public sealed class ActionSequence : ActionBase, IAction, IAIPrototype<IAction> Constructors | Improve this Doc View Source ActionSequence() Declaration public ActionSequence() | Improve this Doc View Source ActionSequence(String, IActionCollection) Declaration public ActionSequence(string nameId, IActionCollection collection) Parameters Type Name Description System.String nameId IActionCollection collection Properties | Improve this Doc View Source Actions Declaration public IList<IAction> Actions { get; } Property Value Type Description System.Collections.Generic.IList<T> < IAction > Methods | Improve this Doc View Source Clone() Declaration public override IAction Clone() Returns Type Description IAction Overrides ActionBase.Clone() | Improve this Doc View Source OnExecute(IContext) Declaration protected override void OnExecute(IContext context) Parameters Type Name Description IContext context Overrides ActionBase.OnExecute(IContext) | Improve this Doc View Source OnUpdate(IContext) Declaration protected override void OnUpdate(IContext context) Parameters Type Name Description IContext context Overrides ActionBase.OnUpdate(IContext)"
  },
  "api_ai/ReactiveAI.Intelligence.Actions.ActionStatus.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actions.ActionStatus.html",
    "title": "Enum ActionStatus | Reactive",
    "keywords": "Enum ActionStatus Namespace :ReactiveAI.Intelligence.Actions Assembly :ReactiveAI.dll Syntax public enum ActionStatus Fields Name Description Failure Idle Running Success"
  },
  "api_ai/ReactiveAI.Intelligence.Actions.AiTransition.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actions.AiTransition.html",
    "title": "Class AiTransition | Reactive",
    "keywords": "Class AiTransition Inheritance System.Object ActionBase AiTransition Inherited Members ActionBase.NameId ActionBase.ElapsedTime ActionBase.Cooldown ActionBase.InCooldown ActionBase.ActionStatus ActionBase.Execute(IContext) ActionBase.EndInSuccess(IContext) ActionBase.EndInFailure(IContext) ActionBase.OnExecute(IContext) ActionBase.OnUpdate(IContext) ActionBase.OnStop(IContext) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actions Assembly :ReactiveAI.dll Syntax public sealed class AiTransition : ActionBase, ITransition, IAction, IAIPrototype<IAction> Constructors | Improve this Doc View Source AiTransition(IUtilityAI) Declaration public AiTransition(IUtilityAI ai) Parameters Type Name Description IUtilityAI ai | Improve this Doc View Source AiTransition(String, String, IAICollection) Declaration public AiTransition(string nameId, string aiNameId, IAICollection collection) Parameters Type Name Description System.String nameId System.String aiNameId IAICollection collection Methods | Improve this Doc View Source Clone() Declaration public override IAction Clone() Returns Type Description IAction Overrides ActionBase.Clone() Implements IAIPrototype<IAction>.Clone() | Improve this Doc View Source Select(IContext) Declaration public IAction Select(IContext context) Parameters Type Name Description IContext context Returns Type Description IAction Implements ITransition.Select(IContext)"
  },
  "api_ai/ReactiveAI.Intelligence.Actions.BehaviourTransition.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actions.BehaviourTransition.html",
    "title": "Class BehaviourTransition | Reactive",
    "keywords": "Class BehaviourTransition Inheritance System.Object ActionBase BehaviourTransition Inherited Members ActionBase.NameId ActionBase.ElapsedTime ActionBase.Cooldown ActionBase.InCooldown ActionBase.ActionStatus ActionBase.Execute(IContext) ActionBase.EndInSuccess(IContext) ActionBase.EndInFailure(IContext) ActionBase.OnExecute(IContext) ActionBase.OnUpdate(IContext) ActionBase.OnStop(IContext) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Actions Assembly :ReactiveAI.dll Syntax public sealed class BehaviourTransition : ActionBase, ITransition, IAction, IAIPrototype<IAction> Constructors | Improve this Doc View Source BehaviourTransition(Behaviour) Declaration public BehaviourTransition(Behaviour other) Parameters Type Name Description Behaviour other | Improve this Doc View Source BehaviourTransition(String, String, IBehaviourCollection) Declaration public BehaviourTransition(string nameId, string behaviourId, IBehaviourCollection collection) Parameters Type Name Description System.String nameId System.String behaviourId IBehaviourCollection collection Properties | Improve this Doc View Source Behaviour Declaration public Behaviour Behaviour { get; set; } Property Value Type Description Behaviour Methods | Improve this Doc View Source Clone() Declaration public override IAction Clone() Returns Type Description IAction Overrides ActionBase.Clone() Implements IAIPrototype<IAction>.Clone() | Improve this Doc View Source Select(IContext) Declaration public IAction Select(IContext context) Parameters Type Name Description IContext context Returns Type Description IAction Implements ITransition.Select(IContext)"
  },
  "api_ai/ReactiveAI.Intelligence.Scheduling.Scheduler.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Scheduling.Scheduler.html",
    "title": "Class Scheduler | Reactive",
    "keywords": "Class Scheduler Inheritance System.Object Scheduler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Scheduling Assembly :ReactiveAI.dll Syntax public sealed class Scheduler : IScheduler Constructors | Improve this Doc View Source Scheduler() Declaration public Scheduler() Properties | Improve this Doc View Source ThinkStream The Think cycle. Declaration public CommandStream ThinkStream { get; } Property Value Type Description CommandStream Implements IScheduler.ThinkStream | Improve this Doc View Source UpdateStream The Update cycle. Declaration public CommandStream UpdateStream { get; } Property Value Type Description CommandStream The update queue. Implements IScheduler.UpdateStream Methods | Improve this Doc View Source Tick() Tick this instance. Declaration public void Tick() Implements IScheduler.Tick()"
  },
  "api_ai/ReactiveAI.Intelligence.Scheduling.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Scheduling.html",
    "title": "Namespace ReactiveAI.Intelligence.Scheduling | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Scheduling Classes CommandStream DeferredCommand Scheduler Delegates CommandAction"
  },
  "api_ai/ReactiveAI.Intelligence.Selectors.MaxUtilitySelector.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Selectors.MaxUtilitySelector.html",
    "title": "Class MaxUtilitySelector | Reactive",
    "keywords": "Class MaxUtilitySelector Inheritance System.Object MaxUtilitySelector Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Selectors Assembly :ReactiveAI.dll Syntax public sealed class MaxUtilitySelector : ISelector, IAIPrototype<ISelector> Methods | Improve this Doc View Source Clone() Declaration public ISelector Clone() Returns Type Description ISelector Implements IAIPrototype<ISelector>.Clone() | Improve this Doc View Source Select(ICollection<Utility>) Declaration public int Select(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Int32 Implements ISelector.Select(ICollection<Utility>)"
  },
  "api_ai/ReactiveAI.Intelligence.Selectors.RandomSelector.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Selectors.RandomSelector.html",
    "title": "Class RandomSelector | Reactive",
    "keywords": "Class RandomSelector Inheritance System.Object RandomSelector Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Selectors Assembly :ReactiveAI.dll Syntax public sealed class RandomSelector : ISelector, IAIPrototype<ISelector> Constructors | Improve this Doc View Source RandomSelector() Declaration public RandomSelector() | Improve this Doc View Source RandomSelector(Pcg) Declaration public RandomSelector(Pcg random) Parameters Type Name Description Pcg random Methods | Improve this Doc View Source Clone() Declaration public ISelector Clone() Returns Type Description ISelector Implements IAIPrototype<ISelector>.Clone() | Improve this Doc View Source Select(ICollection<Utility>) Declaration public int Select(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Int32 Implements ISelector.Select(ICollection<Utility>)"
  },
  "api_ai/ReactiveAI.Intelligence.Selectors.SequentialSelector.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Selectors.SequentialSelector.html",
    "title": "Class SequentialSelector | Reactive",
    "keywords": "Class SequentialSelector Inheritance System.Object SequentialSelector Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Selectors Assembly :ReactiveAI.dll Syntax public sealed class SequentialSelector : ISelector, IAIPrototype<ISelector> Methods | Improve this Doc View Source Clone() Declaration public ISelector Clone() Returns Type Description ISelector Implements IAIPrototype<ISelector>.Clone() | Improve this Doc View Source Select(ICollection<Utility>) Declaration public int Select(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Int32 Implements ISelector.Select(ICollection<Utility>)"
  },
  "api_ai/ReactiveAI.Intelligence.Selectors.WeightedRandomSelector.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Selectors.WeightedRandomSelector.html",
    "title": "Class WeightedRandomSelector | Reactive",
    "keywords": "Class WeightedRandomSelector Inheritance System.Object WeightedRandomSelector Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Selectors Assembly :ReactiveAI.dll Syntax public sealed class WeightedRandomSelector : ISelector, IAIPrototype<ISelector> Constructors | Improve this Doc View Source WeightedRandomSelector() Declaration public WeightedRandomSelector() | Improve this Doc View Source WeightedRandomSelector(Pcg) Declaration public WeightedRandomSelector(Pcg random) Parameters Type Name Description Pcg random | Improve this Doc View Source WeightedRandomSelector(Single) Declaration public WeightedRandomSelector(float proportion) Parameters Type Name Description System.Single proportion Properties | Improve this Doc View Source Proportion Declaration public float Proportion { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Clone() Declaration public ISelector Clone() Returns Type Description ISelector Implements IAIPrototype<ISelector>.Clone() | Improve this Doc View Source Select(ICollection<Utility>) Declaration public int Select(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Int32 Implements ISelector.Select(ICollection<Utility>)"
  },
  "api_ai/ReactiveAI.Intelligence.Selectors.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Selectors.html",
    "title": "Namespace ReactiveAI.Intelligence.Selectors | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Selectors Classes MaxUtilitySelector RandomSelector SequentialSelector WeightedRandomSelector"
  },
  "api_ai/ReactiveAI.Interval-1.html": {
    "href": "api_ai/ReactiveAI.Interval-1.html",
    "title": "Struct Interval<T> | Reactive",
    "keywords": "Struct Interval<T> Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public struct Interval<T> where T : struct, IComparable Type Parameters Name Description T Constructors | Improve this Doc View Source Interval(T, T, IntervalType, IntervalType) Declaration public Interval(T lowerbound, T upperbound, IntervalType lowerBoundType = IntervalType.Closed, IntervalType upperBoundType = IntervalType.Closed) Parameters Type Name Description T lowerbound T upperbound IntervalType lowerBoundType IntervalType upperBoundType Properties | Improve this Doc View Source LowerBound Declaration public T LowerBound { get; } Property Value Type Description T | Improve this Doc View Source LowerBoundType Declaration public IntervalType LowerBoundType { get; } Property Value Type Description IntervalType | Improve this Doc View Source UpperBound Declaration public T UpperBound { get; } Property Value Type Description T | Improve this Doc View Source UpperBoundType Declaration public IntervalType UpperBoundType { get; } Property Value Type Description IntervalType Methods | Improve this Doc View Source Contains(T) Declaration public bool Contains(T point) Parameters Type Name Description T point Returns Type Description System.Boolean | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api_ai/ReactiveAI.Interval.html": {
    "href": "api_ai/ReactiveAI.Interval.html",
    "title": "Class Interval | Reactive",
    "keywords": "Class Interval Inheritance System.Object Interval Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class Interval Methods | Improve this Doc View Source Range(Double, Double, IntervalType, IntervalType) Declaration public static Interval<double> Range(double lower, double upper, IntervalType lowerType = IntervalType.Closed, IntervalType upperType = IntervalType.Closed) Parameters Type Name Description System.Double lower System.Double upper IntervalType lowerType IntervalType upperType Returns Type Description Interval<T> < System.Double > | Improve this Doc View Source Range(Int32, Int32, IntervalType, IntervalType) Declaration public static Interval<int> Range(int lower, int upper, IntervalType lowerType = IntervalType.Closed, IntervalType upperType = IntervalType.Closed) Parameters Type Name Description System.Int32 lower System.Int32 upper IntervalType lowerType IntervalType upperType Returns Type Description Interval<T> < System.Int32 > | Improve this Doc View Source Range(Single, Single, IntervalType, IntervalType) Declaration public static Interval<float> Range(float lower, float upper, IntervalType lowerType = IntervalType.Closed, IntervalType upperType = IntervalType.Closed) Parameters Type Name Description System.Single lower System.Single upper IntervalType lowerType IntervalType upperType Returns Type Description Interval<T> < System.Single >"
  },
  "api_ai/ReactiveAI.IntervalExtensions.html": {
    "href": "api_ai/ReactiveAI.IntervalExtensions.html",
    "title": "Class IntervalExtensions | Reactive",
    "keywords": "Class IntervalExtensions Inheritance System.Object IntervalExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class IntervalExtensions Methods | Improve this Doc View Source Adjacent(Interval<Single>, Interval<Single>) Declaration public static bool Adjacent(this Interval<float> val, Interval<float> other) Parameters Type Name Description Interval<T> < System.Single > val Interval<T> < System.Single > other Returns Type Description System.Boolean | Improve this Doc View Source CompareTo(Interval<Single>, Interval<Single>) Declaration public static int CompareTo(this Interval<float> val, Interval<float> other) Parameters Type Name Description Interval<T> < System.Single > val Interval<T> < System.Single > other Returns Type Description System.Int32 | Improve this Doc View Source GreaterThan(Interval<Single>, Interval<Single>) Declaration public static bool GreaterThan(this Interval<float> val, Interval<float> other) Parameters Type Name Description Interval<T> < System.Single > val Interval<T> < System.Single > other Returns Type Description System.Boolean | Improve this Doc View Source LeftAdjacent(Interval<Single>, Interval<Single>) Declaration public static bool LeftAdjacent(this Interval<float> val, Interval<float> other) Parameters Type Name Description Interval<T> < System.Single > val Interval<T> < System.Single > other Returns Type Description System.Boolean | Improve this Doc View Source Length(Interval<Double>) Declaration public static double Length(this Interval<double> this) Parameters Type Name Description Interval<T> < System.Double > this Returns Type Description System.Double | Improve this Doc View Source Length(Interval<Int32>) Declaration public static int Length(this Interval<int> this) Parameters Type Name Description Interval<T> < System.Int32 > this Returns Type Description System.Int32 | Improve this Doc View Source Length(Interval<Single>) Declaration public static float Length(this Interval<float> this) Parameters Type Name Description Interval<T> < System.Single > this Returns Type Description System.Single | Improve this Doc View Source LessThan(Interval<Single>, Interval<Single>) Declaration public static bool LessThan(this Interval<float> val, Interval<float> other) Parameters Type Name Description Interval<T> < System.Single > val Interval<T> < System.Single > other Returns Type Description System.Boolean | Improve this Doc View Source Overlaps(Interval<Single>, Interval<Single>) Declaration public static bool Overlaps(this Interval<float> this, Interval<float> other) Parameters Type Name Description Interval<T> < System.Single > this Interval<T> < System.Single > other Returns Type Description System.Boolean | Improve this Doc View Source RightAdjacent(Interval<Single>, Interval<Single>) Declaration public static bool RightAdjacent(this Interval<float> val, Interval<float> other) Parameters Type Name Description Interval<T> < System.Single > val Interval<T> < System.Single > other Returns Type Description System.Boolean"
  },
  "api_ai/ReactiveAI.IntervalType.html": {
    "href": "api_ai/ReactiveAI.IntervalType.html",
    "title": "Enum IntervalType | Reactive",
    "keywords": "Enum IntervalType Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public enum IntervalType Fields Name Description Closed Open"
  },
  "api_ai/ReactiveAI.IOption.html": {
    "href": "api_ai/ReactiveAI.IOption.html",
    "title": "Interface IOption | Reactive",
    "keywords": "Interface IOption Inherited Members ICompositeConsideration.Measure ICompositeConsideration.AddConsideration(IConsideration) ICompositeConsideration.AddConsideration(String) IConsideration.NameID IConsideration.DefaultUtil IConsideration.Utility IConsideration.Weight IConsideration.IsInverted IConsideration.Consider(IContext) IAIPrototype<IConsideration>.Clone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IOption : ICompositeConsideration, IConsideration, IAIPrototype<IConsideration> Properties | Improve this Doc View Source Action Declaration IAction Action { get; } Property Value Type Description IAction Methods | Improve this Doc View Source SetAction(IAction) Declaration bool SetAction(IAction action) Parameters Type Name Description IAction action Returns Type Description System.Boolean | Improve this Doc View Source SetAction(String) Declaration bool SetAction(string actionId) Parameters Type Name Description System.String actionId Returns Type Description System.Boolean"
  },
  "api_ai/ReactiveAI.IOptionCollection.html": {
    "href": "api_ai/ReactiveAI.IOptionCollection.html",
    "title": "Interface IOptionCollection | Reactive",
    "keywords": "Interface IOptionCollection Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IOptionCollection Properties | Improve this Doc View Source Actions Declaration IActionCollection Actions { get; } Property Value Type Description IActionCollection | Improve this Doc View Source Considerations Declaration IConsiderationCollection Considerations { get; } Property Value Type Description IConsiderationCollection Methods | Improve this Doc View Source Add(IOption) Declaration bool Add(IOption option) Parameters Type Name Description IOption option Returns Type Description System.Boolean | Improve this Doc View Source Clear() Declaration void Clear() | Improve this Doc View Source ClearAll() Declaration void ClearAll() | Improve this Doc View Source Contains(String) Declaration bool Contains(string nameId) Parameters Type Name Description System.String nameId Returns Type Description System.Boolean | Improve this Doc View Source Create(String) Declaration IOption Create(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IOption"
  },
  "api_ai/ReactiveAI.IScheduler.html": {
    "href": "api_ai/ReactiveAI.IScheduler.html",
    "title": "Interface IScheduler | Reactive",
    "keywords": "Interface IScheduler Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IScheduler Properties | Improve this Doc View Source ThinkStream The Think cycle. Declaration CommandStream ThinkStream { get; } Property Value Type Description CommandStream | Improve this Doc View Source UpdateStream The Update cycle. Declaration CommandStream UpdateStream { get; } Property Value Type Description CommandStream Methods | Improve this Doc View Source Tick() Invoking this will execute one think and update cycle. Declaration void Tick()"
  },
  "api_ai/ReactiveAI.ISelector.html": {
    "href": "api_ai/ReactiveAI.ISelector.html",
    "title": "Interface ISelector | Reactive",
    "keywords": "Interface ISelector Inherited Members IAIPrototype<ISelector>.Clone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface ISelector : IAIPrototype<ISelector> Methods | Improve this Doc View Source Select(ICollection<Utility>) Declaration int Select(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Int32"
  },
  "api_ai/ReactiveAI.ITransition.html": {
    "href": "api_ai/ReactiveAI.ITransition.html",
    "title": "Interface ITransition | Reactive",
    "keywords": "Interface ITransition Inherited Members IAction.NameId IAction.ElapsedTime IAction.Cooldown IAction.InCooldown IAction.ActionStatus IAction.Execute(IContext) IAIPrototype<IAction>.Clone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface ITransition : IAction, IAIPrototype<IAction> Methods | Improve this Doc View Source Select(IContext) Declaration IAction Select(IContext context) Parameters Type Name Description IContext context Returns Type Description IAction"
  },
  "api_ai/ReactiveAI.IUtilityAI.html": {
    "href": "api_ai/ReactiveAI.IUtilityAI.html",
    "title": "Interface IUtilityAI | Reactive",
    "keywords": "Interface IUtilityAI Inherited Members IAIPrototype<IUtilityAI>.Clone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public interface IUtilityAI : IAIPrototype<IUtilityAI> Properties | Improve this Doc View Source NameId Declaration string NameId { get; } Property Value Type Description System.String | Improve this Doc View Source Selector Declaration ISelector Selector { get; set; } Property Value Type Description ISelector Methods | Improve this Doc View Source AddBehaviour(String) Declaration bool AddBehaviour(string behaviourId) Parameters Type Name Description System.String behaviourId Returns Type Description System.Boolean | Improve this Doc View Source RemoveBehaviour(String) Declaration bool RemoveBehaviour(string behaviourId) Parameters Type Name Description System.String behaviourId Returns Type Description System.Boolean | Improve this Doc View Source Select(IContext) Declaration IAction Select(IContext context) Parameters Type Name Description IContext context Returns Type Description IAction"
  },
  "api_ai/ReactiveAI.MinEqualMaxException.html": {
    "href": "api_ai/ReactiveAI.MinEqualMaxException.html",
    "title": "Class MinEqualMaxException | Reactive",
    "keywords": "Class MinEqualMaxException Minimum equal max exception. Inheritance System.Object System.Exception MinEqualMaxException Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public class MinEqualMaxException : Exception, ISerializable, _Exception"
  },
  "api_ai/ReactiveAI.MinGreaterThanMaxException.html": {
    "href": "api_ai/ReactiveAI.MinGreaterThanMaxException.html",
    "title": "Class MinGreaterThanMaxException | Reactive",
    "keywords": "Class MinGreaterThanMaxException Minimum greater than max exception. Inheritance System.Object System.Exception MinGreaterThanMaxException Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public class MinGreaterThanMaxException : Exception, ISerializable, _Exception"
  },
  "api_ai/ReactiveAI.Pcg.html": {
    "href": "api_ai/ReactiveAI.Pcg.html",
    "title": "Class Pcg | Reactive",
    "keywords": "Class Pcg Inheritance System.Object Pcg Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public class Pcg Constructors | Improve this Doc View Source Pcg() Declaration public Pcg() | Improve this Doc View Source Pcg(Int32) Declaration public Pcg(int seed) Parameters Type Name Description System.Int32 seed | Improve this Doc View Source Pcg(Int32, Int32) Declaration public Pcg(int seed, int sequence) Parameters Type Name Description System.Int32 seed System.Int32 sequence | Improve this Doc View Source Pcg(UInt64, UInt64) Declaration public Pcg(ulong seed, ulong sequence = 721347520444481703UL) Parameters Type Name Description System.UInt64 seed System.UInt64 sequence Properties | Improve this Doc View Source Default Default instance. Declaration public static Pcg Default { get; } Property Value Type Description Pcg Methods | Improve this Doc View Source CurrentStream() Declaration public ulong CurrentStream() Returns Type Description System.UInt64 | Improve this Doc View Source Next() Declaration public virtual int Next() Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32) Declaration public virtual int Next(int maxExclusive) Parameters Type Name Description System.Int32 maxExclusive Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32, Int32) Declaration public virtual int Next(int minInclusive, int maxExclusive) Parameters Type Name Description System.Int32 minInclusive System.Int32 maxExclusive Returns Type Description System.Int32 | Improve this Doc View Source NextBool() Declaration public bool NextBool() Returns Type Description System.Boolean | Improve this Doc View Source NextBools(Int32) Declaration public bool[] NextBools(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Boolean [] | Improve this Doc View Source NextByte() Declaration public byte NextByte() Returns Type Description System.Byte | Improve this Doc View Source NextBytes(Int32) Declaration public byte[] NextBytes(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Byte [] | Improve this Doc View Source NextDouble() Declaration public virtual double NextDouble() Returns Type Description System.Double | Improve this Doc View Source NextDouble(Double) Declaration public virtual double NextDouble(double maxInclusive) Parameters Type Name Description System.Double maxInclusive Returns Type Description System.Double | Improve this Doc View Source NextDouble(Double, Double) Declaration public virtual double NextDouble(double minInclusive, double maxInclusive) Parameters Type Name Description System.Double minInclusive System.Double maxInclusive Returns Type Description System.Double | Improve this Doc View Source NextDoubles(Int32) Declaration public double[] NextDoubles(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Double [] | Improve this Doc View Source NextDoubles(Int32, Double) Declaration public double[] NextDoubles(int count, double maxInclusive) Parameters Type Name Description System.Int32 count System.Double maxInclusive Returns Type Description System.Double [] | Improve this Doc View Source NextDoubles(Int32, Double, Double) Declaration public double[] NextDoubles(int count, double minInclusive, double maxInclusive) Parameters Type Name Description System.Int32 count System.Double minInclusive System.Double maxInclusive Returns Type Description System.Double [] | Improve this Doc View Source NextFloat() Declaration public virtual float NextFloat() Returns Type Description System.Single | Improve this Doc View Source NextFloat(Single) Declaration public virtual float NextFloat(float maxInclusive) Parameters Type Name Description System.Single maxInclusive Returns Type Description System.Single | Improve this Doc View Source NextFloat(Single, Single) Declaration public virtual float NextFloat(float minInclusive, float maxInclusive) Parameters Type Name Description System.Single minInclusive System.Single maxInclusive Returns Type Description System.Single | Improve this Doc View Source NextFloats(Int32) Declaration public float[] NextFloats(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Single [] | Improve this Doc View Source NextFloats(Int32, Single) Declaration public float[] NextFloats(int count, float maxInclusive) Parameters Type Name Description System.Int32 count System.Single maxInclusive Returns Type Description System.Single [] | Improve this Doc View Source NextFloats(Int32, Single, Single) Declaration public float[] NextFloats(int count, float minInclusive, float maxInclusive) Parameters Type Name Description System.Int32 count System.Single minInclusive System.Single maxInclusive Returns Type Description System.Single [] | Improve this Doc View Source NextInts(Int32) Declaration public int[] NextInts(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Int32 [] | Improve this Doc View Source NextInts(Int32, Int32) Declaration public int[] NextInts(int count, int maxExclusive) Parameters Type Name Description System.Int32 count System.Int32 maxExclusive Returns Type Description System.Int32 [] | Improve this Doc View Source NextInts(Int32, Int32, Int32) Declaration public int[] NextInts(int count, int minInclusive, int maxExclusive) Parameters Type Name Description System.Int32 count System.Int32 minInclusive System.Int32 maxExclusive Returns Type Description System.Int32 [] | Improve this Doc View Source NextUInt() Declaration public uint NextUInt() Returns Type Description System.UInt32 | Improve this Doc View Source NextUInt(UInt32) Declaration public uint NextUInt(uint maxExclusive) Parameters Type Name Description System.UInt32 maxExclusive Returns Type Description System.UInt32 | Improve this Doc View Source NextUInt(UInt32, UInt32) Declaration public uint NextUInt(uint minInclusive, uint maxExclusive) Parameters Type Name Description System.UInt32 minInclusive System.UInt32 maxExclusive Returns Type Description System.UInt32 | Improve this Doc View Source NextUInts(Int32) Declaration public uint[] NextUInts(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.UInt32 [] | Improve this Doc View Source NextUInts(Int32, UInt32) Declaration public uint[] NextUInts(int count, uint maxExclusive) Parameters Type Name Description System.Int32 count System.UInt32 maxExclusive Returns Type Description System.UInt32 [] | Improve this Doc View Source NextUInts(Int32, UInt32, UInt32) Declaration public uint[] NextUInts(int count, uint minInclusive, uint maxExclusive) Parameters Type Name Description System.Int32 count System.UInt32 minInclusive System.UInt32 maxExclusive Returns Type Description System.UInt32 [] | Improve this Doc View Source PeriodPow2() Declaration public int PeriodPow2() Returns Type Description System.Int32 | Improve this Doc View Source SetStream(Int32) Declaration public void SetStream(int sequence) Parameters Type Name Description System.Int32 sequence | Improve this Doc View Source SetStream(UInt64) Declaration public void SetStream(ulong sequence) Parameters Type Name Description System.UInt64 sequence"
  },
  "api_ai/ReactiveAI.PcgExtended.html": {
    "href": "api_ai/ReactiveAI.PcgExtended.html",
    "title": "Class PcgExtended | Reactive",
    "keywords": "Class PcgExtended Inheritance System.Object PcgExtended Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public class PcgExtended Constructors | Improve this Doc View Source PcgExtended() Declaration public PcgExtended() | Improve this Doc View Source PcgExtended(Int32) Declaration public PcgExtended(int seed) Parameters Type Name Description System.Int32 seed | Improve this Doc View Source PcgExtended(Int32, Int32) Declaration public PcgExtended(int seed, int sequence) Parameters Type Name Description System.Int32 seed System.Int32 sequence | Improve this Doc View Source PcgExtended(Int32, Int32, Int32) Declaration public PcgExtended(int seed, int tablePow2, int advancePow2) Parameters Type Name Description System.Int32 seed System.Int32 tablePow2 System.Int32 advancePow2 | Improve this Doc View Source PcgExtended(Int32, Int32, Int32, Int32) Declaration public PcgExtended(int seed, int sequence, int tablePow2, int advancePow2) Parameters Type Name Description System.Int32 seed System.Int32 sequence System.Int32 tablePow2 System.Int32 advancePow2 | Improve this Doc View Source PcgExtended(UInt64) Declaration public PcgExtended(ulong seed) Parameters Type Name Description System.UInt64 seed | Improve this Doc View Source PcgExtended(UInt64, Int32, Int32) Declaration public PcgExtended(ulong seed, int tablePow2, int advancePow2) Parameters Type Name Description System.UInt64 seed System.Int32 tablePow2 System.Int32 advancePow2 | Improve this Doc View Source PcgExtended(UInt64, UInt64) Declaration public PcgExtended(ulong seed, ulong sequence) Parameters Type Name Description System.UInt64 seed System.UInt64 sequence | Improve this Doc View Source PcgExtended(UInt64, UInt64, Int32, Int32) Declaration public PcgExtended(ulong seed, ulong sequence, int tablePow2, int advancePow2) Parameters Type Name Description System.UInt64 seed System.UInt64 sequence System.Int32 tablePow2 System.Int32 advancePow2 Properties | Improve this Doc View Source Default Default instance. Declaration public static PcgExtended Default { get; } Property Value Type Description PcgExtended Methods | Improve this Doc View Source CurrentStream() Declaration public ulong CurrentStream() Returns Type Description System.UInt64 | Improve this Doc View Source Equidistribution() Declaration public int Equidistribution() Returns Type Description System.Int32 | Improve this Doc View Source EquidistributionPow2() Declaration public int EquidistributionPow2() Returns Type Description System.Int32 | Improve this Doc View Source Next() Declaration public int Next() Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32) Declaration public int Next(int maxExclusive) Parameters Type Name Description System.Int32 maxExclusive Returns Type Description System.Int32 | Improve this Doc View Source Next(Int32, Int32) Declaration public int Next(int minInclusive, int maxExclusive) Parameters Type Name Description System.Int32 minInclusive System.Int32 maxExclusive Returns Type Description System.Int32 | Improve this Doc View Source NextBool() Declaration public bool NextBool() Returns Type Description System.Boolean | Improve this Doc View Source NextBools(Int32) Declaration public bool[] NextBools(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Boolean [] | Improve this Doc View Source NextByte() Declaration public byte NextByte() Returns Type Description System.Byte | Improve this Doc View Source NextBytes(Int32) Declaration public byte[] NextBytes(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Byte [] | Improve this Doc View Source NextDouble() Declaration public double NextDouble() Returns Type Description System.Double | Improve this Doc View Source NextDouble(Double) Declaration public double NextDouble(double maxInclusive) Parameters Type Name Description System.Double maxInclusive Returns Type Description System.Double | Improve this Doc View Source NextDouble(Double, Double) Declaration public double NextDouble(double minInclusive, double maxInclusive) Parameters Type Name Description System.Double minInclusive System.Double maxInclusive Returns Type Description System.Double | Improve this Doc View Source NextDoubles(Int32) Declaration public double[] NextDoubles(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Double [] | Improve this Doc View Source NextDoubles(Int32, Double) Declaration public double[] NextDoubles(int count, double maxInclusive) Parameters Type Name Description System.Int32 count System.Double maxInclusive Returns Type Description System.Double [] | Improve this Doc View Source NextDoubles(Int32, Double, Double) Declaration public double[] NextDoubles(int count, double minInclusive, double maxInclusive) Parameters Type Name Description System.Int32 count System.Double minInclusive System.Double maxInclusive Returns Type Description System.Double [] | Improve this Doc View Source NextFloat() Declaration public float NextFloat() Returns Type Description System.Single | Improve this Doc View Source NextFloat(Single) Declaration public float NextFloat(float maxInclusive) Parameters Type Name Description System.Single maxInclusive Returns Type Description System.Single | Improve this Doc View Source NextFloat(Single, Single) Declaration public float NextFloat(float minInclusive, float maxInclusive) Parameters Type Name Description System.Single minInclusive System.Single maxInclusive Returns Type Description System.Single | Improve this Doc View Source NextFloats(Int32) Declaration public float[] NextFloats(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Single [] | Improve this Doc View Source NextFloats(Int32, Single) Declaration public float[] NextFloats(int count, float maxInclusive) Parameters Type Name Description System.Int32 count System.Single maxInclusive Returns Type Description System.Single [] | Improve this Doc View Source NextFloats(Int32, Single, Single) Declaration public float[] NextFloats(int count, float minInclusive, float maxInclusive) Parameters Type Name Description System.Int32 count System.Single minInclusive System.Single maxInclusive Returns Type Description System.Single [] | Improve this Doc View Source NextInts(Int32) Declaration public int[] NextInts(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.Int32 [] | Improve this Doc View Source NextInts(Int32, Int32) Declaration public int[] NextInts(int count, int maxExclusive) Parameters Type Name Description System.Int32 count System.Int32 maxExclusive Returns Type Description System.Int32 [] | Improve this Doc View Source NextInts(Int32, Int32, Int32) Declaration public int[] NextInts(int count, int minInclusive, int maxExclusive) Parameters Type Name Description System.Int32 count System.Int32 minInclusive System.Int32 maxExclusive Returns Type Description System.Int32 [] | Improve this Doc View Source NextUInt() Declaration public uint NextUInt() Returns Type Description System.UInt32 | Improve this Doc View Source NextUInt(UInt32) Declaration public uint NextUInt(uint maxExclusive) Parameters Type Name Description System.UInt32 maxExclusive Returns Type Description System.UInt32 | Improve this Doc View Source NextUInt(UInt32, UInt32) Declaration public uint NextUInt(uint minInclusive, uint maxExclusive) Parameters Type Name Description System.UInt32 minInclusive System.UInt32 maxExclusive Returns Type Description System.UInt32 | Improve this Doc View Source NextUInts(Int32) Declaration public uint[] NextUInts(int count) Parameters Type Name Description System.Int32 count Returns Type Description System.UInt32 [] | Improve this Doc View Source NextUInts(Int32, UInt32) Declaration public uint[] NextUInts(int count, uint maxExclusive) Parameters Type Name Description System.Int32 count System.UInt32 maxExclusive Returns Type Description System.UInt32 [] | Improve this Doc View Source NextUInts(Int32, UInt32, UInt32) Declaration public uint[] NextUInts(int count, uint minInclusive, uint maxExclusive) Parameters Type Name Description System.Int32 count System.UInt32 minInclusive System.UInt32 maxExclusive Returns Type Description System.UInt32 [] | Improve this Doc View Source PeriodPow2() Declaration public int PeriodPow2() Returns Type Description System.Int32 | Improve this Doc View Source SetStream(Int32) Declaration public void SetStream(int sequence) Parameters Type Name Description System.Int32 sequence | Improve this Doc View Source SetStream(UInt64) Declaration public void SetStream(ulong sequence) Parameters Type Name Description System.UInt64 sequence"
  },
  "api_ai/ReactiveAI.PcgSeed.html": {
    "href": "api_ai/ReactiveAI.PcgSeed.html",
    "title": "Class PcgSeed | Reactive",
    "keywords": "Class PcgSeed Inheritance System.Object PcgSeed Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class PcgSeed Methods | Improve this Doc View Source GuidBasedSeed() Provides a seed based on Time and unique GUIDs. Declaration public static ulong GuidBasedSeed() Returns Type Description System.UInt64 | Improve this Doc View Source TimeBasedSeed() Provides a Time-dependent seed value, matching the default behavior of System.Random. Declaration public static ulong TimeBasedSeed() Returns Type Description System.UInt64"
  },
  "api_ai/ReactiveAI.Pointf.html": {
    "href": "api_ai/ReactiveAI.Pointf.html",
    "title": "Struct Pointf | Reactive",
    "keywords": "Struct Pointf Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public struct Pointf : IEquatable<Pointf> Constructors | Improve this Doc View Source Pointf(Single, Single) Declaration public Pointf(float x, float y) Parameters Type Name Description System.Single x System.Single y Properties | Improve this Doc View Source X Declaration public float X { get; } Property Value Type Description System.Single | Improve this Doc View Source Y Declaration public float Y { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source Equals(Pointf) Declaration public bool Equals(Pointf other) Parameters Type Name Description Pointf other Returns Type Description System.Boolean Implements System.IEquatable<ReactiveAI.Pointf>.Equals(ReactiveAI.Pointf) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api_ai/ReactiveAI.ReaderWriterLockSlimExtensions.html": {
    "href": "api_ai/ReactiveAI.ReaderWriterLockSlimExtensions.html",
    "title": "Class ReaderWriterLockSlimExtensions | Reactive",
    "keywords": "Class ReaderWriterLockSlimExtensions Inheritance System.Object ReaderWriterLockSlimExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class ReaderWriterLockSlimExtensions Methods | Improve this Doc View Source Read(ReaderWriterLockSlim) Declaration public static IDisposable Read(this ReaderWriterLockSlim this) Parameters Type Name Description System.Threading.ReaderWriterLockSlim this Returns Type Description System.IDisposable | Improve this Doc View Source Write(ReaderWriterLockSlim) Declaration public static IDisposable Write(this ReaderWriterLockSlim this) Parameters Type Name Description System.Threading.ReaderWriterLockSlim this Returns Type Description System.IDisposable"
  },
  "api_ai/ReactiveAI.Speech.SpeechGrammar.html": {
    "href": "api_ai/ReactiveAI.Speech.SpeechGrammar.html",
    "title": "Class SpeechGrammar | Reactive",
    "keywords": "Class SpeechGrammar Inheritance System.Object SpeechGrammar Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Speech Assembly :ReactiveAI.dll Syntax public class SpeechGrammar Fields | Improve this Doc View Source commands Declaration public static List<string> commands Field Value Type Description System.Collections.Generic.List<T> < System.String > | Improve this Doc View Source grammar Declaration public static Grammar grammar Field Value Type Description System.Speech.Recognition.Grammar Methods | Improve this Doc View Source checkCommand(String) Declaration public static bool checkCommand(string text) Parameters Type Name Description System.String text Returns Type Description System.Boolean | Improve this Doc View Source LoadCommands() Declaration public static void LoadCommands() | Improve this Doc View Source LoadGrammar() Declaration public static Grammar LoadGrammar() Returns Type Description System.Speech.Recognition.Grammar"
  },
  "api_ai/ReactiveAI.Speech.SpeechRecognition.html": {
    "href": "api_ai/ReactiveAI.Speech.SpeechRecognition.html",
    "title": "Class SpeechRecognition | Reactive",
    "keywords": "Class SpeechRecognition Inheritance System.Object SpeechRecognition Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Speech Assembly :ReactiveAI.dll Syntax public class SpeechRecognition Fields | Improve this Doc View Source botReturnMessage Declaration public static string botReturnMessage Field Value Type Description System.String | Improve this Doc View Source lastRecognizedText Declaration public static string lastRecognizedText Field Value Type Description System.String"
  },
  "api_ai/ReactiveAI.Speech.SpeechTalk.html": {
    "href": "api_ai/ReactiveAI.Speech.SpeechTalk.html",
    "title": "Class SpeechTalk | Reactive",
    "keywords": "Class SpeechTalk Inheritance System.Object SpeechTalk Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Speech Assembly :ReactiveAI.dll Syntax public class SpeechTalk Methods | Improve this Doc View Source Talk(String) Declaration public static void Talk(string text) Parameters Type Name Description System.String text"
  },
  "api_ai/ReactiveAI.Speech.html": {
    "href": "api_ai/ReactiveAI.Speech.html",
    "title": "Namespace ReactiveAI.Speech | Reactive",
    "keywords": "Namespace ReactiveAI.Speech Classes SpeechGrammar SpeechRecognition SpeechTalk"
  },
  "api_ai/ReactiveAI.UtilityExtensions.html": {
    "href": "api_ai/ReactiveAI.UtilityExtensions.html",
    "title": "Class UtilityExtensions | Reactive",
    "keywords": "Class UtilityExtensions Inheritance System.Object UtilityExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class UtilityExtensions Methods | Improve this Doc View Source Chebyshev(ICollection<Utility>) Chebyshev norm for the given utility list. Declaration public static float Chebyshev(this ICollection<Utility> ulist) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > ulist Utility list. Returns Type Description System.Single | Improve this Doc View Source MultiplyCombined(ICollection<Utility>) Declaration public static float MultiplyCombined(this ICollection<Utility> ulist) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > ulist Returns Type Description System.Single | Improve this Doc View Source MultiplyValues(ICollection<Utility>) Declaration public static float MultiplyValues(this ICollection<Utility> ulist) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > ulist Returns Type Description System.Single | Improve this Doc View Source MultiplyWeights(ICollection<Utility>) Declaration public static float MultiplyWeights(this ICollection<Utility> ulist) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > ulist Returns Type Description System.Single | Improve this Doc View Source SumValues(ICollection<Utility>) Declaration public static float SumValues(this ICollection<Utility> ulist) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > ulist Returns Type Description System.Single | Improve this Doc View Source SumWeights(ICollection<Utility>) Declaration public static float SumWeights(this ICollection<Utility> ulist) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > ulist Returns Type Description System.Single | Improve this Doc View Source WeightedMetrics(ICollection<Utility>, Single) Returns the p-weighted metrics norm for the given Utility list. Declaration public static float WeightedMetrics(this ICollection<Utility> ulist, float p = 2F) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > ulist Utility list. System.Single p The norm Returns Type Description System.Single The metrics."
  },
  "api_ai/ReactiveAI.Utils.Processors.LanguageProcessor.html": {
    "href": "api_ai/ReactiveAI.Utils.Processors.LanguageProcessor.html",
    "title": "Class LanguageProcessor | Reactive",
    "keywords": "Class LanguageProcessor A natural language processor Inheritance System.Object LanguageProcessor Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Utils.Processors Assembly :ReactiveAI.dll Syntax public class LanguageProcessor Fields | Improve this Doc View Source keywords Declaration public static Dictionary<string, List<string>> keywords Field Value Type Description System.Collections.Generic.Dictionary<TKey, TValue> < System.String , System.Collections.Generic.List<T> < System.String >> Methods | Improve this Doc View Source processString(String, String, String) Processes a string to check wether if it contains a keyword Declaration public string processString(string keyID, string toProcess, string toFind = null) Parameters Type Name Description System.String keyID System.String toProcess System.String toFind Returns Type Description System.String Returns the keyword | Improve this Doc View Source RegisterKeywords(String, List<String>) Registers a list of keywords within the processor Declaration public static void RegisterKeywords(string id, List<string> key) Parameters Type Name Description System.String id System.Collections.Generic.List<T> < System.String > key"
  },
  "api_ai/ReactiveAI.Utils.Processors.html": {
    "href": "api_ai/ReactiveAI.Utils.Processors.html",
    "title": "Namespace ReactiveAI.Utils.Processors | Reactive",
    "keywords": "Namespace ReactiveAI.Utils.Processors Classes LanguageProcessor A natural language processor"
  },
  "api_ai/ReactiveAI.ValueType.html": {
    "href": "api_ai/ReactiveAI.ValueType.html",
    "title": "Class ValueType | Reactive",
    "keywords": "Class ValueType Inheritance System.Object ValueType Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI Assembly :ReactiveAI.dll Syntax public static class ValueType Methods | Improve this Doc View Source AboveInterval(Single, Interval<Single>) If the value is larger than the upper bound of the interval this will return true and false otherwise. WARNING: Never use this extension like this: 1.0.AboveInterval(interval), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static bool AboveInterval(this float this, Interval<float> interval) Parameters Type Name Description System.Single this Interval<T> < System.Single > interval Returns Type Description System.Boolean | Improve this Doc View Source BelowInterval(Single, Interval<Single>) If the value is smaller than the lower bound of the interval this will return true and false otherwise. WARNING: Never use this extension like this: 1.0.BelowInterval(interval), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static bool BelowInterval(this float this, Interval<float> interval) Parameters Type Name Description System.Single this Interval<T> < System.Single > interval Returns Type Description System.Boolean | Improve this Doc View Source Ceil(Double) Returns the smallest integer greater to or equal to val. WARNING: Never use this extension like this: 1.0.Ceil(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static double Ceil(this double this) Parameters Type Name Description System.Double this Returns Type Description System.Double | Improve this Doc View Source Ceil(Single) Returns the smallest integer greater to or equal to val. WARNING: Never use this extension like this: 1.0f.Ceil(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static float Ceil(this float this) Parameters Type Name Description System.Single this Returns Type Description System.Single | Improve this Doc View Source CeilToInt(Double) Returns the smallest integer greater to or equal to val. WARNING: Never use this extension like this: 1.0.CeilToInt(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static int CeilToInt(this double this) Parameters Type Name Description System.Double this Returns Type Description System.Int32 | Improve this Doc View Source CeilToInt(Single) Returns the smallest integer greater to or equal to val. WARNING: Never use this extension like this: 1.0f.CeilToInt(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static int CeilToInt(this float this) Parameters Type Name Description System.Single this Returns Type Description System.Int32 | Improve this Doc View Source Clamp(Double, Double, Double) Clamp the given value in the interval [min, max]. WARNING: Never use this extension like this: 1.0.Clamp(min, max), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static double Clamp(this double this, double min, double max) Parameters Type Name Description System.Double this System.Double min System.Double max Returns Type Description System.Double | Improve this Doc View Source Clamp(Single, Single, Single) Clamp the given value in the interval [min, max]. WARNING: Never use this extension like this: 1.0f.Clamp(min, max), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static float Clamp(this float this, float min, float max) Parameters Type Name Description System.Single this System.Single min System.Single max Returns Type Description System.Single | Improve this Doc View Source Clamp<T>(T, T, T) Clamp the given value, min and max. WARNING: Never use this extension like this: 1.0.Clamp{T}(min, max), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static T Clamp<T>(this T this, T min, T max)where T : IComparable<T> Parameters Type Name Description T this T min T max Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Clamp01(Double) Clamp01 the given value. WARNING: Never use this extension like this: 1.0.Clamp01(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static double Clamp01(this double this) Parameters Type Name Description System.Double this Returns Type Description System.Double | Improve this Doc View Source Clamp01(Single) Clamp the given value in the interval [0, 1]. WARNING: Never use this extension like this: 1.0f.Clamp01(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static float Clamp01(this float this) Parameters Type Name Description System.Single this Returns Type Description System.Single | Improve this Doc View Source ClampToLowerBound(Double, Double) If val is higher than the lower bound it is returned unchanged, otherwise the lower bound is returned. WARNING: Never use this extension like this: 1.0.ClampToLowerBound(lowerBound), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static double ClampToLowerBound(this double this, double lowerBound) Parameters Type Name Description System.Double this System.Double lowerBound Returns Type Description System.Double | Improve this Doc View Source ClampToLowerBound(Int32, Int32) If val is higher than the lower bound it is returned unchanged, otherwise the lower bound is returned. WARNING: Never use this extension like this: 1.ClampToLowerBound(lowerBound), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static int ClampToLowerBound(this int this, int lowerBound) Parameters Type Name Description System.Int32 this System.Int32 lowerBound Returns Type Description System.Int32 | Improve this Doc View Source ClampToLowerBound(Single, Single) If val is higher than the lower bound it is returned unchanged, otherwise the lower bound is returned. WARNING: Never use this extension like this: 1.0f.ClampToLowerBound(lowerBound), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static float ClampToLowerBound(this float this, float lowerBound) Parameters Type Name Description System.Single this System.Single lowerBound Returns Type Description System.Single | Improve this Doc View Source ClampToNegative(Double) If the value is non-positive it is returned as is, otherwise a zero is returned. A more apt signature would be ClampToNonPositive, but this is a bit too verbose and potentially confusing for some. WARNING: Never use this extension like this: 1.0.ClampToNegative(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. For example this, -1.0.ClampToNegative() is interpreted by the extension method like this 1.0.ClampToNegative()! You could use parentheses but to be on the safe side avoid this usage. Declaration public static double ClampToNegative(this double this) Parameters Type Name Description System.Double this Returns Type Description System.Double | Improve this Doc View Source ClampToNegative(Int32) If the value is non-positive it is returned as is, otherwise a zero is returned. A more apt signature would be ClampToNonPositive, but this is a bit too verbose and potentially confusing for some. WARNING: Never use this extension like this: 1.ClampToNegative(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static int ClampToNegative(this int this) Parameters Type Name Description System.Int32 this Returns Type Description System.Int32 | Improve this Doc View Source ClampToNegative(Single) If the value is non-positive it is returned as is, otherwise a zero is returned. A more apt signature would be ClampToNonPositive, but this is a bit too verbose and potentially confusing for some. WARNING: Never use this extension like this: 1.0f.ClampToNegative(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static float ClampToNegative(this float this) Parameters Type Name Description System.Single this Returns Type Description System.Single | Improve this Doc View Source ClampToPositive(Double) If the value is non-negative it is returned as is. If it is negative its clamped to 0.0. WARNING: Never use this extension like this: 1.0.ClampToPositive(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static double ClampToPositive(this double this) Parameters Type Name Description System.Double this Returns Type Description System.Double | Improve this Doc View Source ClampToPositive(Int32) If the value is non-negative it is returned as is. If it is negative its clamped to 0. WARNING: Never use this extension like this: 1.ClampToPositive(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static int ClampToPositive(this int this) Parameters Type Name Description System.Int32 this Returns Type Description System.Int32 | Improve this Doc View Source ClampToPositive(Single) If the value is non-negative it is returned as is. If it is negative its clamped to 0.0f. WARNING: Never use this extension like this: 1.0f.ClampToPositive(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static float ClampToPositive(this float this) Parameters Type Name Description System.Single this Returns Type Description System.Single | Improve this Doc View Source ClampToUpperBound(Double, Double) If val is lower than the upper bound it is returned unchanged, otherwise the upper bound is returned. WARNING: Never use this extension like this: 1.0.ClampToUpperBound(upperBound), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static double ClampToUpperBound(this double val, double upperBound) Parameters Type Name Description System.Double val System.Double upperBound Returns Type Description System.Double | Improve this Doc View Source ClampToUpperBound(Int32, Int32) If val is lower than the upper bound it is returned unchanged, otherwise the upper bound is returned. WARNING: Never use this extension like this: 1.ClampToUpperBound(upperBound), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static int ClampToUpperBound(this int this, int upperBound) Parameters Type Name Description System.Int32 this System.Int32 upperBound Returns Type Description System.Int32 | Improve this Doc View Source ClampToUpperBound(Single, Single) If val is lower than the upper bound it is returned unchanged, otherwise the upper bound is returned. WARNING: Never use this extension like this: 1.0f.ClampToUpperBound(upperBound), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static float ClampToUpperBound(this float this, float upperBound) Parameters Type Name Description System.Single this System.Single upperBound Returns Type Description System.Single | Improve this Doc View Source CompareToInterval(Single, Interval<Single>) If the value is below the interval, this will return -1, if it is above the interval this will return 1 and 0 otherwise. Note that the interval has a closed interval semantics, i.e. interval = [a,b]. WARNING: Never use this extension like this: 1.0.CompareTo(interval), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static int CompareToInterval(this float this, Interval<float> interval) Parameters Type Name Description System.Single this Interval<T> < System.Single > interval Returns Type Description System.Int32 | Improve this Doc View Source Floor(Double) Returns the largest integer smaller to or equal to val. WARNING: Never use this extension like this: 1.0.Floor(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static double Floor(this double this) Parameters Type Name Description System.Double this Returns Type Description System.Double | Improve this Doc View Source Floor(Single) Returns the largest integer smaller to or equal to val. WARNING: Never use this extension like this: 1.0f.Floor(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static float Floor(this float this) Parameters Type Name Description System.Single this Returns Type Description System.Single | Improve this Doc View Source FloorToInt(Double) Returns the largest integer smaller to or equal to val. WARNING: Never use this extension like this: 1.0.FloorToInt(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static int FloorToInt(this double this) Parameters Type Name Description System.Double this Returns Type Description System.Int32 | Improve this Doc View Source FloorToInt(Single) Returns the largest integer smaller to or equal to val. WARNING: Never use this extension like this: 1.0f.FloorToInt(), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static int FloorToInt(this float this) Parameters Type Name Description System.Single this Returns Type Description System.Int32 | Improve this Doc View Source InInterval(Single, Interval<Single>) Returns true if val is within the given interval. Note that unqualified intervals are assumed to be closed(!) intervals, i.e. [a,b]. WARNING: Never use this extension like this: 1.0.InInterval(interval), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static bool InInterval(this float this, Interval<float> interval) Parameters Type Name Description System.Single this Interval<T> < System.Single > interval Returns Type Description System.Boolean | Improve this Doc View Source Normalize01(Double, Double, Double) Rescales the given value to the interval [0,1]. If the value is smaller than min, it will be clamped to min and if the value is larger than max it will be clamped to max. WARNING: Never use this extension like this: 1.0.Normalize(min, max), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static double Normalize01(this double this, double min, double max) Parameters Type Name Description System.Double this System.Double min System.Double max Returns Type Description System.Double | Improve this Doc View Source Normalize01(Single, Single, Single) Rescales the given value to the interval [0,1]. If the value is smaller than min, it will be clamped to min and if the value is larger than max it will be clamped to max. WARNING: Never use this extension like this: 1.0f.Normalize01(min, max), since if the value is negative the sign (if there is one) will not be passed to the extension method leading to unexpected results. Declaration public static float Normalize01(this float this, float min, float max) Parameters Type Name Description System.Single this System.Single min System.Single max Returns Type Description System.Single"
  },
  "api_ai/ReactiveAI.html": {
    "href": "api_ai/ReactiveAI.html",
    "title": "Namespace ReactiveAI | Reactive",
    "keywords": "Namespace ReactiveAI Classes AIMath AITime ArrayExtensions DictionaryExtensions EnumerableExtensions Interval IntervalExtensions MinEqualMaxException Minimum equal max exception. MinGreaterThanMaxException Minimum greater than max exception. Pcg PcgExtended PcgSeed ReaderWriterLockSlimExtensions UtilityExtensions ValueType Structs Interval<T> Pointf Interfaces IAction IActionCollection IAICollection IAIPrototype<T> IBehaviour IBehaviourCollection ICompositeConsideration IConsideration IConsiderationCollection IContext IContextProvider IDecisionMaker IDeferredCommandHandle IMeasure IOption IOptionCollection IScheduler ISelector ITransition IUtilityAI Enums IntervalType"
  },
  "api_plugin/PluginCore.IPlugin.html": {
    "href": "api_plugin/PluginCore.IPlugin.html",
    "title": "Interface IPlugin | Reactive",
    "keywords": "Interface IPlugin Plugin interface. Implement this in your class to allow it to be detected by the plugin manager. Namespace :PluginCore Assembly :PluginCore.dll Syntax public interface IPlugin Properties | Improve this Doc View Source navItem Should the module add an navItem? Declaration string navItem { get; } Property Value Type Description System.String | Improve this Doc View Source pluginAuthor The modules author Declaration string pluginAuthor { get; } Property Value Type Description System.String | Improve this Doc View Source pluginDescription The modules description Declaration string pluginDescription { get; } Property Value Type Description System.String | Improve this Doc View Source pluginName The modules name Declaration string pluginName { get; } Property Value Type Description System.String | Improve this Doc View Source pluginVersion The modules version Declaration string pluginVersion { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Start() Runs anything at the start of the program Declaration void Start() | Improve this Doc View Source Stop() Runs anything at the end of the program or when the module is unloaded Declaration void Stop() | Improve this Doc View Source Tick() Runs anything in a loop Declaration void Tick()"
  },
  "api_plugin/PluginCore.html": {
    "href": "api_plugin/PluginCore.html",
    "title": "Namespace PluginCore | Reactive",
    "keywords": "Namespace PluginCore Interfaces IPlugin Plugin interface. Implement this in your class to allow it to be detected by the plugin manager."
  },
  "api_ui/ReactiveUI.Commands.CommonCommands.html": {
    "href": "api_ui/ReactiveUI.Commands.CommonCommands.html",
    "title": "Class CommonCommands | Reactive",
    "keywords": "Class CommonCommands Inheritance System.Object CommonCommands Namespace :ReactiveUI.Commands Assembly :ReactiveUI.dll Syntax public class CommonCommands : object Constructors | Improve this Doc View Source CommonCommands(ChromiumWebBrowser, Form1) Declaration public CommonCommands(ChromiumWebBrowser originalBrowser, Form1 form) Parameters Type Name Description ChromiumWebBrowser originalBrowser Form1 form Properties | Improve this Doc View Source cefHash Declaration public string cefHash { get; } Property Value Type Description System.String | Improve this Doc View Source cefSVersion Declaration public string cefSVersion { get; } Property Value Type Description System.String | Improve this Doc View Source cefVersion Declaration public string cefVersion { get; } Property Value Type Description System.String | Improve this Doc View Source currentDate Declaration public string currentDate { get; } Property Value Type Description System.String | Improve this Doc View Source reactiveVersion Declaration public string reactiveVersion { get; } Property Value Type Description System.String Methods | Improve this Doc View Source showDevTools() Declaration public void showDevTools()"
  },
  "api_ui/ReactiveUI.Commands.NavigationCommands.html": {
    "href": "api_ui/ReactiveUI.Commands.NavigationCommands.html",
    "title": "Class NavigationCommands | Reactive",
    "keywords": "Class NavigationCommands Inheritance System.Object NavigationCommands Namespace :ReactiveUI.Commands Assembly :ReactiveUI.dll Syntax public class NavigationCommands : object Constructors | Improve this Doc View Source NavigationCommands(ChromiumWebBrowser, Form1) Declaration public NavigationCommands(ChromiumWebBrowser originalBrowser, Form1 form) Parameters Type Name Description ChromiumWebBrowser originalBrowser Form1 form Properties | Improve this Doc View Source navItems Declaration public string[] navItems { get; } Property Value Type Description System.String [] | Improve this Doc View Source nextPage Declaration public string nextPage { get; } Property Value Type Description System.String Methods | Improve this Doc View Source AddToNav(String) Dynamically adds a navigation item to the navList Declaration public static void AddToNav(string page) Parameters Type Name Description System.String page | Improve this Doc View Source goBack() Declaration public void goBack() | Improve this Doc View Source showPage(String) Declaration public void showPage(string page) Parameters Type Name Description System.String page"
  },
  "api_ui/ReactiveUI.Commands.html": {
    "href": "api_ui/ReactiveUI.Commands.html",
    "title": "Namespace ReactiveUI.Commands | Reactive",
    "keywords": "Namespace ReactiveUI.Commands Classes CommonCommands NavigationCommands"
  },
  "api_ui/ReactiveUI.Constants.html": {
    "href": "api_ui/ReactiveUI.Constants.html",
    "title": "Class Constants | Reactive",
    "keywords": "Class Constants Constants available throughout the whole application Inheritance System.Object Constants Namespace :ReactiveUI Assembly :ReactiveUI.dll Syntax public static class Constants : object Fields | Improve this Doc View Source app Declaration public static App app Field Value Type Description App | Improve this Doc View Source debug Declaration public static Debug debug Field Value Type Description Debug | Improve this Doc View Source htmlResource Declaration public static string htmlResource Field Value Type Description System.String"
  },
  "api_ui/ReactiveUI.Form1.html": {
    "href": "api_ui/ReactiveUI.Form1.html",
    "title": "Class Form1 | Reactive",
    "keywords": "Class Form1 Main UI entry for the application Inheritance System.Object Form1 Namespace :ReactiveUI Assembly :ReactiveUI.dll Syntax public class Form1 : Form Constructors | Improve this Doc View Source Form1() Class Initializer. Initializes CEF and the renderer Declaration public Form1() Properties | Improve this Doc View Source ChromeBrowser Declaration public ChromiumWebBrowser ChromeBrowser { get; set; } Property Value Type Description ChromiumWebBrowser Methods | Improve this Doc View Source Dispose(Boolean) Clean up any resources being used. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing true if managed resources should be disposed; otherwise, false. | Improve this Doc View Source WndProc(ref Message) Declaration protected override void WndProc(ref Message m) Parameters Type Name Description Message m"
  },
  "api_ui/ReactiveUI.GUI.MessageBox.html": {
    "href": "api_ui/ReactiveUI.GUI.MessageBox.html",
    "title": "Class MessageBox | Reactive",
    "keywords": "Class MessageBox Inheritance System.Object MessageBox Namespace :ReactiveUI.GUI Assembly :ReactiveUI.dll Syntax public static class MessageBox : object Methods | Improve this Doc View Source ShowMessage(String, String) Shows A Message Declaration public static void ShowMessage(string message, string caption) Parameters Type Name Description System.String message The content System.String caption The title"
  },
  "api_ui/ReactiveUI.GUI.html": {
    "href": "api_ui/ReactiveUI.GUI.html",
    "title": "Namespace ReactiveUI.GUI | Reactive",
    "keywords": "Namespace ReactiveUI.GUI Classes MessageBox"
  },
  "api_ui/ReactiveUI.Renderer.CefInstance.html": {
    "href": "api_ui/ReactiveUI.Renderer.CefInstance.html",
    "title": "Class CefInstance | Reactive",
    "keywords": "Class CefInstance Class to initialize and handle CEF instance, also contains some common methods and variables. Inheritance System.Object CefInstance Namespace :ReactiveUI.Renderer Assembly :ReactiveUI.dll Syntax public class CefInstance : object Constructors | Improve this Doc View Source CefInstance(ChromiumWebBrowser, Form) Initializes the class Declaration public CefInstance(ChromiumWebBrowser originalBrowser, Form form) Parameters Type Name Description ChromiumWebBrowser originalBrowser Form form Properties | Improve this Doc View Source chromeBrowser A reference to the initialized CEF instance Declaration public ChromiumWebBrowser chromeBrowser { get; } Property Value Type Description ChromiumWebBrowser Methods | Improve this Doc View Source GoBack(ChromiumWebBrowser) Goes back to the prevPage Declaration public static void GoBack(ChromiumWebBrowser browser) Parameters Type Name Description ChromiumWebBrowser browser | Improve this Doc View Source InitializeCEF(Form) Initializes CEF subsystem Declaration public static ChromiumWebBrowser InitializeCEF(Form form) Parameters Type Name Description Form form Returns Type Description ChromiumWebBrowser | Improve this Doc View Source LoadPage(String, ChromiumWebBrowser, String) Does what the name says, loads a page. Declaration public static string LoadPage(string page, ChromiumWebBrowser browser = null, string pageURL = null) Parameters Type Name Description System.String page ChromiumWebBrowser browser System.String pageURL Returns Type Description System.String | Improve this Doc View Source showDevTools() Method to show CEF Dev Tools to user. (Not recommended for release) Declaration public void showDevTools() Events | Improve this Doc View Source OnLoadPage The LoadPage event. Hook onto this to catch the Load Page command Declaration public static event CEFLoadPage OnLoadPage Event Type Type Description CEFLoadPage"
  },
  "api_ui/ReactiveUI.Renderer.html": {
    "href": "api_ui/ReactiveUI.Renderer.html",
    "title": "Namespace ReactiveUI.Renderer | Reactive",
    "keywords": "Namespace ReactiveUI.Renderer Classes CefInstance Class to initialize and handle CEF instance, also contains some common methods and variables."
  },
  "api_ui/ReactiveUI.html": {
    "href": "api_ui/ReactiveUI.html",
    "title": "Namespace ReactiveUI | Reactive",
    "keywords": "Namespace ReactiveUI Classes Constants Constants available throughout the whole application Form1 Main UI entry for the application"
  },
  "api/toc.html": {
    "href": "api/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "api_ai/toc.html": {
    "href": "api_ai/toc.html",
    "title": "Table of Content",
    "keywords": ""
  },
  "index.html": {
    "href": "index.html",
    "title": "Getting Started with Reactive | Reactive",
    "keywords": "Getting Started with Reactive What is Reactive? In today's time, an application that can morph into something else is something hard to find and Reactive is one of those apps. Reactive is an application that can morph into another app using modules. For example, You wanted a music app? Load in the music module and boom! It's a fully featured music app! . We did this by using a proprietary library made in-house called MALE which is short for Modular Application Loading Extension in which this library would load a single or many modules into the memory of the app and during initialization, allow the user which module to activate and then relays it to the interface module to be shown to the user. History of Reactive Reactive evolved out of a project designed to be a personal assistant somewhat like Jarvis which began in mid-2016. We saw the potential of this application and it's uses in providing a single solution and so we've decided to nurture it and let it become mature until where we've achieved right now. This has resulted in a dramatic improvement over old codes and the improvement of the technology behind it. Philosophy Reactive does what you tell it to do � no more, no less. It doesn't try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Reactive gets out of your way and allows you to concentrate on what truly matters: your content. Who is Reactive For? Reactive is designed to become anything the user wants. Thus we belive that every user would have a purpose of using Reactive. Getting Started with Reactive Compiling it yourself Requirements Visual Studio 2015 .NET 4.6 and above git clone https://github.com/ReactiveTeam/ReactiveMain.git # Get the submodules cd path/to/project git submodules update --init # Build Reactive Run Reactive.sln in Visual Studio Build ReactiveUI using x86 configuration in either Release or Debug Pre-compiled Binaries Build Status Check out the build status to see if there's any new builds avilable... Platform Build Status Windows OSX Linux We've went one step ahead and released the pre-compile binaries available for download from the following links:- Oops! We don't have any pre-compiled libraries yet."
  },
  "articles/contributing.html": {
    "href": "articles/contributing.html",
    "title": "Contributing to Reactive | Reactive",
    "keywords": "Contributing to Reactive Thank you for your interest in contributing to Reactive! This document is a guide to help newcomers contribute! There are many ways to help us out and we appreciate all of them. Index Communication Chat Reddit Direct Contributing Low-Hanging Fruit - Easy Targets for Newbies GitHub Issues Pull Requests Creating a Pull Request Best Practices/Guidelines General Style Guidelines C# Git Other Ways to Contribute Graphic Design Other External Links Reactive Official Site Communication Chat The quickest and most open way to communicate with the Reactive team is on our chat server. Currently, the only way to join it is by sending an email to haikalizz@prototypestd.cu.ma , which might take a little while, since it's not automated. We're currently working on an easier way to do this, but this is the most convenient way right now. Direct Contributing Low-Hanging Fruit - Easy Targets for Newbies If you're not fluent in C#: Writing documentation Using/testing Reactive, filing issues for bugs and needed features Web development ( Reactive website, separate repo ) Writing unit tests (may require minimal knowledge of c#) If you are fluent in C#: Module development Other high-level code tasks Familiarize yourself with the repository and codebase Grep for TODO , FIXME , BUG , UNOPTIMIZED , REWRITEME , DOCME , and PRETTYFYME and fix the code you find. Improve and optimize code, especially in the Reactive repo GitHub Issues A bit more formal way of communication with fellow Reactive devs, but a little less quick and convenient like the chat (unless of course you aren't in it yet, which if you're going to be involved in this project really at all, it is recommended that you request to join). These are for more specific topics. Pull Requests It's completely okay to just submit a small pull request without first making an issue or something, but if it's a significant change that will require a lot of planning and reviewing, it's best you start with writing an issue first. Also see git guidelines Creating a Pull Request Fork the repository Clone the original repository to your local PC using one of the following commands based on the protocol you are using: HTTPS: git clone https://github.com/ReactiveTeam/ReactiveMain.git SSH: git clone git@github.com:ReactiveTeam/ReactiveMain.git Pull the submodules: git submodules update --init Then rebase: git rebase upstream master Use HTTPS if you don't know which one to use. (Recommended: learn about SSH if you don't want to have to log in every time you push/pull!) Add your fork with HTTPS: git remote add origin https://github.com/your-username/ReactiveMain.git SSH: git remote add origin git@github.com:your-username/ReactiveMain.git Alternatively, if you already have a fork and copy of the repo, you can simply check to make sure you're up-to-date Fetch the upstream: git fetch upstream master Rebase with local commits: git rebase upstream/master Update the submodules: git submodule update --init Optionally create a separate branch (recommended if you're making multiple changes simultaneously) ( git checkout -b my-branch ) Make changes Commit ( git add . --all; git commit -m \"my commit\" ) Test your changes ( Best Practices and Guidelines ) Pull from upstream ( git fetch upstream; git rebase upstream/master ) (Note: try not to use git pull , it is equivalent to doing git fetch upstream; git merge master upstream/master , which is not usually preferred for local/fork repositories, although it is fine in some cases.) Repeat step 9 to make sure the rebase still builds and starts Push to your fork ( git push origin my-branch ) Create a pull request Describe your changes Submit! Best Practices and Guidelines General Remember to do a git rebase -i upstream/master before you send your patch! Make sure your code is readable, commented, and well-documented. Don't hesitate to ask for help! Before implementing something, discuss it! Open an issue, or join the chat. On the more technical side: Test, test, and test! Follow the style conventions Follow the usual idioms of programming, such as \"composition over inheritance\", \"let your program be divided in smaller pieces\", and \"resource acquisition is initialization\". Be sure to mark parts that need work with TODO , FIXME , BUG , UNOPTIMIZED , REWRITEME , DOCME , and PRETTYFYME . Check the chat , and the Website frequently. Style Guidelines C# Just follow the official .NET standards for formatting and practices, until we setup the CI system to do it automatically. Git Commit messages should describe their changes in present tense, e.g. \" Add stuff to file.ext \" instead of \" added stuff to file.ext \". Try to remove useless duplicate/merge commits from PRs as these clutter up history, and may make it hard to read. Usually, when syncing your local copy with the master branch, you will want to rebase instead of merge. This is because it will create duplicate commits that don't actually do anything when merged into the master branch. When you start to make changes, you will want to create a separate branch, and keep the master branch of your fork identical to the main repository, so that you can compare your changes with the main branch and test out a more stable build if you need to. You should have a fork of the repository on GitHub and a local copy on your computer. The local copy should have two remotes; upstream and origin , upstream should be set to the main repository and origin should be your fork. Other Ways to Contribute Graphic Design If you're a good designer, you can help with logos, UI design, app icons, other graphics, etc. More information to come on this, for now just join the chat and ask about graphic design."
  },
  "articles/cstandards.html": {
    "href": "articles/cstandards.html",
    "title": "Engineering Guidelines | Reactive",
    "keywords": "Engineering Guidelines Basics Copyright header and license notice All source code files require the following exact header according to its language (please do not make any changes to it). extension: .cs // Copyright (c) ReactiveTeam. All rights reserved. // Licensed under the GPLv3 license. See LICENSE file in the project root for full license information. extension: .js // Copyright (c) ReactiveTeam. All rights reserved. Licensed under the GPLv3 license. See LICENSE file in the project root for full license information. extension: .css /* Copyright (c) ReactiveTeam. All Rights Reserved. Licensed under the GPLv3 License. See License.txt in the project root for license information. */ Code reviews and checkins To help ensure that only the highest quality code makes its way into the project, please submit all your code changes to GitHub as PRs. This includes runtime code changes, unit test updates, and deployment scripts. For example, sending a PR for just an update to a unit test might seem like a waste of time but the unit tests are just as important as the product code. As such, reviewing changes to unit tests is just as important. The advantages are numerous: Improving code quality; increasing visibility on changes and their potential impact; avoiding duplication of effort; and creating general awareness of progress being made in various areas. In general a PR should be signed off(using the 👍 emoticon) by the owner of that code. To commit the PR to the repo, do not use the Big Green Button . Instead, do a typical push that you would use with Git (for example, local pull, rebase, merge or push). Source Code Management Branch strategy In general: master has the code that is being worked on but that we have not yet released. This is the branch into which developers normally submit pull requests and merge changes into. We run daily per-commit CI on this branch. Assembly naming pattern The general naming pattern is <project>.<area>.<subarea> . Coding Standards Introduction The C# Coding Standards will be used during both development and build process. This will help ensure that all developers on the team are in a consistent manner. \"Any fool can write code that a computer can understand. Good programmers write code that humans understand\". Martin Fowler. Refactoring: Improving the design of existing code. Purpose This section defines a set of oding standards to be used by the Reactive team to guarantee maximum legibility, reliability, re-usability and homogeneity of our code. Each section is marked Mandatory or Recommended . Mandatory sections will be enforced during code reviews as well as tools, and code will not be considered complete until it is compliant. Scope This section contains general C# coding standards that can be applied to any type of application developed in C#, based upon Framework Design Guidelines . This section is not intended to be a tutorial on C# or coding. Instead, it includes a set of limitations and recommendations focused on clarifying the development. Tools FxCop is an application that analyzes managed code assemblies (code that targets the .NET Framework common language runtime) and reports information about the assemblies, such as possible design, localization, performance, and security improvements. Highlights of Coding Standards This section is not intended to give a summary of all the coding standards, but to give a highlight of some rules one will possibly meet in daily coding life. It also provides some coding standards that are recommended but not mandatory. File Layout (Recommended) Only one public class is allowed per file. The file name derives from the class name. Class : Observer Filename: Observer.cs Class Definition Order (Mandatory) The class definition contains class members in the following order, from less restricted scope (public) to more restrictive (private): ~ Nested types, e.g. classes, enum, struct, etc. ~ Non-private nested types are not allowed. Field members (for example, member variables, const, etc.) Member functions Constructors Finalizer (Do not use unless absolutely necessary) Methods (Properties, Events, Operations, Overridables and Static) Private nested types Naming (Mandatory) DO use plural form for namespaces DO use PascalCasing for all public member, type, and namespace names consisting of multiple words. PropertyDescriptor HtmlTag IOStream Note A special case is made for two-letter acronyms in which both letters are capitalized, e.g. IOStream DO use camelCasing for parameter names. propertyDescriptor htmlTag ioStream DO start with underscore for private fields: private readonly Guid _userId = Guid.NewGuid(); DO start static readonly field and constant names with capitalized case private static readonly IEntityAccessor EntityAccessor = null; private const string MetadataName = \"MetadataName\"; DO NOT capitalize each word in so-called closed-form compound words . DO use Async suffix in the asynchronous method names to notice people how to use it properly public async Task<string> LoadContentAsync() { ... } Formatting (Mandatory) DO use spaces over tabs, and always show all spaces/tabs in IDE Tips Visual Studio > Tools > Options... > Text Editor > C# > Tabs > Insert spaces (Tab size: 4) Visual Studio > Edit > Advanced > View White Space (Ctrl+R, Ctrl+W) DO add a space when: for (var i = 0; i < 1; i++) if (a == b) Performace Consideration DO use sealed for private classes if they are not to be inherited. DO add readonly to fields if they do not tend to be changed. DO use static methods if it is not instance relevant. DO use RegexOptions.Compiled for readonly Regex . Cross-platform coding Our code can and should support multiple operating systems in addition to Windows. Code should be sensitvie to the differences between Operating Systems. Here are some specifics to consider: DO use Enviroment.NewLine instead of hard-coding the line break, as Windows uses \\r\\n and OSX/Linux uses \\n . Note Be aware that these line-endings may cause problems in code when using @\"\" text blocks with line breaks, e.g.: var x = @\"line1 line2\"; DO use Path.Combine() or Path.DirectorySeparatorChar to separate directories. If this is not possible (such as in scripting), use a forward slash / . Windows is more forgiving than Linux in this regard. Unit tests and functional tests Assembly naming The unit tests for the Microsoft.Foo assembly live in the Microsoft.Foo.Tests assembly. The functional tests for the Microsoft.Foo assembly live in the Microsoft.Foo.FunctionalTests assembly. In general there should be exactly one unit tests assembly for each product runtime assembly. In general there should be one functional tests assembly per repo. Exceptions can be made for both. Unit test class naming Test class names end with Test suffix and live in the same namespace as the class being tested. For example, the unit tests for the Microsoft.Foo.Boo class would be in a Microsoft.Foo.BooTest class in the unit tests assembly Microsoft.Foo.Tests . Unit test method naming Unit test method names must be descriptive about what developers are testing, under what conditions, and what the expectations are . Pascal casing and underscores can be used to improve readability. The following test names are correct: PublicApiArgumentsShouldHaveNotNullAnnotation Public_api_arguments_should_have_not_null_annotation The following test names are incorrect: Test1 Constructor FormatString GetData Unit test structure The contents of every unit test should be split into three distinct stages (arrange, act and assert), optionally separated by these comments: // Arrange // Act // Assert The crucial thing here is the Act stage is exactly one statement. That one statement calls only the one method that you are trying to test. Keeping that one statement as simple as possible is also very important. For example, this is not ideal: int result = myObj.CallSomeMethod(GetComplexParam1(), GetComplexParam2(), GetComplexParam3()); This style is not recommended because too much can go wrong in this one statement. All the GetComplexParamN() calls can throw exceptions for a variety of reasons unrelated to the test itself. It is thus unclear to someone running into a problem why the failure occurred. The ideal pattern is to move the complex parameter building into the Arrange section: // Arrange P1 p1 = GetComplexParam1(); P2 p2 = GetComplexParam2(); P3 p3 = GetComplexParam3(); // Act int result = myObj.CallSomeMethod(p1, p2, p3); // Assert Assert.AreEqual(1234, result); Now the only reason the line with CallSomeMethod() can fail is if the method itself throws an error. Testing exception messages Testing the specific exception message in a unit test is important. This ensures that the desired exception is being tested rather than a different exception of the same type. In order to verify the exact exception, it is important to verify the message. // Act var ex = Assert.Throws<InvalidOperationException>(() => fruitBasket.GetBananaById(-1)); // Assert Assert.Equal(\"Cannot load banana with negative identifier.\", ex.Message); Use xUnit.net's plethora of built-in assertions xUnit.net includes many kinds of assertions � please use the most appropriate one for your test. This makes the tests much more readable and also allows the test runner to report the best possible errors (whether it's local or the CI machine). For example, these are bad: Assert.Equal(true, someBool); Assert.True(\"abc123\" == someString); Assert.True(list1.Length == list2.Length); for (int i = 0; i < list1.Length; i++) { Assert.True( String.Equals( list1[i], list2[i], StringComparison.OrdinalIgnoreCase)); } These are good: Assert.True(someBool); Assert.Equal(\"abc123\", someString); // built-in collection assertions! Assert.Equal(list1, list2, StringComparer.OrdinalIgnoreCase); Parallel tests By default all unit test assemblies should run in parallel mode, which is the default. Unit tests shouldn't depend on any shared state, and so should generally be runnable in parallel. If tests fail in parallel, the first thing to do is to figure out why; do not just disable parallel testing! For functional tests, you can disable parallel tests."
  },
  "articles/how-it-works.html": {
    "href": "articles/how-it-works.html",
    "title": "How it works | Reactive",
    "keywords": "How it works Flow Chart The following diagram shows what happens when you start the app. Explaination 1. Subsystem Initializer The first step is to intialize all the subsystems. This is automatically when the program starts in the Reactive.Application namespace. This step is important as it will initialize all the required systems such as PluginManager and Renderer. The user can also request a reboot by using the developer menu under settings, this is to allow the system to reset it caches and rest itself. If the subsystem fails to initalize, it will execute a timeout function before trying again. Usually it will try again after a few seconds in which the user would see a loading screen in the startup. (This has never happened before but we will keep running tests to ensure it stays that way) 2. PluginManager There are a few steps the PluginManager takes when it is initialized. First is to run a check on the plugins directory to check if there are any viable modules available, if exists, it runs the loadPlugins() function which will load all the modules into memory and then calls the startTick() function. An explaination of the functions: loadPlugins() - loads the plugins, returns an exception if fail. The function also registers the available modules into a List<IPlugin>() list. startTick() - starts the Tick() function. This is will also call the start() functions on all the loaded modules. Tick() - a fixed update function which is thread independant and runs every +-seconds. (Not guaranteed will run every second) The synchronous Tick() & startTick() call invokes the implemented tick() and init() function respectively in the modules main class. Developers are recommended to put important data updates here in this function. (This function is same to Unity3D C# Update() function) 3. Register the events MALE framework works based upon an event system. Modules can leverage this event system by subscribing into a list of events from controlling what page to load to even manipulating the data on screen. Once the events are registered, it will be called once by the Tick() function. If the module contains commands such as loading a page or opening a file, it will be registered with the Renderer and should be able to be called using javascript. Refer to CEF documentation about this. For example: // This is an example command in the module public string moduleName { get: { return \"My Modules Name\"; } } // This is an example call from javascript Console.log(module.moduleName); 4. Run the commands Once all the events are registered, the commands associated with the events are called. This could range from loading the resource files or calling some REST API. The language we used, C#, allows developers to easily extend their modules with NuGET packages like Google Analytics or Spotify Music API. The commands are registered using the following function: // This registers the commands with CEF allowing it to be called using Javascript in html cefInstance.RegisterJsObject(moduleName, new module(cefInstance, this)); 5. Render it We've ran the commands, registered the events, and now we want to show it to the user. With CEF, this possible using html files which you can compile together with your module. Majority of our UI is made in html, for this part of the section, everything has been explained in the CEF manuals. Refer to it on how CEF works. Technology"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Reactive",
    "keywords": "Add your introductions here!"
  },
  "articles/submiting-a-bug.html": {
    "href": "articles/submiting-a-bug.html",
    "title": "Submitting a bug | Reactive",
    "keywords": "Submitting a bug First off, we're sorry you're here. We try to perform as many user tests as possible but occasionally bugs do squeak through. Please be sure that you've read through the FAQ and wiki to ensure that your issue is actually a bug and not a usage confusion. Bug reports that do not conform to the standard below may be linked to this page, and we may not help you until you provide all the info below. Sample Bug Report Feel free to copy the lines below this to start your own bug report! Problem Hello, I'm having some trouble getting X,Y, and Z to work with Reactive. I'm doing A and I expected to see B, but instead I get C. Reactive Version and OS Info My program version is 0.1.0 and I'm using Windows 10. Log Files Here are my log files posted on pastebin.com (Log file is error.log) **Checklist for your ticket: There are a couple of important things you should know before creating a new issue ticket. Use this list to make sure your ticket has all theinformation we need! ** Does your ticket have...** [ ] Version number? [ ] OS info [ ] Relevant logs (use pastebin.com) [ ] A descriptive ticket title/subject?"
  },
  "faq_general/index.html": {
    "href": "faq_general/index.html",
    "title": "Add your introductions here! | Reactive",
    "keywords": "Add your introductions here!"
  },
  "faq_operative/index.html": {
    "href": "faq_operative/index.html",
    "title": "Add your introductions here! | Reactive",
    "keywords": "Add your introductions here!"
  },
  "api/Reactive.App.html": {
    "href": "api/Reactive.App.html",
    "title": "Class App | Reactive",
    "keywords": "Class App Access to application run-time data. Inheritance System.Object App Namespace :Reactive Assembly :Reactive.dll Syntax public class App : object Fields | Improve this Doc View Source MainAssembly A reference to our assembly Declaration public static readonly Assembly MainAssembly Field Value Type Description Assembly | Improve this Doc View Source MainAssemblyName The Main Assembly Name Declaration public static readonly string MainAssemblyName Field Value Type Description System.String | Improve this Doc View Source pluginManager A reference to the plugin manager. Declaration public static PluginManager pluginManager Field Value Type Description PluginManager Properties | Improve this Doc View Source CurrentTime Returns the current representation of time Declaration public static string CurrentTime { get; } Property Value Type Description System.String | Improve this Doc View Source StartupPath Returns the startup path of the app Declaration public static string StartupPath { get; } Property Value Type Description System.String | Improve this Doc View Source Version Returns the version of the app Declaration public static Version Version { get; } Property Value Type Description Version Methods | Improve this Doc View Source Check64Bit() Checks if program is running in 64bit environment Declaration public bool Check64Bit() Returns Type Description System.Boolean | Improve this Doc View Source CheckSingleInstance() Check for a single instance of the program Declaration public bool CheckSingleInstance() Returns Type Description System.Boolean | Improve this Doc View Source InvokeBeforeRun() This function always run before main UI starts Declaration public static void InvokeBeforeRun()"
  },
  "api/Reactive.Collections.FastList-1.html": {
    "href": "api/Reactive.Collections.FastList-1.html",
    "title": "Class FastList<T> | Reactive",
    "keywords": "Class FastList<T> Inheritance System.Object FastList<T> Namespace :Reactive.Collections Assembly :Reactive.dll Syntax public class FastList<T> : IEnumerable, IEnumerable<T> where T : IEquatable<T> Type Parameters Name Description T Constructors | Improve this Doc View Source FastList(Int32) Declaration public FastList(int capacity = null) Parameters Type Name Description System.Int32 capacity Fields | Improve this Doc View Source capacity Declaration protected int capacity Field Value Type Description System.Int32 | Improve this Doc View Source count Declaration protected int count Field Value Type Description System.Int32 | Improve this Doc View Source Data Declaration public T[] Data Field Value Type Description T[] Properties | Improve this Doc View Source Capacity Declaration public int Capacity { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Add(T) Declaration public void Add(T element) Parameters Type Name Description T element | Improve this Doc View Source BinarySearch<U>(U, Func<T, U, Int32>) Declaration public int BinarySearch<U>(U compared, Func<T, U, int> comparer) Parameters Type Name Description U compared Func<, , > <T, U, System.Int32 > comparer Returns Type Description System.Int32 Type Parameters Name Description U | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<T> GetEnumerator() Returns Type Description IEnumerator<> <T> | Improve this Doc View Source Insert(Int32, T) Declaration public void Insert(int index, T element) Parameters Type Name Description System.Int32 index T element | Improve this Doc View Source Remove(T) Declaration public bool Remove(T element) Parameters Type Name Description T element Returns Type Description System.Boolean | Improve this Doc View Source RemoveAt(Int32) Declaration public void RemoveAt(int index) Parameters Type Name Description System.Int32 index"
  },
  "api/Reactive.Collections.html": {
    "href": "api/Reactive.Collections.html",
    "title": "Namespace Reactive.Collections | Reactive",
    "keywords": "Namespace Reactive.Collections Classes FastList<T>"
  },
  "api/Reactive.Framework.Accessibility.html": {
    "href": "api/Reactive.Framework.Accessibility.html",
    "title": "Enum Accessibility | Reactive",
    "keywords": "Enum Accessibility Namespace :Reactive.Framework Assembly :Reactive.dll Syntax public enum Accessibility : int Fields Name Description Internal Private Protected ProtectedInternal Public"
  },
  "api/Reactive.Framework.Error.Debug.html": {
    "href": "api/Reactive.Framework.Error.Debug.html",
    "title": "Class Debug | Reactive",
    "keywords": "Class Debug Class containing methods to ease debugging. Inheritance System.Object Debug Namespace :Reactive.Framework.Error Assembly :Reactive.dll Syntax public class Debug : object Methods | Improve this Doc View Source Exit(Object, EventArgs) Occurs when the application exits. Declaration public static void Exit(object sender, EventArgs e) Parameters Type Name Description System.Object sender EventArgs e | Improve this Doc View Source Log(Object, Boolean, String) Logs message to the Logger. Declaration public static void Log(object message, bool showPopup = false, string popupmessage = null) Parameters Type Name Description System.Object message String or object to be converted to string representation for display. System.Boolean showPopup System.String popupmessage | Improve this Doc View Source LogException(Exception) A variant of Debug.Log that logs an error message to the console. Declaration public static void LogException(Exception exception) Parameters Type Name Description Exception exception Runtime Exception. | Improve this Doc View Source LogFatal(Object, Boolean, String) A variant of Debug.Log that logs an error message to the Logger. Declaration public static void LogFatal(object message, bool showPopup = false, string popupmessage = null) Parameters Type Name Description System.Object message String or object to be converted to string representation for display. System.Boolean showPopup System.String popupmessage"
  },
  "api/Reactive.Framework.Error.ErrorUtils.html": {
    "href": "api/Reactive.Framework.Error.ErrorUtils.html",
    "title": "Class ErrorUtils | Reactive",
    "keywords": "Class ErrorUtils Inheritance System.Object ErrorUtils Namespace :Reactive.Framework.Error Assembly :Reactive.dll Syntax public class ErrorUtils : object Methods | Improve this Doc View Source GetErrorLocation(Int32, Boolean) Performs a stack trace to see where things went wrong for error reporting. Declaration public static string GetErrorLocation(int level = 1, bool showOnlyLast = false) Parameters Type Name Description System.Int32 level System.Boolean showOnlyLast Returns Type Description System.String"
  },
  "api/Reactive.Framework.Error.html": {
    "href": "api/Reactive.Framework.Error.html",
    "title": "Namespace Reactive.Framework.Error | Reactive",
    "keywords": "Namespace Reactive.Framework.Error Classes Debug Class containing methods to ease debugging. ErrorUtils"
  },
  "api/Reactive.Framework.Events.ApplicationEvents.html": {
    "href": "api/Reactive.Framework.Events.ApplicationEvents.html",
    "title": "Class ApplicationEvents | Reactive",
    "keywords": "Class ApplicationEvents Inheritance System.Object ApplicationEvents Namespace :Reactive.Framework.Events Assembly :Reactive.dll Syntax public static class ApplicationEvents : object Methods | Improve this Doc View Source addToExitEvent(Action) Adds an event to the exitEvent param to be run at the end of Application life cycle Declaration public static void addToExitEvent(Action exit) Parameters Type Name Description Action exit | Improve this Doc View Source onApplicationExit(Object, EventArgs) Runs on ApplicationExit Declaration public static void onApplicationExit(object Sender, EventArgs e) Parameters Type Name Description System.Object Sender EventArgs e"
  },
  "api/Reactive.Framework.Events.CEFEventArgs.html": {
    "href": "api/Reactive.Framework.Events.CEFEventArgs.html",
    "title": "Class CEFEventArgs | Reactive",
    "keywords": "Class CEFEventArgs CEFEventArgs is the base class for the CEFEvent Arguments Inheritance System.Object CEFEventArgs Namespace :Reactive.Framework.Events Assembly :Reactive.dll Syntax public class CEFEventArgs : EventArgs Fields | Improve this Doc View Source EventInfo Declaration public string EventInfo Field Value Type Description System.String"
  },
  "api/Reactive.Framework.Events.CEFLoadPage.html": {
    "href": "api/Reactive.Framework.Events.CEFLoadPage.html",
    "title": "Delegate CEFLoadPage | Reactive",
    "keywords": "Delegate CEFLoadPage CEFEventHandler delegate. Namespace :Reactive.Framework.Events Assembly :Reactive.dll Syntax public delegate void CEFLoadPage(object source, CEFEventArgs e); Parameters Type Name Description System.Object source CEFEventArgs e"
  },
  "api/Reactive.Framework.Events.CEFOnLoadPageArgs.html": {
    "href": "api/Reactive.Framework.Events.CEFOnLoadPageArgs.html",
    "title": "Class CEFOnLoadPageArgs | Reactive",
    "keywords": "Class CEFOnLoadPageArgs Inheritance System.Object CEFEventArgs CEFOnLoadPageArgs Inherited Members CEFEventArgs.EventInfo Namespace :Reactive.Framework.Events Assembly :Reactive.dll Syntax public class CEFOnLoadPageArgs : CEFEventArgs Constructors | Improve this Doc View Source CEFOnLoadPageArgs(String, String) Declaration public CEFOnLoadPageArgs(string text, string pageLoad) Parameters Type Name Description System.String text System.String pageLoad Fields | Improve this Doc View Source pageToLoad Declaration public string pageToLoad Field Value Type Description System.String"
  },
  "api/Reactive.Framework.Events.html": {
    "href": "api/Reactive.Framework.Events.html",
    "title": "Namespace Reactive.Framework.Events | Reactive",
    "keywords": "Namespace Reactive.Framework.Events Classes ApplicationEvents CEFEventArgs CEFEventArgs is the base class for the CEFEvent Arguments CEFOnLoadPageArgs Delegates CEFLoadPage CEFEventHandler delegate."
  },
  "api/Reactive.Framework.Jobs.BaseJob.html": {
    "href": "api/Reactive.Framework.Jobs.BaseJob.html",
    "title": "Class BaseJob | Reactive",
    "keywords": "Class BaseJob Inheritance System.Object BaseJob Namespace :Reactive.Framework.Jobs Assembly :Reactive.dll Syntax public class BaseJob : IJob Methods | Improve this Doc View Source Execute() Declaration public void Execute()"
  },
  "api/Reactive.Framework.Jobs.JobHandler.html": {
    "href": "api/Reactive.Framework.Jobs.JobHandler.html",
    "title": "Class JobHandler | Reactive",
    "keywords": "Class JobHandler Handles the loop, start, and stop functions of the PluginHandler Inheritance System.Object JobHandler Namespace :Reactive.Framework.Jobs Assembly :Reactive.dll Syntax public class JobHandler : object Methods | Improve this Doc View Source AddToLoop(Action) Adds an action to the JobHandler Loop function. Declaration public static void AddToLoop(Action action) Parameters Type Name Description Action action | Improve this Doc View Source AddToStart(Action) Adds an action to the JobHandler Start function. Declaration public static void AddToStart(Action action) Parameters Type Name Description Action action | Improve this Doc View Source AddToStop(Action) Adds an action to the JobHandler Stop function. Declaration public static void AddToStop(Action action) Parameters Type Name Description Action action | Improve this Doc View Source Start() This function runs automatically the registered actions at the start of the program. Declaration public static void Start() | Improve this Doc View Source Stop() This function runs all the registered actions at the end of the program. (Before the exit) Declaration public static void Stop() | Improve this Doc View Source UnregisterAction(Action) Unregisters all of a modules actions Declaration public static void UnregisterAction(Action action) Parameters Type Name Description Action action | Improve this Doc View Source Update() This function runs every second the registered actions. Declaration public static void Update()"
  },
  "api/Reactive.Framework.Jobs.html": {
    "href": "api/Reactive.Framework.Jobs.html",
    "title": "Namespace Reactive.Framework.Jobs | Reactive",
    "keywords": "Namespace Reactive.Framework.Jobs Classes BaseJob JobHandler Handles the loop, start, and stop functions of the PluginHandler"
  },
  "api/Reactive.Framework.Math.MathHelpers.html": {
    "href": "api/Reactive.Framework.Math.MathHelpers.html",
    "title": "Class MathHelpers | Reactive",
    "keywords": "Class MathHelpers Inheritance System.Object MathHelpers Namespace :Reactive.Framework.Math Assembly :Reactive.dll Syntax public class MathHelpers : object Methods | Improve this Doc View Source IsOdd(Int32) returns true if the supplied integer is an odd value and false if it's an even value. this can be used to perform logic every other time something happens, or for every other iteration in a loop Declaration public static bool IsOdd(int val) Parameters Type Name Description System.Int32 val Returns Type Description System.Boolean | Improve this Doc View Source NaNSafeFloat(Single, Single) cleans non numerical values (NaN) from a float by retaining a previous property value. if 'prevValue' is omitted, the NaN will be replaced by '0.0f'. Declaration public static float NaNSafeFloat(float value, float prevValue = null) Parameters Type Name Description System.Single value System.Single prevValue Returns Type Description System.Single | Improve this Doc View Source ReduceDecimals(Single, Single) reduces the number of decimals of a floating point number. this can be used to solve floating point imprecision cases. 'factor' determines the amount of decimals. Default is 1000 which results in 3 decimals. Declaration public static float ReduceDecimals(float value, float factor = null) Parameters Type Name Description System.Single value System.Single factor Returns Type Description System.Single | Improve this Doc View Source SnapToZero(Single, Single) this can be used to snap individual super-small property values to zero, for avoiding some floating point issues. Declaration public static float SnapToZero(float value, float epsilon = 0.0001F) Parameters Type Name Description System.Single value System.Single epsilon Returns Type Description System.Single"
  },
  "api/Reactive.Framework.Math.html": {
    "href": "api/Reactive.Framework.Math.html",
    "title": "Namespace Reactive.Framework.Math | Reactive",
    "keywords": "Namespace Reactive.Framework.Math Classes MathHelpers"
  },
  "api/Reactive.Framework.Security.SecurityUtils.html": {
    "href": "api/Reactive.Framework.Security.SecurityUtils.html",
    "title": "Class SecurityUtils | Reactive",
    "keywords": "Class SecurityUtils Inheritance System.Object SecurityUtils Namespace :Reactive.Framework.Security Assembly :Reactive.dll Syntax public static class SecurityUtils : object Methods | Improve this Doc View Source CalculateChecksum(Byte[]) Declaration public static string CalculateChecksum(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description System.String | Improve this Doc View Source CalculateChecksum(String) Declaration public static string CalculateChecksum(string fileName) Parameters Type Name Description System.String fileName Returns Type Description System.String"
  },
  "api/Reactive.Framework.Security.html": {
    "href": "api/Reactive.Framework.Security.html",
    "title": "Namespace Reactive.Framework.Security | Reactive",
    "keywords": "Namespace Reactive.Framework.Security Classes SecurityUtils"
  },
  "api/Reactive.Framework.UI.MessageBoxOptions.html": {
    "href": "api/Reactive.Framework.UI.MessageBoxOptions.html",
    "title": "Enum MessageBoxOptions | Reactive",
    "keywords": "Enum MessageBoxOptions Namespace :Reactive.Framework.UI Assembly :Reactive.dll Syntax public enum MessageBoxOptions : uint Fields Name Description AbortRetryIgnore CancelTryContinue DefaultDesktopOnly DefButton2 DefButton3 DefButton4 Help IconAsterisk IconExclamation IconHand IconQuestion NoFocus OkCancel OkOnly RetryCancel Right RTLReading SetForeground SystemModal TaskModal Topmost UserIcon YesNo YesNoCancel"
  },
  "api/Reactive.Framework.UI.MessageBoxResult.html": {
    "href": "api/Reactive.Framework.UI.MessageBoxResult.html",
    "title": "Enum MessageBoxResult | Reactive",
    "keywords": "Enum MessageBoxResult Namespace :Reactive.Framework.UI Assembly :Reactive.dll Syntax public enum MessageBoxResult : uint Fields Name Description Abort Cancel Close Continue Help Ignore No Ok Retry Timeout TryAgain Yes"
  },
  "api/Reactive.Framework.UI.MyMessageBox.html": {
    "href": "api/Reactive.Framework.UI.MyMessageBox.html",
    "title": "Class MyMessageBox | Reactive",
    "keywords": "Class MyMessageBox Inheritance System.Object MyMessageBox Namespace :Reactive.Framework.UI Assembly :Reactive.dll Syntax public static class MyMessageBox : object Methods | Improve this Doc View Source Show(IntPtr, String, String, MessageBoxOptions) Declaration public static MessageBoxResult Show(IntPtr hWnd, string text, string caption, MessageBoxOptions options) Parameters Type Name Description IntPtr hWnd System.String text System.String caption MessageBoxOptions options Returns Type Description MessageBoxResult"
  },
  "api/Reactive.Framework.UI.html": {
    "href": "api/Reactive.Framework.UI.html",
    "title": "Namespace Reactive.Framework.UI | Reactive",
    "keywords": "Namespace Reactive.Framework.UI Classes MyMessageBox Enums MessageBoxOptions MessageBoxResult"
  },
  "api/Reactive.Framework.Version.html": {
    "href": "api/Reactive.Framework.Version.html",
    "title": "Struct Version | Reactive",
    "keywords": "Struct Version Handles the versioning of the program Namespace :Reactive.Framework Assembly :Reactive.dll Syntax public struct Version Constructors | Improve this Doc View Source Version(Int64) Declaration public Version(long version) Parameters Type Name Description System.Int64 version Properties | Improve this Doc View Source Accessibility Declaration public Accessibility Accessibility { get; set; } Property Value Type Description Accessibility | Improve this Doc View Source Major Declaration public short Major { get; set; } Property Value Type Description System.Int16 | Improve this Doc View Source Minor Declaration public short Minor { get; set; } Property Value Type Description System.Int16 | Improve this Doc View Source PlatformLabel Declaration public string PlatformLabel { get; } Property Value Type Description System.String | Improve this Doc View Source Revision Declaration public short Revision { get; set; } Property Value Type Description System.Int16 | Improve this Doc View Source Serial Declaration public short Serial { get; set; } Property Value Type Description System.Int16 Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source ToLong() Declaration public long ToLong() Returns Type Description System.Int64 | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String | Improve this Doc View Source ToString(String) Declaration public string ToString(string format) Parameters Type Name Description System.String format Returns Type Description System.String Operators | Improve this Doc View Source Equality(Version, Version) Declaration public static bool operator ==(Version left, Version right) Parameters Type Name Description Version left Version right Returns Type Description System.Boolean | Improve this Doc View Source GreaterThan(Version, Version) Declaration public static bool operator>(Version left, Version right) Parameters Type Name Description Version left Version right Returns Type Description System.Boolean | Improve this Doc View Source GreaterThanOrEqual(Version, Version) Declaration public static bool operator >=(Version left, Version right) Parameters Type Name Description Version left Version right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Version, Version) Declaration public static bool operator !=(Version left, Version right) Parameters Type Name Description Version left Version right Returns Type Description System.Boolean | Improve this Doc View Source LessThan(Version, Version) Declaration public static bool operator <(Version left, Version right) Parameters Type Name Description Version left Version right Returns Type Description System.Boolean | Improve this Doc View Source LessThanOrEqual(Version, Version) Declaration public static bool operator <=(Version left, Version right) Parameters Type Name Description Version left Version right Returns Type Description System.Boolean"
  },
  "api/Reactive.Framework.html": {
    "href": "api/Reactive.Framework.html",
    "title": "Namespace Reactive.Framework | Reactive",
    "keywords": "Namespace Reactive.Framework Structs Version Handles the versioning of the program Enums Accessibility"
  },
  "api/Reactive.MyEnvironment.html": {
    "href": "api/Reactive.MyEnvironment.html",
    "title": "Class MyEnvironment | Reactive",
    "keywords": "Class MyEnvironment Inheritance System.Object MyEnvironment Namespace :Reactive Assembly :Reactive.dll Syntax public static class MyEnvironment : object Properties | Improve this Doc View Source Is64BitProcess Declaration public static bool Is64BitProcess { get; } Property Value Type Description System.Boolean | Improve this Doc View Source NewLine Declaration public static string NewLine { get; } Property Value Type Description System.String | Improve this Doc View Source ProcessorCount Declaration public static int ProcessorCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TickCount Declaration public static int TickCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source WorkingSetForMyLog Declaration public static long WorkingSetForMyLog { get; } Property Value Type Description System.Int64"
  },
  "api/Reactive.Plugin.PluginManager.html": {
    "href": "api/Reactive.Plugin.PluginManager.html",
    "title": "Class PluginManager | Reactive",
    "keywords": "Class PluginManager Handles the loading and management of plugins. Using Managed Extensibility Framework (MEF) This is the base script for the MALE system. Inheritance System.Object PluginManager Namespace :Reactive.Plugin Assembly :Reactive.dll Syntax public class PluginManager : object Constructors | Improve this Doc View Source PluginManager() Initializes the plugin manager. Loads the list of plugins. Declaration public PluginManager() Fields | Improve this Doc View Source loadedPlugins A list of loaded plugins Declaration public List<IPlugin> loadedPlugins Field Value Type Description List<> < IPlugin > | Improve this Doc View Source pluginsList Public variable to allow access to list of available plugins. Declaration public IEnumerable<IPlugin> pluginsList Field Value Type Description IEnumerable<> < IPlugin > Properties | Improve this Doc View Source enabledModCount Declaration public int enabledModCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source modCount Declaration public int modCount { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source LoadAvailablePlugins() Loads the available plugins in the plugin directory Declaration public void LoadAvailablePlugins() | Improve this Doc View Source LoadPlugin(IPlugin) Allows the user/system to selectively load plugins into the system Declaration public void LoadPlugin(IPlugin plugin) Parameters Type Name Description IPlugin plugin | Improve this Doc View Source StartHost() Adds the Start, Stop, and Loop functions from the modules to the job handler Declaration public void StartHost() | Improve this Doc View Source StopHost() Stops the JobHandler Declaration public void StopHost() | Improve this Doc View Source UnloadPlugin(IPlugin) Allows the user/system to selectively unload plugins into the system Declaration public void UnloadPlugin(IPlugin plugin) Parameters Type Name Description IPlugin plugin"
  },
  "api/Reactive.Plugin.PluginSerializer.html": {
    "href": "api/Reactive.Plugin.PluginSerializer.html",
    "title": "Class PluginSerializer | Reactive",
    "keywords": "Class PluginSerializer Handles the custom plugin format. Basically it's a zip file with a custom extension. Inheritance System.Object PluginSerializer Namespace :Reactive.Plugin Assembly :Reactive.dll Syntax public class PluginSerializer : object Fields | Improve this Doc View Source loadedDataFiles Declaration public List<string> loadedDataFiles Field Value Type Description List<> < System.String >"
  },
  "api/Reactive.Plugin.html": {
    "href": "api/Reactive.Plugin.html",
    "title": "Namespace Reactive.Plugin | Reactive",
    "keywords": "Namespace Reactive.Plugin Classes PluginManager Handles the loading and management of plugins. Using Managed Extensibility Framework (MEF) This is the base script for the MALE system. PluginSerializer Handles the custom plugin format. Basically it's a zip file with a custom extension."
  },
  "api/Reactive.Serialization.BinarySerializer.html": {
    "href": "api/Reactive.Serialization.BinarySerializer.html",
    "title": "Class BinarySerializer | Reactive",
    "keywords": "Class BinarySerializer Inheritance System.Object Serializer BinarySerializer Inherited Members Serializer.versionProvidersByType Serializer.Mode Serializer.GetTestDataInstance() Serializer.Dispose() Serializer.SerializeElement<T>(String, T) Serializer.SerializeElement<T>(String, T[]) Serializer.SerializeElement<T>(String, T[], SerializationOption) Serializer.SerializeElement<T>(String, T[], String) Serializer.SerializeElement<T>(String, List<T>) Serializer.SerializeElement<T>(String, List<T>, SerializationOption) Serializer.SerializeElement<T>(String, List<T>, String) Serializer.SerializeElement<TKey, TValue>(String, Dictionary<TKey, TValue>) Serializer.GetVersionProvider<T>(T) Serializer.SerializeSubElement<T>(String, T, SerializationOption) Serializer.CanSerializeTypeAsAttribute(Type) Serializer.GetVersionAttributeNameFromVersionID(String) Serializer.ReleaseVersionProvider(VersionProvider) Serializer.SerializeVersionAttribute(VersionProvider) Serializer.ToString<T>(T) Serializer.FromString<T>(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public class BinarySerializer : Serializer, IDisposable, IAttributesSerializer, IElementsSerializer Constructors | Improve this Doc BinarySerializer(Stream, Serializer.SerializationMode) Declaration public BinarySerializer(Stream stream, Serializer.SerializationMode mode) Parameters Type Name Description System.IO.Stream stream Serializer.SerializationMode mode Methods | Improve this Doc Dispose(Boolean) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing Overrides Serializer.Dispose(Boolean) | Improve this Doc SerializeAttribute<T>(String, T) Declaration public override T SerializeAttribute<T>(string attributeName, T value) Parameters Type Name Description System.String attributeName T value Returns Type Description T Type Parameters Name Description T Overrides Reactive.Serialization.Serializer.SerializeAttribute<T>(System.String, T) | Improve this Doc SerializeElement<T>(String, T, SerializationOption) Declaration public override T SerializeElement<T>(string elementName, T value, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName T value SerializationOption serializationOptions Returns Type Description T Type Parameters Name Description T Overrides Reactive.Serialization.Serializer.SerializeElement<T>(System.String, T, Reactive.Serialization.SerializationOption) | Improve this Doc SerializeElement<T>(String, T[], String, SerializationOption) Declaration public override T[] SerializeElement<T>(string elementName, T[] array, string subElementName, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName T[] array System.String subElementName SerializationOption serializationOptions Returns Type Description T[] Type Parameters Name Description T Overrides Reactive.Serialization.Serializer.SerializeElement<T>(System.String, T[], System.String, Reactive.Serialization.SerializationOption) | Improve this Doc SerializeElement<T>(String, List<T>, String, SerializationOption) Declaration public override List<T> SerializeElement<T>(string elementName, List<T> list, string subElementName, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName System.Collections.Generic.List<T> <T> list System.String subElementName SerializationOption serializationOptions Returns Type Description System.Collections.Generic.List<T> <T> Type Parameters Name Description T Overrides Reactive.Serialization.Serializer.SerializeElement<T>(System.String, System.Collections.Generic.List<T>, System.String, Reactive.Serialization.SerializationOption) | Improve this Doc SerializeElement<TKey, TValue>(String, Dictionary<TKey, TValue>, SerializationOption) Declaration public override Dictionary<TKey, TValue> SerializeElement<TKey, TValue>(string elementName, Dictionary<TKey, TValue> dictionary, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName System.Collections.Generic.Dictionary<TKey, TValue> <TKey, TValue> dictionary SerializationOption serializationOptions Returns Type Description System.Collections.Generic.Dictionary<TKey, TValue> <TKey, TValue> Type Parameters Name Description TKey TValue Overrides Reactive.Serialization.Serializer.SerializeElement<TKey, TValue>(System.String, System.Collections.Generic.Dictionary<TKey, TValue>, Reactive.Serialization.SerializationOption) | Improve this Doc Skip(String) Declaration public override void Skip(string elementName) Parameters Type Name Description System.String elementName Overrides Serializer.Skip(String)"
  },
  "api/Reactive.Serialization.IAttributesSerializer.html": {
    "href": "api/Reactive.Serialization.IAttributesSerializer.html",
    "title": "Interface IAttributesSerializer | Reactive",
    "keywords": "Interface IAttributesSerializer Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public interface IAttributesSerializer Properties | Improve this Doc Mode Declaration Serializer.SerializationMode Mode { get; } Property Value Type Description Serializer.SerializationMode Methods | Improve this Doc SerializeAttribute<T>(String, T) Declaration T SerializeAttribute<T>(string attributeName, T value) Parameters Type Name Description System.String attributeName T value Returns Type Description T Type Parameters Name Description T"
  },
  "api/Reactive.Serialization.IElementsSerializer.html": {
    "href": "api/Reactive.Serialization.IElementsSerializer.html",
    "title": "Interface IElementsSerializer | Reactive",
    "keywords": "Interface IElementsSerializer Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public interface IElementsSerializer Properties | Improve this Doc Mode Declaration Serializer.SerializationMode Mode { get; } Property Value Type Description Serializer.SerializationMode Methods | Improve this Doc SerializeElement<T>(String, T) Declaration T SerializeElement<T>(string elementName, T value) Parameters Type Name Description System.String elementName T value Returns Type Description T Type Parameters Name Description T | Improve this Doc SerializeElement<T>(String, T, SerializationOption) Declaration T SerializeElement<T>(string elementName, T value, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName T value SerializationOption serializationOptions Returns Type Description T Type Parameters Name Description T | Improve this Doc SerializeElement<T>(String, T[]) Declaration T[] SerializeElement<T>(string elementName, T[] array) Parameters Type Name Description System.String elementName T[] array Returns Type Description T[] Type Parameters Name Description T | Improve this Doc SerializeElement<T>(String, T[], SerializationOption) Declaration T[] SerializeElement<T>(string elementName, T[] array, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName T[] array SerializationOption serializationOptions Returns Type Description T[] Type Parameters Name Description T | Improve this Doc SerializeElement<T>(String, T[], String) Declaration T[] SerializeElement<T>(string elementName, T[] array, string subElementName) Parameters Type Name Description System.String elementName T[] array System.String subElementName Returns Type Description T[] Type Parameters Name Description T | Improve this Doc SerializeElement<T>(String, T[], String, SerializationOption) Declaration T[] SerializeElement<T>(string elementName, T[] array, string subElementName, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName T[] array System.String subElementName SerializationOption serializationOptions Returns Type Description T[] Type Parameters Name Description T | Improve this Doc SerializeElement<T>(String, List<T>) Declaration List<T> SerializeElement<T>(string elementName, List<T> list) Parameters Type Name Description System.String elementName System.Collections.Generic.List<T> <T> list Returns Type Description System.Collections.Generic.List<T> <T> Type Parameters Name Description T | Improve this Doc SerializeElement<T>(String, List<T>, SerializationOption) Declaration List<T> SerializeElement<T>(string elementName, List<T> list, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName System.Collections.Generic.List<T> <T> list SerializationOption serializationOptions Returns Type Description System.Collections.Generic.List<T> <T> Type Parameters Name Description T | Improve this Doc SerializeElement<T>(String, List<T>, String) Declaration List<T> SerializeElement<T>(string elementName, List<T> list, string subElementName) Parameters Type Name Description System.String elementName System.Collections.Generic.List<T> <T> list System.String subElementName Returns Type Description System.Collections.Generic.List<T> <T> Type Parameters Name Description T | Improve this Doc SerializeElement<T>(String, List<T>, String, SerializationOption) Declaration List<T> SerializeElement<T>(string elementName, List<T> list, string subElementName, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName System.Collections.Generic.List<T> <T> list System.String subElementName SerializationOption serializationOptions Returns Type Description System.Collections.Generic.List<T> <T> Type Parameters Name Description T | Improve this Doc SerializeElement<TKey, TValue>(String, Dictionary<TKey, TValue>) Declaration Dictionary<TKey, TValue> SerializeElement<TKey, TValue>(string elementName, Dictionary<TKey, TValue> dictionary) Parameters Type Name Description System.String elementName System.Collections.Generic.Dictionary<TKey, TValue> <TKey, TValue> dictionary Returns Type Description System.Collections.Generic.Dictionary<TKey, TValue> <TKey, TValue> Type Parameters Name Description TKey TValue | Improve this Doc SerializeElement<TKey, TValue>(String, Dictionary<TKey, TValue>, SerializationOption) Declaration Dictionary<TKey, TValue> SerializeElement<TKey, TValue>(string elementName, Dictionary<TKey, TValue> dictionary, SerializationOption serializationOptions) Parameters Type Name Description System.String elementName System.Collections.Generic.Dictionary<TKey, TValue> <TKey, TValue> dictionary SerializationOption serializationOptions Returns Type Description System.Collections.Generic.Dictionary<TKey, TValue> <TKey, TValue> Type Parameters Name Description TKey TValue | Improve this Doc Skip(String) Declaration void Skip(string elementName) Parameters Type Name Description System.String elementName"
  },
  "api/Reactive.Serialization.ISerializable.html": {
    "href": "api/Reactive.Serialization.ISerializable.html",
    "title": "Interface ISerializable | Reactive",
    "keywords": "Interface ISerializable Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public interface ISerializable Methods | Improve this Doc SerializeAttributes(IAttributesSerializer, IVersionProvider) Declaration void SerializeAttributes(IAttributesSerializer serializer, IVersionProvider versionProvider) Parameters Type Name Description IAttributesSerializer serializer IVersionProvider versionProvider | Improve this Doc SerializeElements(IElementsSerializer, IVersionProvider) Declaration void SerializeElements(IElementsSerializer serializer, IVersionProvider versionProvider) Parameters Type Name Description IElementsSerializer serializer IVersionProvider versionProvider"
  },
  "api/Reactive.Serialization.ISerializationFilter.html": {
    "href": "api/Reactive.Serialization.ISerializationFilter.html",
    "title": "Interface ISerializationFilter | Reactive",
    "keywords": "Interface ISerializationFilter Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public interface ISerializationFilter Properties | Improve this Doc SkipSerialization Declaration bool SkipSerialization { get; } Property Value Type Description System.Boolean"
  },
  "api/Reactive.Serialization.IStringConvertible-1.html": {
    "href": "api/Reactive.Serialization.IStringConvertible-1.html",
    "title": "Interface IStringConvertible<T> | Reactive",
    "keywords": "Interface IStringConvertible<T> Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public interface IStringConvertible<out T> Type Parameters Name Description T Methods | Improve this Doc ConvertFromString(String) Declaration T ConvertFromString(string value) Parameters Type Name Description System.String value Returns Type Description T | Improve this Doc ConvertToString() Declaration string ConvertToString() Returns Type Description System.String"
  },
  "api/Reactive.Serialization.IVersionProvider.html": {
    "href": "api/Reactive.Serialization.IVersionProvider.html",
    "title": "Interface IVersionProvider | Reactive",
    "keywords": "Interface IVersionProvider Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax public interface IVersionProvider Methods | Improve this Doc GetVersionNumber() Declaration uint GetVersionNumber() Returns Type Description System.UInt32"
  },
  "api/Reactive.Serialization.SerializationOption.html": {
    "href": "api/Reactive.Serialization.SerializationOption.html",
    "title": "Enum SerializationOption | Reactive",
    "keywords": "Enum SerializationOption Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax [Flags] public enum SerializationOption Fields Name Description AppendContent CData Default DontInstantiateElements SerializeTypeName"
  },
  "api/Reactive.Serialization.SerializationVersionAttribute.html": {
    "href": "api/Reactive.Serialization.SerializationVersionAttribute.html",
    "title": "Class SerializationVersionAttribute | Reactive",
    "keywords": "Class SerializationVersionAttribute Inheritance System.Object System.Attribute SerializationVersionAttribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = false)] public class SerializationVersionAttribute : Attribute, _Attribute Constructors | Improve this Doc SerializationVersionAttribute(UInt32) Declaration public SerializationVersionAttribute(uint version) Parameters Type Name Description System.UInt32 version Properties | Improve this Doc Version Declaration public uint Version { get; } Property Value Type Description System.UInt32"
  },
  "api/Reactive.Serialization.Serializer.A.html": {
    "href": "api/Reactive.Serialization.Serializer.A.html",
    "title": "Class Serializer.A | Reactive",
    "keywords": "Class Serializer.A Inheritance System.Object Serializer.A Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :Reactive.Serialization Assembly :Reactive.dll Syntax [SerializationVersion(2U)] protected class A : ISerializable, IEquatable<Serializer.A> Fields | Improve this Doc Date Declaration public DateTime Date Field Value Type Description System.DateTime | Improve this Doc DoubleValue Declaration public double DoubleValue Field Value Type Description System.Double | Improve this Doc GUID Declaration public Guid GUID Field Value Type Description System.Guid Methods | Improve this Doc Equals(Serializer.A) Declaration public virtual bool Equals(Serializer.A other) Parameters Type Name Description Serializer.A other Returns Type Description System.Boolean Implements System.IEquatable<Reactive.Serialization.Serializer.A>.Equals(Reactive.Serialization.Serializer.A) | Improve this Doc SerializeAttributes(IAttributesSerializer, IVersionProvider) Declaration public void SerializeAttributes(IAttributesSerializer serializer, IVersionProvider versionProvider) Parameters Type Name Description IAttributesSerializer serializer IVersionProvider versionProvider Implements ISerializable.SerializeAttributes(IAttributesSerializer, IVersionProvider) | Improve this Doc SerializeElements(IElementsSerializer, IVersionProvider) Declaration public void SerializeElements(IElementsSerializer serializer, IVersionProvider versionProvider) Parameters Type Name Description IElementsSerializer serializer IVersionProvider versionProvider Implements ISerializable.SerializeElements(IElementsSerializer, IVersionProvider)"
  },
  "api_ai/ReactiveAI.Intelligence.Actions.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Actions.html",
    "title": "Namespace ReactiveAI.Intelligence.Actions | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Actions Classes ActionBase ActionBase<TContext> ActionCollection ActionSequence AiTransition BehaviourTransition Enums ActionStatus"
  },
  "api_ai/ReactiveAI.Intelligence.General.AIConstructor.html": {
    "href": "api_ai/ReactiveAI.Intelligence.General.AIConstructor.html",
    "title": "Class AIConstructor | Reactive",
    "keywords": "Class AIConstructor Inheritance System.Object AIConstructor Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.General Assembly :ReactiveAI.dll Syntax public abstract class AIConstructor Constructors | Improve this Doc View Source AIConstructor(IAICollection) Declaration protected AIConstructor(IAICollection collection) Parameters Type Name Description IAICollection collection Fields | Improve this Doc View Source A Declaration protected IAction A Field Value Type Description IAction | Improve this Doc View Source Ai Declaration protected IUtilityAI Ai Field Value Type Description IUtilityAI | Improve this Doc View Source B Declaration protected IBehaviour B Field Value Type Description IBehaviour | Improve this Doc View Source C Declaration protected IConsideration C Field Value Type Description IConsideration | Improve this Doc View Source Cc Declaration protected ICompositeConsideration Cc Field Value Type Description ICompositeConsideration | Improve this Doc View Source O Declaration protected IOption O Field Value Type Description IOption Properties | Improve this Doc View Source Actions Declaration public IActionCollection Actions { get; } Property Value Type Description IActionCollection | Improve this Doc View Source AIs Declaration public IAICollection AIs { get; } Property Value Type Description IAICollection | Improve this Doc View Source Behaviours Declaration public IBehaviourCollection Behaviours { get; } Property Value Type Description IBehaviourCollection | Improve this Doc View Source Collection Declaration public IAICollection Collection { get; protected set; } Property Value Type Description IAICollection | Improve this Doc View Source Considerations Declaration public IConsiderationCollection Considerations { get; } Property Value Type Description IConsiderationCollection | Improve this Doc View Source Options Declaration public IOptionCollection Options { get; } Property Value Type Description IOptionCollection Methods | Improve this Doc View Source ConfigureAI() Declaration protected abstract void ConfigureAI() | Improve this Doc View Source Create(String) Declaration public IUtilityAI Create(string name) Parameters Type Name Description System.String name Returns Type Description IUtilityAI | Improve this Doc View Source DefineActions() Declaration protected abstract void DefineActions() | Improve this Doc View Source DefineBehaviours() Declaration protected abstract void DefineBehaviours() | Improve this Doc View Source DefineConsiderations() Declaration protected abstract void DefineConsiderations() | Improve this Doc View Source DefineOptions() Declaration protected abstract void DefineOptions() | Improve this Doc View Source IsOkay(Boolean) Declaration protected void IsOkay(bool expression) Parameters Type Name Description System.Boolean expression"
  },
  "api_ai/ReactiveAI.Intelligence.General.Utility.html": {
    "href": "api_ai/ReactiveAI.Intelligence.General.Utility.html",
    "title": "Struct Utility | Reactive",
    "keywords": "Struct Utility Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace :ReactiveAI.Intelligence.General Assembly :ReactiveAI.dll Syntax [Serializable] public struct Utility : IEquatable<Utility>, IComparable<Utility> Constructors | Improve this Doc View Source Utility(Single) Declaration public Utility(float value) Parameters Type Name Description System.Single value | Improve this Doc View Source Utility(Single, Single) Declaration public Utility(float value, float weight) Parameters Type Name Description System.Single value System.Single weight Properties | Improve this Doc View Source Combined Declaration public float Combined { get; } Property Value Type Description System.Single | Improve this Doc View Source IsOne Declaration public bool IsOne { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsZero Declaration public bool IsZero { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Value Declaration public float Value { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Weight Declaration public float Weight { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source CompareTo(Utility) Declaration public int CompareTo(Utility other) Parameters Type Name Description Utility other Returns Type Description System.Int32 Implements System.IComparable<ReactiveAI.Intelligence.General.Utility>.CompareTo(ReactiveAI.Intelligence.General.Utility) | Improve this Doc View Source Equals(Utility) Declaration public bool Equals(Utility other) Parameters Type Name Description Utility other Returns Type Description System.Boolean Implements System.IEquatable<ReactiveAI.Intelligence.General.Utility>.Equals(ReactiveAI.Intelligence.General.Utility) | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Equality(Utility, Utility) Declaration public static bool operator ==(Utility a, Utility b) Parameters Type Name Description Utility a Utility b Returns Type Description System.Boolean | Improve this Doc View Source GreaterThan(Utility, Utility) Declaration public static bool operator>(Utility a, Utility b) Parameters Type Name Description Utility a Utility b Returns Type Description System.Boolean | Improve this Doc View Source GreaterThanOrEqual(Utility, Utility) Declaration public static bool operator >=(Utility a, Utility b) Parameters Type Name Description Utility a Utility b Returns Type Description System.Boolean | Improve this Doc View Source Implicit(Single to Utility) Declaration public static implicit operator Utility(float a) Parameters Type Name Description System.Single a Returns Type Description Utility | Improve this Doc View Source Inequality(Utility, Utility) Declaration public static bool operator !=(Utility a, Utility b) Parameters Type Name Description Utility a Utility b Returns Type Description System.Boolean | Improve this Doc View Source LessThan(Utility, Utility) Declaration public static bool operator <(Utility a, Utility b) Parameters Type Name Description Utility a Utility b Returns Type Description System.Boolean | Improve this Doc View Source LessThanOrEqual(Utility, Utility) Declaration public static bool operator <=(Utility a, Utility b) Parameters Type Name Description Utility a Utility b Returns Type Description System.Boolean Extension Methods ValueType.Clamp<Utility>(Utility, Utility)"
  },
  "api_ai/ReactiveAI.Intelligence.General.html": {
    "href": "api_ai/ReactiveAI.Intelligence.General.html",
    "title": "Namespace ReactiveAI.Intelligence.General | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.General Classes AIConstructor Structs Utility"
  },
  "api_ai/ReactiveAI.Intelligence.Measures.Chebyshev.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Measures.Chebyshev.html",
    "title": "Class Chebyshev | Reactive",
    "keywords": "Class Chebyshev Inheritance System.Object Chebyshev Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Measures Assembly :ReactiveAI.dll Syntax public sealed class Chebyshev : IMeasure, IAIPrototype<IMeasure> Methods | Improve this Doc View Source Calculate(ICollection<Utility>) Declaration public float Calculate(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Single Implements IMeasure.Calculate(ICollection<Utility>) | Improve this Doc View Source Clone() Declaration public IMeasure Clone() Returns Type Description IMeasure Implements IAIPrototype<IMeasure>.Clone()"
  },
  "api_ai/ReactiveAI.Intelligence.Measures.ConstrainedChebyshev.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Measures.ConstrainedChebyshev.html",
    "title": "Class ConstrainedChebyshev | Reactive",
    "keywords": "Class ConstrainedChebyshev Inheritance System.Object ConstrainedChebyshev Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Measures Assembly :ReactiveAI.dll Syntax public sealed class ConstrainedChebyshev : IMeasure, IAIPrototype<IMeasure> Constructors | Improve this Doc View Source ConstrainedChebyshev() Declaration public ConstrainedChebyshev() | Improve this Doc View Source ConstrainedChebyshev(Single) Declaration public ConstrainedChebyshev(float lowerBound) Parameters Type Name Description System.Single lowerBound Properties | Improve this Doc View Source LowerBound If the combined value of any utility is below this, the value of this measure will be 0. Declaration public float LowerBound { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Calculate(ICollection<Utility>) Declaration public float Calculate(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Single Implements IMeasure.Calculate(ICollection<Utility>) | Improve this Doc View Source Clone() Declaration public IMeasure Clone() Returns Type Description IMeasure Implements IAIPrototype<IMeasure>.Clone()"
  },
  "api_ai/ReactiveAI.Intelligence.Measures.ConstrainedWeightedMetrics.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Measures.ConstrainedWeightedMetrics.html",
    "title": "Class ConstrainedWeightedMetrics | Reactive",
    "keywords": "Class ConstrainedWeightedMetrics Inheritance System.Object ConstrainedWeightedMetrics Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Measures Assembly :ReactiveAI.dll Syntax public sealed class ConstrainedWeightedMetrics : IMeasure, IAIPrototype<IMeasure> Constructors | Improve this Doc View Source ConstrainedWeightedMetrics() Declaration public ConstrainedWeightedMetrics() | Improve this Doc View Source ConstrainedWeightedMetrics(Single) Declaration public ConstrainedWeightedMetrics(float pNorm) Parameters Type Name Description System.Single pNorm | Improve this Doc View Source ConstrainedWeightedMetrics(Single, Single) Declaration public ConstrainedWeightedMetrics(float pNorm, float lowerBound) Parameters Type Name Description System.Single pNorm System.Single lowerBound Properties | Improve this Doc View Source LowerBound If the combined value of any utility is below this, the value of this measure will be 0. Declaration public float LowerBound { get; set; } Property Value Type Description System.Single | Improve this Doc View Source PNorm Declaration public float PNorm { get; set; } Property Value Type Description System.Single | Improve this Doc View Source PNormMax Declaration public float PNormMax { get; } Property Value Type Description System.Single | Improve this Doc View Source PNormMin Declaration public float PNormMin { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source Calculate(ICollection<Utility>) Declaration public float Calculate(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Single Implements IMeasure.Calculate(ICollection<Utility>) | Improve this Doc View Source Clone() Declaration public IMeasure Clone() Returns Type Description IMeasure Implements IAIPrototype<IMeasure>.Clone()"
  },
  "api_ai/ReactiveAI.Intelligence.Measures.MultiplicativePseudoMeasure.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Measures.MultiplicativePseudoMeasure.html",
    "title": "Class MultiplicativePseudoMeasure | Reactive",
    "keywords": "Class MultiplicativePseudoMeasure Inheritance System.Object MultiplicativePseudoMeasure Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Measures Assembly :ReactiveAI.dll Syntax public sealed class MultiplicativePseudoMeasure : IMeasure, IAIPrototype<IMeasure> Methods | Improve this Doc View Source Calculate(ICollection<Utility>) Declaration public float Calculate(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Single Implements IMeasure.Calculate(ICollection<Utility>) | Improve this Doc View Source Clone() Declaration public IMeasure Clone() Returns Type Description IMeasure Implements IAIPrototype<IMeasure>.Clone()"
  },
  "api_ai/ReactiveAI.Intelligence.Measures.WeightedMetrics.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Measures.WeightedMetrics.html",
    "title": "Class WeightedMetrics | Reactive",
    "keywords": "Class WeightedMetrics Inheritance System.Object WeightedMetrics Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Measures Assembly :ReactiveAI.dll Syntax public sealed class WeightedMetrics : IMeasure, IAIPrototype<IMeasure> Constructors | Improve this Doc View Source WeightedMetrics() Declaration public WeightedMetrics() | Improve this Doc View Source WeightedMetrics(Single) Declaration public WeightedMetrics(float pNorm) Parameters Type Name Description System.Single pNorm Fields | Improve this Doc View Source PNormMax Declaration public readonly float PNormMax Field Value Type Description System.Single | Improve this Doc View Source PNormMin Declaration public readonly float PNormMin Field Value Type Description System.Single Properties | Improve this Doc View Source PNorm Declaration public float PNorm { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Calculate(ICollection<Utility>) Declaration public float Calculate(ICollection<Utility> elements) Parameters Type Name Description System.Collections.Generic.ICollection<T> < Utility > elements Returns Type Description System.Single Implements IMeasure.Calculate(ICollection<Utility>) | Improve this Doc View Source Clone() Declaration public IMeasure Clone() Returns Type Description IMeasure Implements IAIPrototype<IMeasure>.Clone()"
  },
  "api_ai/ReactiveAI.Intelligence.Measures.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Measures.html",
    "title": "Namespace ReactiveAI.Intelligence.Measures | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Measures Classes Chebyshev ConstrainedChebyshev ConstrainedWeightedMetrics MultiplicativePseudoMeasure WeightedMetrics"
  },
  "api_ai/ReactiveAI.Intelligence.Options.ConstantUtilityOption.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Options.ConstantUtilityOption.html",
    "title": "Class ConstantUtilityOption | Reactive",
    "keywords": "Class ConstantUtilityOption Inheritance System.Object CompositeConsideration Option ConstantUtilityOption Inherited Members Option.Action Option.SetAction(IAction) Option.SetAction(String) CompositeConsideration.NameID CompositeConsideration.Measure CompositeConsideration.DefaultUtil CompositeConsideration.Utility CompositeConsideration.Weight CompositeConsideration.IsInverted CompositeConsideration.AddConsideration(IConsideration) CompositeConsideration.AddConsideration(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Options Assembly :ReactiveAI.dll Syntax public sealed class ConstantUtilityOption : Option, IOption, ICompositeConsideration, IConsideration, IAIPrototype<IConsideration> Constructors | Improve this Doc View Source ConstantUtilityOption() Initializes a new instance of the ConstantUtilityOption class. Declaration public ConstantUtilityOption() | Improve this Doc View Source ConstantUtilityOption(String, IOptionCollection) Declaration public ConstantUtilityOption(string nameId, IOptionCollection collection) Parameters Type Name Description System.String nameId IOptionCollection collection Methods | Improve this Doc View Source Clone() Declaration public override IConsideration Clone() Returns Type Description IConsideration Overrides Option.Clone() | Improve this Doc View Source Consider(IContext) Calculates the utility given the specified context. Declaration public override void Consider(IContext context) Parameters Type Name Description IContext context The context. Overrides Option.Consider(IContext)"
  },
  "api_ai/ReactiveAI.Intelligence.Options.Option.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Options.Option.html",
    "title": "Class Option | Reactive",
    "keywords": "Class Option Inheritance System.Object CompositeConsideration Option Inherited Members CompositeConsideration.NameID CompositeConsideration.Measure CompositeConsideration.DefaultUtil CompositeConsideration.Utility CompositeConsideration.Weight CompositeConsideration.IsInverted CompositeConsideration.AddConsideration(IConsideration) CompositeConsideration.AddConsideration(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Options Assembly :ReactiveAI.dll Syntax public class Option : CompositeConsideration, IOption, ICompositeConsideration, IConsideration, IAIPrototype<IConsideration> Constructors | Improve this Doc View Source Option() Initializes a new instance of the Crystal.Option class. Declaration public Option() | Improve this Doc View Source Option(Option) Declaration protected Option(Option other) Parameters Type Name Description Option other | Improve this Doc View Source Option(String, IOptionCollection) Declaration public Option(string nameId, IOptionCollection collection) Parameters Type Name Description System.String nameId IOptionCollection collection Properties | Improve this Doc View Source Action The action to be executed when this option is selected. Declaration public IAction Action { get; } Property Value Type Description IAction Implements IOption.Action Methods | Improve this Doc View Source Clone() Declaration public override IConsideration Clone() Returns Type Description IConsideration Overrides CompositeConsideration.Clone() Implements IAIPrototype<IConsideration>.Clone() | Improve this Doc View Source Consider(IContext) Calculates the utility for this option given the provided context. Declaration public override void Consider(IContext context) Parameters Type Name Description IContext context The context. Overrides CompositeConsideration.Consider(IContext) Implements IConsideration.Consider(IContext) | Improve this Doc View Source SetAction(IAction) Declaration public bool SetAction(IAction action) Parameters Type Name Description IAction action Returns Type Description System.Boolean Implements IOption.SetAction(IAction) | Improve this Doc View Source SetAction(String) Declaration public bool SetAction(string actionId) Parameters Type Name Description System.String actionId Returns Type Description System.Boolean Implements IOption.SetAction(String)"
  },
  "api_ai/ReactiveAI.Intelligence.Options.OptionCollection.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Options.OptionCollection.html",
    "title": "Class OptionCollection | Reactive",
    "keywords": "Class OptionCollection Inheritance System.Object OptionCollection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Options Assembly :ReactiveAI.dll Syntax public class OptionCollection : IOptionCollection Constructors | Improve this Doc View Source OptionCollection(IActionCollection, IConsiderationCollection) Declaration public OptionCollection(IActionCollection actionCollection, IConsiderationCollection considerationCollection) Parameters Type Name Description IActionCollection actionCollection IConsiderationCollection considerationCollection Properties | Improve this Doc View Source Actions Declaration public IActionCollection Actions { get; } Property Value Type Description IActionCollection Implements IOptionCollection.Actions | Improve this Doc View Source Considerations Declaration public IConsiderationCollection Considerations { get; } Property Value Type Description IConsiderationCollection Implements IOptionCollection.Considerations Methods | Improve this Doc View Source Add(IOption) Declaration public bool Add(IOption option) Parameters Type Name Description IOption option Returns Type Description System.Boolean Implements IOptionCollection.Add(IOption) | Improve this Doc View Source Clear() Declaration public void Clear() Implements IOptionCollection.Clear() | Improve this Doc View Source ClearAll() Declaration public void ClearAll() Implements IOptionCollection.ClearAll() | Improve this Doc View Source Contains(String) Declaration public bool Contains(string nameId) Parameters Type Name Description System.String nameId Returns Type Description System.Boolean Implements IOptionCollection.Contains(String) | Improve this Doc View Source Create(String) Declaration public IOption Create(string nameId) Parameters Type Name Description System.String nameId Returns Type Description IOption Implements IOptionCollection.Create(String)"
  },
  "api_ai/ReactiveAI.Intelligence.Options.OptionConstructor.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Options.OptionConstructor.html",
    "title": "Class OptionConstructor | Reactive",
    "keywords": "Class OptionConstructor Inheritance System.Object OptionConstructor Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Options Assembly :ReactiveAI.dll Syntax public static class OptionConstructor Methods | Improve this Doc View Source Chebyshev() Declaration public static IOption Chebyshev() Returns Type Description IOption | Improve this Doc View Source Chebyshev(String, IOptionCollection) Declaration public static IOption Chebyshev(string nameId, IOptionCollection collection) Parameters Type Name Description System.String nameId IOptionCollection collection Returns Type Description IOption | Improve this Doc View Source ConstrainedChebyshev(Single) Declaration public static IOption ConstrainedChebyshev(float lowerBound = 0F) Parameters Type Name Description System.Single lowerBound Returns Type Description IOption | Improve this Doc View Source ConstrainedChebyshev(String, IOptionCollection, Single) Declaration public static IOption ConstrainedChebyshev(string nameId, IOptionCollection collection, float lowerBound = 0F) Parameters Type Name Description System.String nameId IOptionCollection collection System.Single lowerBound Returns Type Description IOption | Improve this Doc View Source ConstrainedWeightedMetrics(Single, Single) Declaration public static IOption ConstrainedWeightedMetrics(float pNorm = 2F, float lowerBound = 0F) Parameters Type Name Description System.Single pNorm System.Single lowerBound Returns Type Description IOption | Improve this Doc View Source ConstrainedWeightedMetrics(String, IOptionCollection, Single, Single) Declaration public static IOption ConstrainedWeightedMetrics(string nameId, IOptionCollection collection, float pNorm = 2F, float lowerBound = 0F) Parameters Type Name Description System.String nameId IOptionCollection collection System.Single pNorm System.Single lowerBound Returns Type Description IOption | Improve this Doc View Source WeightedMetrics(Single) Declaration public static IOption WeightedMetrics(float pNorm = 2F) Parameters Type Name Description System.Single pNorm Returns Type Description IOption | Improve this Doc View Source WeightedMetrics(String, IOptionCollection, Single) Declaration public static IOption WeightedMetrics(string nameId, IOptionCollection collection, float pNorm = 2F) Parameters Type Name Description System.String nameId IOptionCollection collection System.Single pNorm Returns Type Description IOption"
  },
  "api_ai/ReactiveAI.Intelligence.Options.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Options.html",
    "title": "Namespace ReactiveAI.Intelligence.Options | Reactive",
    "keywords": "Namespace ReactiveAI.Intelligence.Options Classes ConstantUtilityOption Option OptionCollection OptionConstructor"
  },
  "api_ai/ReactiveAI.Intelligence.Scheduling.CommandAction.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Scheduling.CommandAction.html",
    "title": "Delegate CommandAction | Reactive",
    "keywords": "Delegate CommandAction Namespace :ReactiveAI.Intelligence.Scheduling Assembly :ReactiveAI.dll Syntax public delegate void CommandAction();"
  },
  "api_ai/ReactiveAI.Intelligence.Scheduling.CommandStream.html": {
    "href": "api_ai/ReactiveAI.Intelligence.Scheduling.CommandStream.html",
    "title": "Class CommandStream | Reactive",
    "keywords": "Class CommandStream Inheritance System.Object CommandStream Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :ReactiveAI.Intelligence.Scheduling Assembly :ReactiveAI.dll Syntax public sealed class CommandStream Constructors | Improve this Doc View Source CommandStream(Int32) Initializes a new instance of the class. Declaration public CommandStream(int initialQueueSize) Parameters Type Name Description System.Int32 initialQueueSize Initial queue size. Properties | Improve this Doc View Source CommandsCount The number of scheduled commands in the queue. Declaration public int CommandsCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ExtraTimeNeeded Gets the accumulated number of seconds the updates were overdue this frame, i.e. sum of all updates. Declaration public float ExtraTimeNeeded { get; } Property Value Type Description System.Single | Improve this Doc View Source MaxProcessingTime The maximum Time in milliseconds the Process() is allowed to take. Declaration public double MaxProcessingTime { get; set; } Property Value Type Description System.Double The max process Time. | Improve this Doc View Source ProcessedCount The number of items in the queue that were processed during the previous cycle. Declaration public int ProcessedCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalMilliseconds Total milliseconds used on the last Process(). Declaration public double TotalMilliseconds { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source Add(DeferredCommand) Declaration public IDeferredCommandHandle Add(DeferredCommand cmd) Parameters Type Name Description DeferredCommand cmd Returns Type Description IDeferredCommandHandle | Improve this Doc View Source Process() Processes as many items as possible withing the given Time limits. Declaration public void Process()"
  }
}